const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/apiConverter-B77FyzsP.js","assets/js/Point2D-COgQ1fyf.js","assets/js/Envelope2D-Co2MCTM2.js","assets/js/ProjectionTransformation-C91QiveH.js","assets/js/Transformation2D-BGxYmbTi.js","assets/js/SimpleGeometryCursor-B92kdZ15.js","assets/js/test-Dp3_P59c.js","assets/js/index-CulM0VMq.js","assets/js/vendor-CHjNVy30.js","assets/css/index-DXVkK3IA.css","assets/js/station-CTe-uNfl.js","assets/css/test-D2ol9zJk.css","assets/js/OperatorDefinitions-DP7_WWTp.js","assets/js/jsonConverter-CA3f99zM.js"])))=>i.map(i=>d[i]);
import{NonSimpleResult as D}from"./OperatorDefinitions-DP7_WWTp.js";import{execute as R}from"./affineTransformOperator-BJPP_MSm.js";import{a as N}from"./index-CulM0VMq.js";import{ba as x,dA as _,gB as P,gT as $,oi as L}from"./test-Dp3_P59c.js";import{oj as ht}from"./test-Dp3_P59c.js";import{u as h,a as A,s as E,c as q,i as I}from"./operatorGeodesicBuffer-H8vp5HWX.js";import{m as B}from"./geodeticAreaOperator-Dc8Egcrb.js";import{f as Et}from"./geodeticAreaOperator-Dc8Egcrb.js";import{l as V}from"./geodeticDensifyOperator-BOiZGpym.js";import{g as It}from"./geodeticDensifyOperator-BOiZGpym.js";import{isSimple as F}from"./simplifyOGCOperator-BTcOPVjc.js";import H from"./Transformation-DBop5vbd.js";import{i as Vt}from"./areaOperator-CF0CMfXq.js";import{x as Z,l as k,f as J}from"./operatorBuffer-Cx7VpDNA.js";import{getSpatialReference as p,fromGeometry as r,fromSpatialReference as c,toPolygon as M,toGeometry as f}from"./apiConverter-B77FyzsP.js";import{p as Ht}from"./centroidOperator-C37lfESI.js";import{i as kt}from"./clipOperator-ev6YmJNX.js";import{u as Kt}from"./containsOperator-B4fMupps.js";import{q as K,D as Q,_ as U,w as W}from"./operatorConvexHull-CYolMLba.js";import{t as X}from"./OperatorCrosses-CTyKKtvH.js";import{i as Ut}from"./cutOperator-D6wfy_qU.js";import{l as Xt}from"./densifyOperator-DQPR98ZY.js";import{m as er}from"./differenceOperator-B7HTQbDF.js";import{n as Y}from"./ProjectionTransformation-C91QiveH.js";import{i as rr}from"./distanceOperator-DD2T9oaQ.js";import{l as nr}from"./equalsOperator-Cfaizu-j.js";import{c as ar}from"./generalizeOperator-CiY_LX3f.js";import{l as ir}from"./intersectionOperator-BPga79Qg.js";import{p as pr}from"./intersectsOperator-fAAlOZmG.js";import{c as lr}from"./labelPointOperator-CYZqEbZV.js";import{n as $r}from"./lengthOperator-uVSoOS9y.js";import{D as ee,j as te,w as re}from"./operatorOffset-48NX4oIB.js";import{t as oe}from"./OperatorOverlaps-CUzGj_dk.js";import{g as yr}from"./proximityOperator-DQVy7KMt.js";import{f as dr}from"./relateOperator-BabHP96O.js";import{f as vr}from"./simplifyOperator-BJOdlF7u.js";import{i as jr}from"./symmetricDifferenceOperator-Dadc1G7c.js";import{t as ne}from"./OperatorTouches-53k47eEb.js";import{s as se,e as ae,r as ce}from"./operatorUnion-Dnz-1JyA.js";import{t as ie}from"./OperatorWithin-BbP4CG4D.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-COgQ1fyf.js";import"./vendor-CHjNVy30.js";import"./station-CTe-uNfl.js";import"./Envelope2D-Co2MCTM2.js";import"./Transformation2D-BGxYmbTi.js";import"./jsonConverter-CA3f99zM.js";import"./operatorGeodeticDensify-8Ec36T5X.js";import"./OperatorSimplifyOGC-fGf7Y7f9.js";import"./GeometryCleaner-BEJM7I4l-CHRCTg3I.js";import"./OperatorGeneralize-4Wr0-v22.js";import"./Centroid-DZi-eb9F-Dnmmqwqi.js";import"./operatorIntersection-BQTE4h3G.js";import"./OperatorIntersects-CAqUy320.js";import"./OperatorProximity-C5cyZoBN.js";import"./operatorSimplify-C-s1BK7B.js";let y,d,g,v,w;function T(){return!!y&&E()}async function G(){if(!T()){const[e]=await Promise.all([N(()=>import("./apiConverter-B77FyzsP.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13])),h()]);y=e.fromGeometry,d=e.fromSpatialReference,g=e.getSpatialReference,v=e.toPolygon,w=A()}}function ue(e,t,n={}){let{curveType:s="geodesic",maxDeviation:o=NaN,unit:u}=n;u&&(t=x(t,u,"meters"),o&&(o=x(o,u,"meters")));const a=g(e);return v(I(y(e),d(a),P[s],t,o),a)}function pe(e,t,n={}){let{curveType:s="geodesic",maxDeviation:o=NaN,union:u=!1,unit:a}=n;a&&(t=t.map((m=>x(m,a,"meters"))),o&&(o=x(o,a,"meters")));const i=e.map(y),l=g(e);return q(i,d(l),P[s],t,o,u).map((m=>v(m,l))).filter(_)}const bt=Object.freeze(Object.defineProperty({__proto__:null,execute:ue,executeMany:pe,isLoaded:T,load:G,get supportsCurves(){return w}},Symbol.toStringTag,{value:"Module"}));function me(e,t,n={}){const{unit:s}=n,o=p(e);return s&&(t=$(t,s,o)),M(J(r(e),c(o),t),o)}function le(e,t,n={}){let{maxDeviation:s=NaN,maxVerticesInFullCircle:o=96,union:u=!1,unit:a}=n;const i=p(e);a&&(t=t.map((m=>$(m,a,i))),s&&(s=$(s,a,i)));const l=e.map(r);return k(l,c(i),t,s,o,u).map((m=>M(m,i))).filter(_)}const fe=Z(),jt=Object.freeze(Object.defineProperty({__proto__:null,execute:me,executeMany:le,supportsCurves:fe},Symbol.toStringTag,{value:"Module"}));function $e(e){const t=p(e);return f(W(r(e)),t)}function xe(e,t={}){const{merge:n=!1}=t,s=e.map(r),o=p(e);return U(s,n).map((u=>f(u,o)))}function ye(e){return Q(r(e))}const _e=K(),St=Object.freeze(Object.defineProperty({__proto__:null,execute:$e,executeMany:xe,isConvex:ye,supportsCurves:_e},Symbol.toStringTag,{value:"Module"})),b=new X;function de(e){const t=p(e);return b.accelerateGeometry(r(e),c(t),1)}function ge(e,t){return b.execute(r(e),r(t),c(e.spatialReference),null)}const ve=b.supportsCurves(),Ot=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:de,execute:ge,supportsCurves:ve},Symbol.toStringTag,{value:"Module"})),j=new Y;function be(e){const t=p(e);return j.accelerateGeometry(r(e),c(t),1)}function je(e,t){return j.execute(r(e),r(t),c(e.spatialReference))}const Se=j.supportsCurves(),Ct=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:be,execute:je,supportsCurves:Se},Symbol.toStringTag,{value:"Module"})),z={round:0,bevel:1,miter:2,square:3};function Oe(e,t,n={}){const{miterLimit:s=10,flattenError:o=0,joins:u="round",unit:a}=n,i=p(e);return a&&(t=$(t,a,i)),f(re(r(e),c(i),t,z[u],s,o),i)}function Ce(e,t,n={}){const{miterLimit:s=10,flattenError:o=0,joins:u="round",unit:a}=n,i=p(e);a&&(t=$(t,a,i));const l=e.map(r);return te(l,c(i),t,z[u],s,o).map((m=>f(m,i))).filter(_)}const Pe=ee(),Pt=Object.freeze(Object.defineProperty({__proto__:null,execute:Oe,executeMany:Ce,supportsCurves:Pe},Symbol.toStringTag,{value:"Module"})),S=new oe;function Me(e){const t=p(e);return S.accelerateGeometry(r(e),c(t),1)}function we(e,t){return S.execute(r(e),r(t),c(e.spatialReference),null)}const Te=S.supportsCurves(),Mt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Me,execute:we,supportsCurves:Te},Symbol.toStringTag,{value:"Module"})),O=new ne;function Ge(e){const t=p(e);return O.accelerateGeometry(r(e),c(t),1)}function ze(e,t){return O.execute(r(e),r(t),c(e.spatialReference),null)}const De=O.supportsCurves(),wt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Ge,execute:ze,supportsCurves:De},Symbol.toStringTag,{value:"Module"}));function Re(e,t){const n=p(e);return f(ce(r(e),r(t),c(n)),n)}function Ne(e){const t=e.map(r),n=p(e);return f(ae(t,c(n)),n)}const Le=se(),Tt=Object.freeze(Object.defineProperty({__proto__:null,execute:Re,executeMany:Ne,supportsCurves:Le},Symbol.toStringTag,{value:"Module"})),C=new ie;function he(e){const t=p(e);return C.accelerateGeometry(r(e),c(t),1)}function Ae(e,t){return C.execute(r(e),r(t),c(e.spatialReference),null)}const Ee=C.supportsCurves(),Gt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:he,execute:Ae,supportsCurves:Ee},Symbol.toStringTag,{value:"Module"}));function zt(e,t,n,s){const o=new H().rotate(t,n,s);return R(e,o)}const qe=new Set([5,6,7,10,11,12]);function Dt(e){const t=new D;return!F(e,t)&&qe.has(t.m_reason)}async function Rt(){await Promise.all([B(),G(),V(),L()])}export{Vt as area,jt as buffer,Ht as centroid,kt as clip,Kt as contains,St as convexHull,Ot as crosses,Ut as cut,Xt as densify,er as difference,Ct as disjoint,rr as distance,nr as equals,ar as generalize,bt as geodesicBuffer,Et as geodeticArea,It as geodeticDensify,ht as geodeticLength,ir as intersection,pr as intersects,Dt as isSelfIntersecting,lr as labelPoint,$r as length,Rt as loadAll,Pt as offset,Mt as overlaps,yr as proximity,dr as relate,zt as rotate,vr as simplify,jr as symmetricDifference,wt as touches,Tt as union,Gt as within};

import{H as f,fV as y,du as m}from"./test-Dp3_P59c.js";import{t as j}from"./query-D7rDZ32y.js";import{g as R}from"./FeatureSet-DR2_MLz0.js";import{c as p}from"./labelingInfo-HpcBILMX.js";import"./index-CulM0VMq.js";import"./vendor-CHjNVy30.js";import"./station-CTe-uNfl.js";import"./pbfQueryUtils-DPE1auIa.js";import"./pbf-JmGe42-A.js";import"./memoryEstimations-T_QTZf5l.js";import"./OptimizedFeature-99IiHQtf.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-3rRSqsEH.js";import"./SimpleRenderer-Cv_4-yU7.js";import"./commonProperties-Cz4LY7so.js";import"./colorRamps-B0gQZwFY.js";import"./ColorStop-Cu9MX0m5.js";import"./visualVariableUtils-CZtJQX17.js";import"./jsonUtils-C0_9DqtZ.js";import"./defaults3D-B9tjgcmU.js";import"./defaults-B2ew532g.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-U8EJ9Zmb.js";import"./diffUtils-CRH5h29A.js";import"./RendererLegendOptions-BX0ZTuxr.js";import"./styleUtils-B7fY0eUg.js";import"./NormalizationBinParametersMixin-D7jY13wx.js";import"./labelUtils-BD42FNJJ.js";function h(e,o){const t=e.toJSON();return t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t.outFields&&!o?.returnCountOnly?t.outFields.includes("*")?t.outFields="*":t.outFields=t.outFields.join(","):delete t.outFields,t.outSR&&(t.outSR=y(t.outSR)),t.dynamicDataSource&&(t.layer=JSON.stringify({source:t.dynamicDataSource}),delete t.dynamicDataSource),t}async function F(e,o,t){const i=await l(e,o,t),r=i.data,s=r.geometryType,n=r.spatialReference,a={};for(const c of r.relatedRecordGroups){const u={fields:void 0,geometryType:s,spatialReference:n,hasZ:!!r.hasZ,hasM:!!r.hasM,features:c.relatedRecords};if(c.objectId!=null)a[c.objectId]=u;else for(const d of Object.keys(c))d!=="relatedRecords"&&(a[c[d]]=u)}return{...i,data:a}}async function b(e,o,t){const i=await l(e,o,t,{returnCountOnly:!0}),r=i.data,s={};for(const n of r.relatedRecordGroups)n.objectId!=null&&(s[n.objectId]=n.count);return{...i,data:s}}async function l(e,o,t={},i){const r=j({...e.query,f:"json",...i,...h(o,i)});return f(e.path+"/queryRelatedRecords",{...t,query:{...t.query,...r}})}async function U(e,o,t){o=p.from(o);const i=m(e);return F(i,o,t).then((r=>{const s=r.data,n={};return Object.keys(s).forEach((a=>n[a]=R.fromJSON(s[a]))),n}))}async function W(e,o,t){o=p.from(o);const i=m(e);return b(i,o,{...t}).then((r=>r.data))}export{U as executeRelationshipQuery,W as executeRelationshipQueryForCount};

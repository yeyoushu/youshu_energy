const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/featureLayerUtils-DFPHajxr.js","assets/js/index-CulM0VMq.js","assets/js/vendor-CHjNVy30.js","assets/css/index-DXVkK3IA.css","assets/js/test-Dp3_P59c.js","assets/js/station-CTe-uNfl.js","assets/css/test-D2ol9zJk.css","assets/js/originUtils-TS7VWtkB.js","assets/js/utils-BeWH20Zb.js","assets/js/jsonContext-BGln5sw3.js","assets/js/saveUtils-CtKjcsNq.js","assets/js/fetchService-C9db-vkp.js","assets/js/FeatureLayerSource-CqG_Qqsz.js","assets/js/MeshLocalVertexSpace-BIS3_7WL.js","assets/js/meshVertexSpaceUtils-DJqF3X5b.js","assets/js/External-DpL5W0tO.js","assets/js/infoFor3D-VMSlSy0z.js","assets/js/MeshTransform-DD5i_qG7.js","assets/js/quat-LJUBQ7U8.js","assets/js/axisAngleDegrees-7e8IY39v.js","assets/js/editingSupport-BigvaAS5.js","assets/js/EditBusLayer-tgFZCz6v.js","assets/js/clientSideDefaults-BGTRnQvd.js","assets/js/QueryEngineCapabilities-CsRUnGk7.js","assets/js/defaultsJSON-GKolV7NZ.js","assets/js/QueryTask-OsVRS9TU.js","assets/js/executeForIds-B7TBDwdz.js","assets/js/query-D7rDZ32y.js","assets/js/pbfQueryUtils-DPE1auIa.js","assets/js/pbf-JmGe42-A.js","assets/js/memoryEstimations-T_QTZf5l.js","assets/js/OptimizedFeature-99IiHQtf.js","assets/js/OptimizedFeatureSet-BR8EEvDc.js","assets/js/queryZScale-3rRSqsEH.js","assets/js/executeQueryJSON-DY3OMOWy.js","assets/js/FeatureSet-DR2_MLz0.js","assets/js/featureConversionUtils-BISEwGRc.js","assets/js/labelingInfo-HpcBILMX.js","assets/js/SimpleRenderer-Cv_4-yU7.js","assets/js/commonProperties-Cz4LY7so.js","assets/js/colorRamps-B0gQZwFY.js","assets/js/ColorStop-Cu9MX0m5.js","assets/js/visualVariableUtils-CZtJQX17.js","assets/js/jsonUtils-C0_9DqtZ.js","assets/js/defaults3D-B9tjgcmU.js","assets/js/defaults-B2ew532g.js","assets/js/UniqueValueRenderer-U8EJ9Zmb.js","assets/js/diffUtils-CRH5h29A.js","assets/js/RendererLegendOptions-BX0ZTuxr.js","assets/js/styleUtils-B7fY0eUg.js","assets/js/NormalizationBinParametersMixin-D7jY13wx.js","assets/js/labelUtils-BD42FNJJ.js","assets/js/editsZScale-DaIJOTHU.js","assets/js/TopFeaturesQuery-DboWWKpJ.js","assets/js/AttributeBinsQuery-D_VzJKss.js","assets/js/queryUtils-BylZ_vR4.js","assets/js/json-Wa8cmqdu.js","assets/js/FixedIntervalBinParameters-CoCzclvP.js"])))=>i.map(i=>d[i]);
import{a as T}from"./index-CulM0VMq.js";import{iP as W,bt as Z,aw as L,s as h,a_ as z,b0 as B,de as H,bx as U,V as E,j2 as M,v as s,lb as K,e8 as X,d as P,w as a,x as D,ax as Y,fq as ee,fu as te,fr as re,fs as ie,ft as se,fv as oe,bI as ae,fw as ne,f as le,fU as ue,F as pe,bw as de,dv as $,I as ye,dg as R,iV as x,iL as ce,p as he,iM as me,gx as fe,ey as be,cI as ge,f6 as we,H as _e,dx as Te,iW as ve,d9 as d,i7 as Fe,kB as Se,bQ as O,fx as Ie,iX as Ee,dw as v,L as C,j5 as $e,lc as De,fy as Oe,ld as Ce,iZ as qe,dE as je,i_ as Le,ga as Me}from"./test-Dp3_P59c.js";import{k as Pe,V as Re}from"./FeatureLayerBase-CyFKe2Eq.js";import{i as xe}from"./editsZScale-DaIJOTHU.js";import{t as A}from"./queryZScale-3rRSqsEH.js";import{g as J}from"./FeatureSet-DR2_MLz0.js";import{i as Ae}from"./APIKeyMixin-CNR1gULI.js";import{l as Ge}from"./ArcGISService-CvJlLKAW.js";import{e as Ve}from"./CustomParametersMixin-DnycMbXv.js";import{a as Ne}from"./DisplayFilteredLayer-NgY85tE-.js";import{F as Je}from"./EditBusLayer-tgFZCz6v.js";import{c as ke}from"./FeatureEffectLayer-26UFsVao.js";import{d as Qe}from"./FeatureReductionLayer-Dggj6XFo.js";import{p as We}from"./OrderedLayer-D6-zNrUd.js";import{c as Ze}from"./TemporalLayer-DVwyCMWq.js";import{e as ze}from"./TrackableLayer-ZFZ1oTsI.js";import{H as Be,Y as He,M as Ue,k as Ke,t as Xe,F as Ye,P as et,q as tt,S as rt,R as it,v as st,O as ot,o as at,N as nt,d as lt,L as ut,E as pt,D as dt,T as yt,C as ct,a as ht,B as mt,j as G,l as V,A as ft}from"./labelingInfo-HpcBILMX.js";import{a as k}from"./FeatureTemplate-NyiQ8gPj.js";import{n as Q}from"./FeatureType-rNOlx-wE.js";import{s as bt}from"./fieldProperties-B5lKbTPg.js";import{c as gt}from"./serviceCapabilitiesUtils-Cibhll9V.js";import{u as wt}from"./TimeInfo-BfXh-Eak.js";import{u as _t}from"./TitleCreator-Cq6q_lIz.js";import{t as Tt}from"./versionUtils-B_VxMTBn.js";import{o as vt}from"./jsonUtils-ckGU7SCY.js";import{t as Ft}from"./styleUtils-Dk_DlEqH.js";import{u as St,m as It}from"./typeUtils-D_YGTMGu.js";import{p as Et}from"./popupUtils-sYzRdAbr.js";import{A as S}from"./interfaces-CL2NbQte.js";import"./vendor-CHjNVy30.js";import"./station-CTe-uNfl.js";import"./LayerFloorInfo-CGkss_sI.js";import"./Relationship-ZVIB7Bqn.js";import"./scaleUtils-BTu79So4.js";import"./displayFilterUtils-DEO713VP.js";import"./FeatureEffect-CuBFMCn2.js";import"./FeatureFilter-Dp8Yy4C1.js";import"./FeatureReductionSelection-D2_2kWu1.js";import"./SimpleRenderer-Cv_4-yU7.js";import"./commonProperties-Cz4LY7so.js";import"./colorRamps-B0gQZwFY.js";import"./ColorStop-Cu9MX0m5.js";import"./visualVariableUtils-CZtJQX17.js";import"./jsonUtils-C0_9DqtZ.js";import"./defaults3D-B9tjgcmU.js";import"./defaults-B2ew532g.js";import"./defaultsJSON-GKolV7NZ.js";import"./OrderByInfo-BRAutEHC.js";import"./UniqueValueRenderer-U8EJ9Zmb.js";import"./diffUtils-CRH5h29A.js";import"./RendererLegendOptions-BX0ZTuxr.js";import"./styleUtils-B7fY0eUg.js";import"./NormalizationBinParametersMixin-D7jY13wx.js";import"./labelUtils-BD42FNJJ.js";import"./FieldsIndex-dVB9L1ZQ.js";import"./UnknownTimeZone-CD5-cTzw.js";import"./infoFor3D-VMSlSy0z.js";import"./ClassBreaksRenderer-D8UibT1q.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-BP8szh1a.js";import"./ArcadeExpression-Dcbbajtk.js";import"./TimeOnly-CSJYFsnz.js";import"./enum-DYiiI-Eb.js";import"./utils-Bn4MiHWW.js";import"./defaultCIMValues-eS1WuCTt.js";import"./enums-DCdj6Lab.js";import"./heatmapUtils-DD4QNsCV.js";let $t=0,g=class extends W.LoadableMixin(Z.EsriPromiseMixin(L)){constructor(e){super(e),this._idToClientGeometry=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}get _workerGeometryType(){const e=this.layer?.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);A(e,this.layer.spatialReference,r);const i=J.fromJSON(r);if(!this._requiresClientGraphicMapping()||!this._idToClientGeometry)return i;const n=this.layer.objectIdField;for(const l of i.features){const u=l.attributes[n],c=this._idToClientGeometry.get(u);c!==void 0&&(l.geometry=c)}return i.geometryType=this.layer.geometryType,i}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new h("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return A(e,this.layer.spatialReference,r),r}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((r=>({count:r.count,extent:z.fromJSON(r.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e?.toJSON(),t)}async _applyEdits(e){if(!this._connection)throw new h("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let r=null;const i=[],n=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=p=>"objectId"in p&&p.objectId!=null?p.objectId:"attributes"in p&&p.attributes[t]!=null?p.attributes[t]:null;if(e.addFeatures&&(r=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const p of e.deleteFeatures){const m=l(p);m!=null&&i.push(m)}const u=e.updateFeatures&&this._idToClientGeometry?new Map:null;if(e.updateFeatures){for(const p of e.updateFeatures)if(n.push(this._serializeFeature(p)),u&&p.geometry!=null){const m=l(p);m!=null&&u.set(m,p)}}xe(r?r.features:null,n,this.layer.spatialReference);const{fullExtent:c,featureEditResults:f}=await this._connection.invoke("applyEdits",{adds:r?r.features:[],updates:n,deletes:i});return this.fullExtent=c,r&&r.finish(f.uidToObjectId),this._updateIdToClientGeometries(u,f),this._createEditsResult(f)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const r=[];for(const{geometry:i}of e)i==null||i.type!=="mesh"||i.hasExtent||i.loaded||r.push(i.load({signal:t}));r.length&&await Promise.all(r)}_updateIdToClientGeometries(e,t){if(this._idToClientGeometry){if(e)for(const r of t.updateResults){if(!r.success)continue;const i=e.get(r.objectId);i!=null&&this._addIdToClientGeometry(i)}for(const r of t.deleteResults)r.success&&this._idToClientGeometry.delete(r.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:""};return{objectId:e.objectId,globalId:e.globalId,error:t?new h("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,r=new Array(e.length);let i=null;for(let l=0;l<e.length;l++){const u=e[l],c=this._serializeFeature(u);i||u.geometry==null||(i=u.geometry.type),r[l]=c,t.set(`${c.uid}`,u)}const n=this;return{features:r,inferredGeometryType:i,finish(l){const u=n.sourceJSON.objectIdField;for(const c in l){const f=l[c],p=t.get(c);p&&(p.attributes||(p.attributes={}),f===-1?delete p.attributes[u]:p.attributes[u]=f,n._addIdToClientGeometry(p))}}}}_addIdToClientGeometry(e){if(!this._idToClientGeometry)return;const t=this.sourceJSON.objectIdField,r=e.attributes?.[t];r!=null&&this._idToClientGeometry.set(r,e.geometry??null)}get _layerOrSourceGeometryType(){return this.layer?.geometryType??this.sourceJSON?.geometryType}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e),i=($t++).toString();return r?{uid:i,geometry:r.toJSON(),attributes:t}:{uid:i,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?B.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await H("MemorySourceWorker",{strategy:U("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,objectIdField:i,hasM:n,hasZ:l,timeInfo:u,dateFieldsTimeZone:c}=this.layer,f=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const p=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",(_=>{E.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),_.preventDefault()})));const m={features:p.features,fields:t?.map((_=>_.toJSON())),geometryType:M.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&n,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:i,spatialReference:f?null:r&&r.toJSON(),timeInfo:u?.toJSON()??null,dateFieldsTimeZone:c},b=await this._connection.invoke("load",m,{signal:e});for(const _ of b.warnings)E.getLogger(this.layer).warn("#load()",`${_.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:_});b.featureErrors.length&&E.getLogger(this.layer).warn("#load()",`Encountered ${b.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:b.featureErrors});const w=b.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(p.inferredGeometryType)&&(w.geometryType=M.toJSON(p.inferredGeometryType)),this.sourceJSON=w,this._requiresClientGraphicMapping()&&(this._idToClientGeometry=new Map),p.finish(b.assignedObjectIds)}};s([K({Type:P,ensureType:X(P)})],g.prototype,"itemType",void 0),s([a()],g.prototype,"type",void 0),s([a({constructOnly:!0})],g.prototype,"layer",void 0),s([a({readOnly:!0})],g.prototype,"_workerGeometryType",null),s([a()],g.prototype,"sourceJSON",void 0),g=s([D("esri.layers.graphics.sources.MemorySource")],g);let F=class extends Y{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([a()],F.prototype,"updating",void 0),s([a()],F.prototype,"status",void 0),F=s([D("esri.layers.support.PublishingInfo")],F);const Dt=Symbol(),Ot=e=>{var i;var t;let r=(i=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const l=this._get("publishingInfo");if(l)return l;const u=new F;return this._checkPublishingStatus(u),u}_checkPublishingStatus(l){let f=0;const p=async b=>{let w;l.updating=!0;try{w=await this.fetchPublishingStatus()}catch{w="unavailable"}w!=="published"&&w!=="unavailable"||(l.status==="publishing"&&this.refresh(),m.remove()),l.status=w,l.updating=!1,m.removed||(f=setTimeout(p,b,b+125))},m={removed:!1,remove(){this.removed=!0,clearTimeout(f)}};this.when().catch((()=>m.remove())),p(250),this.addHandles(m)}},t=Dt,i);return s([a({readOnly:!0,clonable:!1})],r.prototype,"publishingInfo",null),r=s([D("esri.layers.mixins.PublishableLayer")],r),r},y="FeatureLayer";function I(e,t){return new h("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function N(e){return e&&e instanceof L}const q=bt();function j(e,t,r){const i=!!r?.writeLayerSchema;return{enabled:i,ignoreOrigin:i}}let o=class extends Pe(Qe(ke(Ot(Je(Ne(ee(We(Ze(ze(te(re(Ge(ie(se(oe(Ve(Ae(ae.ClonableMixin(ne))))))))))))))))))){constructor(...e){super(...e),this.attributeTableTemplate=null,this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="ArcGISFeatureLayer",this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=le.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=ue((async(t,r,i)=>{const{save:n,saveAs:l}=await T(()=>import("./featureLayerUtils-DFPHajxr.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11]));switch(t){case S.SAVE:return n(this,r);case S.SAVE_AS:return l(this,i,r)}}))}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then((i=>this.initLayerProperties(i)))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(pe).then((async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const i=await this._fetchFirstValidLayerId(t);i!=null&&(this.layerId=i)}if(!this.url&&!this._hasMemorySource())throw new h("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))})).then((()=>Be(this,"load",e)));return this.addResolvingPromise(r),Promise.resolve(this)}get _titleCreator(){const e=this._get("_titleCreator");return de(e),new _t({fieldsIndex:this.fieldsIndex,objectIdField:this.objectIdField,fields:this.fields,displayField:this.displayField,effectivePopupTemplate:this.popupTemplate??this.defaultPopupTemplate})}readCapabilities(e,t){return t=t.layerDefinition||t,gt(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return He(this)}get featureTitleFields(){return[...this._titleCreator.requiredFields]}readIsTable(e,t){return(t=t?.layerDefinition??t).type==="Table"||!t.geometryType}writeIsTable(e,t,r,i){i?.writeLayerSchema&&$(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return Ue(t.layerDefinition||t)}readObjectIdField(e,t){return Ke(t.layerDefinition||t)}get parsedUrl(){const e=ye(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=R(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=R(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){x(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){t=t.layerDefinition||t;const i=t.drawingInfo?.renderer;if(i){const n=vt(i,t,r)??void 0;return n||E.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),n}return Xe(t,r)}set source(e){const t=this._get("source");t!==e&&(N(t)&&this._resetMemorySource(t),N(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof L?new g({layer:this,items:e}):e:null}readSource(e,t){const r=J.fromJSON(t.featureSet);return new g({layer:this,items:r?.features??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r?.creatorField,n=r?.editorField;return e=e?.map((l=>k.fromJSON(l))),this._fixTemplates(e,i),this._fixTemplates(e,n),e}readTitle(e,t){const r=t.layerDefinition?.name??t.name,i=t.title||t.layerDefinition?.title;if(r){const n=this.portalItem?.title;if(this.sublayerTitleMode==="item-title")return this.url?ce(this.url,r):r;let l=r;if(!l&&this.url){const u=he(this.url);u!=null&&(l=u.title)}return l?(this.sublayerTitleMode==="item-title-and-service-name"&&n&&n!==l&&(l=n+" - "+l),me(l)):void 0}if(this.sublayerTitleMode==="item-title"&&i)return i}readTitleFromWebMap(e,t){return t.title||t.layerDefinition?.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find((n=>n.name.toLowerCase()===r));i&&(r=i.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r?.creatorField,n=r?.editorField;return e?.map((l=>(l=Q.fromJSON(l),this._fixTemplates(l.templates,i),this._fixTemplates(l.templates,n),l)))}readVisible(e,t){return t.layerDefinition?.defaultVisibility!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){const r=await Ye(this,e,t,y);return this.lastEditsEventDate=new Date,r}async updateAttachment(e,t,r){const i=await et(this,e,t,r,y);return this.lastEditsEventDate=new Date,i}async applyEdits(e,t){return tt(this,e,t)}async uploadAssets(e,t){return rt(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return Et(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await fe(T(()=>import("./FeatureLayerSource-CqG_Qqsz.js"),__vite__mapDeps([12,1,2,3,4,5,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52])),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=it(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,r=be(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){const r=await st(this,e,t,y);return this.lastEditsEventDate=new Date,r}async fetchRecomputedExtents(e){return ot(this,e,y)}async getFeatureTitle(e,t){return this._titleCreator.getTitle(this,e,t)}async getFeatureTitles(e,t){return this._titleCreator.getTitles(this,e,t)}getFeatureType(e){return at(this.types,this.typeIdField,e)}getFieldDomain(e,t){return nt(this,e,t,this.getField(e)?.domain??null)}async queryAttachments(e,t){return lt(this,e,t,y)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(ge.from(e)??r.createQuery(),t);if(i?.features)for(const n of i.features)n.layer=n.sourceLayer=r;return i}async queryObjectIds(e,t){return await ut(this,e,t,y)}async queryFeatureCount(e,t){return pt(this,e,t,y)}async queryExtent(e,t){return dt(this,e,t,y)}async queryRelatedFeatures(e,t){return yt(this,e,t,y)}async queryRelatedFeaturesCount(e,t){return ct(this,e,t,y)}async queryTopFeatures(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopFeatures||!i?.query?.supportsTopFeaturesQuery)throw new h(y,"Layer source does not support queryTopFeatures capability");const n=await T(()=>import("./TopFeaturesQuery-DboWWKpJ.js"),__vite__mapDeps([53,4,1,2,3,5,6])),l=await r.queryTopFeatures(n.default.from(e),t);if(l?.features)for(const u of l.features)u.layer=u.sourceLayer=this;return l}async queryAttributeBins(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryAttributeBins)throw new h(y,"Layer source does not support queryAttributeBins capability");ht(e,i,y);const n=await T(()=>import("./AttributeBinsQuery-D_VzJKss.js"),__vite__mapDeps([54,4,1,2,3,5,6,55,56,57,50])),l=await r.queryAttributeBins(n.default.from(e),t);if(l.features)for(const u of l.features)u.layer=u.sourceLayer=this;return l}async queryTopObjectIds(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopObjectIds||!i?.query.supportsTopFeaturesQuery)throw new h(y,"Layer source does not support queryTopObjectIds capability");const n=await T(()=>import("./TopFeaturesQuery-DboWWKpJ.js"),__vite__mapDeps([53,4,1,2,3,5,6]));return(await r.queryTopObjectIds(n.default.from(e),t)).filter(we)}async queryTopFeaturesExtent(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopExtents||!i?.query?.supportsTopFeaturesQuery)throw new h(y,"Layer source does not support queryTopExtents capability");const n=await T(()=>import("./TopFeaturesQuery-DboWWKpJ.js"),__vite__mapDeps([53,4,1,2,3,5,6]));return r.queryTopExtents(n.default.from(e),t)}async queryTopFeatureCount(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopCount||!i?.query?.supportsTopFeaturesQuery)throw new h(y,"Layer source does not support queryFeatureCount capability");const n=await T(()=>import("./TopFeaturesQuery-DboWWKpJ.js"),__vite__mapDeps([53,4,1,2,3,5,6]));return r.queryTopCount(n.default.from(e),t)}read(e,t){const r=e.featureCollection;if((r||e.type==="Feature Collection")&&(this.resourceInfo=e),r){const{layers:i,showLegend:n}=r;i?.length===1&&(super.read(i[0],t),n!=null&&super.read({showLegend:n},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:t?.origin??void 0,writeLayerSchema:t?.writeLayerSchema??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:n}=t;if(this.dynamicDataSource)return n?.push(I(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((r==="web-map"||r==="web-scene")&&i!=="tables")return n?.push(I(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return n?.push(I(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(r==="web-map"||r==="web-scene")&&i==="tables")return n?.push(I(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new h(y,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&(this.source?.type==="memory"||Tt(this,e))}async save(e){return this._debouncedSaveOperations(S.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(S.SAVE_AS,t,e)}_readEditingEnabled(e,t,r){let i=e.layerDefinition?.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&r?.origin==="web-map"&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map((t=>t.trim())).includes("editing")}_writeEditingEnabled(e,t,r,i){if(!e){const n=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";$("layerDefinition.capabilities",n,t),r&&!i?.writeLayerSchema&&(t.capabilities=n)}}_fetchFirstValidLayerId(e){return _e(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then((t=>{const r=t.data;if(r)return this.applyPreferredHost(r),this.findFirstValidLayerId(r)}))}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),x(this.renderer,this.fieldsIndex),Te(this.timeInfo,this.fieldsIndex),this._hasMemorySource()&&this.geometryType==="mesh"&&(this.capabilities.query.supportsReturnMesh=!0),Ft(this,{origin:"service"})}async hasDataChanged(){return mt(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||this.fields?.some((t=>t.type==="geometry"))||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach((r=>{const i=r.prototype?.attributes;i&&t&&delete i[t]}))}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new h("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new h("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach((t=>{t.layer=this,t.sourceLayer=this})),this.addHandles([e.on("after-add",(t=>{t.item.layer=this,t.item.sourceLayer=this})),e.on("after-remove",(t=>{t.item.layer=null,t.item.sourceLayer=null}))],"fl-source")}_resetMemorySource(e){e.forEach((t=>{t.layer=null,t.sourceLayer=null})),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([a({clonable:!1,readOnly:!0})],o.prototype,"_titleCreator",null),s([a(ve)],o.prototype,"attributeTableTemplate",void 0),s([d("service","capabilities")],o.prototype,"readCapabilities",null),s([a({json:{origins:{"web-scene":{write:!1}},write:!0}})],o.prototype,"charts",void 0),s([a({readOnly:!0})],o.prototype,"createQueryVersion",null),s([a({json:{read:{source:"layerDefinition.copyrightText"}}})],o.prototype,"copyright",void 0),s([a({json:{read:{source:"layerDefinition.displayField"}}})],o.prototype,"displayField",void 0),s([a({types:Fe,readOnly:!0})],o.prototype,"defaultSymbol",void 0),s([a({type:Se})],o.prototype,"dynamicDataSource",void 0),s([a({type:Boolean})],o.prototype,"editingEnabled",null),s([d(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],o.prototype,"readEditingEnabled",null),s([d("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],o.prototype,"readEditingEnabledFromWebMap",null),s([O(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabled",null),s([O("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabledToWebMap",null),s([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([a({clonable:!1,readOnly:!0})],o.prototype,"featureTitleFields",null),s([a({...q.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:j}}}}})],o.prototype,"fields",void 0),s([a(q.fieldsIndex)],o.prototype,"fieldsIndex",void 0),s([a({type:Re,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"formTemplate",void 0),s([a({json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),s([a({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:j,writer(e,t,r){const i=e?G.toJSON(e):null;i&&$(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:G.read}}})],o.prototype,"geometryType",void 0),s([a({json:{read:{source:"layerDefinition.hasM"}}})],o.prototype,"hasM",void 0),s([a({json:{read:{source:"layerDefinition.hasZ"}}})],o.prototype,"hasZ",void 0),s([a(Ie)],o.prototype,"id",void 0),s([a({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],o.prototype,"infoFor3D",void 0),s([a({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],o.prototype,"isTable",void 0),s([d("service","isTable",["type","geometryType"]),d("isTable",["layerDefinition.type","layerDefinition.geometryType"])],o.prototype,"readIsTable",null),s([O("web-map","isTable")],o.prototype,"writeIsTable",null),s([a(Ee)],o.prototype,"labelsVisible",void 0),s([a({type:[ft],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:V,write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:V,write:{layerContainerTypes:v}}})],o.prototype,"labelingInfo",void 0),s([a((()=>{const e=C($e);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,r,i){$(i,De(t),r)}}},e})())],o.prototype,"opacity",void 0),s([a(Oe)],o.prototype,"legendEnabled",void 0),s([a({type:["show","hide"],json:(()=>{const e=C(Ce.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],o.prototype,"listMode",void 0),s([d("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdField",null),s([a({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:j}}}}})],o.prototype,"objectIdField",void 0),s([d("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdField",null),s([a({type:["ArcGISFeatureLayer"],json:{write:{target:"layerType",ignoreOrigin:!0,layerContainerTypes:v}}})],o.prototype,"operationalLayerType",void 0),s([a(q.outFields)],o.prototype,"outFields",void 0),s([a({readOnly:!0})],o.prototype,"parsedUrl",null),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a(qe)],o.prototype,"popupEnabled",void 0),s([a({type:je,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([a({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),s([a({types:It,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:St,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:v,overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema,layerContainerTypes:v})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r?.writeLayerSchema,layerContainerTypes:v})}}})],o.prototype,"renderer",null),s([d("service","renderer",["drawingInfo.renderer","defaultSymbol"]),d("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],o.prototype,"readRenderer",null),s([a()],o.prototype,"resourceInfo",void 0),s([a((()=>{const e=C(Le);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],o.prototype,"screenSizePerspectiveEnabled",void 0),s([a({clonable:!1})],o.prototype,"source",null),s([Me("source")],o.prototype,"castSource",null),s([d("portal-item","source",["featureSet"]),d("web-map","source",["featureSet"])],o.prototype,"readSource",null),s([a({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],o.prototype,"spatialReference",void 0),s([a({type:Number})],o.prototype,"subtypeCode",void 0),s([a({type:[k]})],o.prototype,"templates",void 0),s([d("templates",["editFieldsInfo","creatorField","editorField","templates"])],o.prototype,"readTemplates",null),s([a({type:wt})],o.prototype,"timeInfo",void 0),s([a()],o.prototype,"title",void 0),s([d("service","title",["name"]),d("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],o.prototype,"readTitle",null),s([d("web-map","title",["layerDefinition.name","title"])],o.prototype,"readTitleFromWebMap",null),s([a({type:String})],o.prototype,"sublayerTitleMode",void 0),s([a({json:{read:!1}})],o.prototype,"type",void 0),s([a({type:String})],o.prototype,"typeIdField",void 0),s([d("service","typeIdField"),d("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),s([a({type:[Q]})],o.prototype,"types",void 0),s([d("service","types",["types"]),d("types",["layerDefinition.types"])],o.prototype,"readTypes",null),s([a({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility",layerContainerTypes:v}}}}})],o.prototype,"visible",void 0),s([d("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],o.prototype,"readVisible",null),o=s([D("esri.layers.FeatureLayer")],o);export{o as default};

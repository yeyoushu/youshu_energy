import{bs as de,kF as ce,v as t,w as i,d9 as x,bP as he,oK as R,x as p,iP as ee,bt as te,V as F,H as re,cI as me,f6 as fe,nc as ge,s as I,d as be,a_ as ve,f as ie,fT as Se,iZ as we,dE as $e,bJ as se,cJ as Oe,oL as Fe,aw as S,cO as Ie,aU as b,L as m,oM as xe,fh as Le,fs as je,ft as Te,fu as Pe,fv as Ee,ez as Be,dg as qe,F as Re,fX as Ae,i3 as _e,gQ as Ne,j0 as Me,fJ as H,fK as ke,fL as Ke,fw as Qe,oN as Ve,fy as Ue,fN as Ce}from"./test-Dp3_P59c.js";import oe from"./FeatureLayer-1i3ov8Sx.js";import{t as De}from"./capabilities-DoKz1UAZ.js";import{N as Je}from"./labelingInfo-HpcBILMX.js";import{s as He}from"./fieldProperties-B5lKbTPg.js";import{Z as Ze}from"./FieldsIndex-dVB9L1ZQ.js";import{r as ze,R as We,V as Z}from"./SceneService-BiTJlIF5.js";import{p as Ge,a as Xe,y as Ye,m as et}from"./I3SLayerDefinitions--VDE0v5h.js";import{u as tt}from"./typeUtils-D_YGTMGu.js";import{p as rt}from"./popupUtils-sYzRdAbr.js";import{B as it}from"./I3SUtil-DBiqM2Xf.js";import{n as st,p as ot}from"./popupUtils-CsRvIy5_.js";import{i as at}from"./APIKeyMixin-CNR1gULI.js";import{l as lt}from"./ArcGISService-CvJlLKAW.js";import{e as nt}from"./CustomParametersMixin-DnycMbXv.js";import{s as pt}from"./associatedFeatureServiceUtils-BS-wb8Cr.js";import"./index-CulM0VMq.js";import"./vendor-CHjNVy30.js";import"./station-CTe-uNfl.js";import"./FeatureLayerBase-CyFKe2Eq.js";import"./LayerFloorInfo-CGkss_sI.js";import"./Relationship-ZVIB7Bqn.js";import"./serviceCapabilitiesUtils-Cibhll9V.js";import"./infoFor3D-VMSlSy0z.js";import"./editsZScale-DaIJOTHU.js";import"./queryZScale-3rRSqsEH.js";import"./FeatureSet-DR2_MLz0.js";import"./DisplayFilteredLayer-NgY85tE-.js";import"./scaleUtils-BTu79So4.js";import"./displayFilterUtils-DEO713VP.js";import"./EditBusLayer-tgFZCz6v.js";import"./FeatureEffectLayer-26UFsVao.js";import"./FeatureEffect-CuBFMCn2.js";import"./FeatureFilter-Dp8Yy4C1.js";import"./FeatureReductionLayer-Dggj6XFo.js";import"./FeatureReductionSelection-D2_2kWu1.js";import"./jsonUtils-ckGU7SCY.js";import"./SimpleRenderer-Cv_4-yU7.js";import"./commonProperties-Cz4LY7so.js";import"./colorRamps-B0gQZwFY.js";import"./ColorStop-Cu9MX0m5.js";import"./visualVariableUtils-CZtJQX17.js";import"./jsonUtils-C0_9DqtZ.js";import"./defaults3D-B9tjgcmU.js";import"./defaults-B2ew532g.js";import"./defaultsJSON-GKolV7NZ.js";import"./OrderedLayer-D6-zNrUd.js";import"./OrderByInfo-BRAutEHC.js";import"./TemporalLayer-DVwyCMWq.js";import"./TimeInfo-BfXh-Eak.js";import"./TrackableLayer-ZFZ1oTsI.js";import"./FeatureTemplate-NyiQ8gPj.js";import"./FeatureType-rNOlx-wE.js";import"./TitleCreator-Cq6q_lIz.js";import"./versionUtils-B_VxMTBn.js";import"./styleUtils-Dk_DlEqH.js";import"./interfaces-CL2NbQte.js";import"./UniqueValueRenderer-U8EJ9Zmb.js";import"./diffUtils-CRH5h29A.js";import"./RendererLegendOptions-BX0ZTuxr.js";import"./styleUtils-B7fY0eUg.js";import"./NormalizationBinParametersMixin-D7jY13wx.js";import"./labelUtils-BD42FNJJ.js";import"./UnknownTimeZone-CD5-cTzw.js";import"./ClassBreaksRenderer-D8UibT1q.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-BP8szh1a.js";import"./ArcadeExpression-Dcbbajtk.js";import"./TimeOnly-CSJYFsnz.js";import"./enum-DYiiI-Eb.js";import"./utils-Bn4MiHWW.js";import"./defaultCIMValues-eS1WuCTt.js";import"./enums-DCdj6Lab.js";import"./heatmapUtils-DD4QNsCV.js";import"./originUtils-TS7VWtkB.js";import"./jsonContext-BGln5sw3.js";import"./resourceUtils-DKzYMSTY.js";import"./resourceUtils-CysVUjpt.js";import"./saveUtils-CtKjcsNq.js";import"./I3SBinaryReader-BvxPtkHy.js";import"./VertexAttribute-BfkzOMLV.js";import"./edgeUtils-B5kUGE0b.js";import"./floatRGBA-OxTzrX3-.js";import"./NormalAttribute.glsl-DSEZpnU6.js";import"./glsl-Cj7KC756.js";import"./ShaderOutput-Bdd80V3g.js";import"./BindType-BBwFZqyN.js";import"./orientedBoundingBox-BdnKX1R-.js";import"./quat-LJUBQ7U8.js";import"./computeTranslationToOriginAndRotation-B3HgMnyy.js";let u=class extends de.IdentifiableMixin(ce){constructor(r){super(r),this.title="",this.id=-1,this.modelName=null,this.isEmpty=null,this.legendEnabled=!0,this.visible=!0,this.opacity=1}readTitle(r,s){return typeof s.alias=="string"?s.alias:typeof s.name=="string"?s.name:""}readIdOnlyOnce(r){return this.id!==-1?this.id:typeof r=="number"?r:-1}};t([i({type:String,json:{origins:{"web-scene":{write:!0},"portal-item":{write:!0}}}})],u.prototype,"title",void 0),t([x("service","title",["alias","name"])],u.prototype,"readTitle",null),t([i()],u.prototype,"layer",void 0),t([i({type:he,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,isRequired:!0}}})],u.prototype,"id",void 0),t([x("service","id")],u.prototype,"readIdOnlyOnce",null),t([i(R(String))],u.prototype,"modelName",void 0),t([i(R(Boolean))],u.prototype,"isEmpty",void 0),t([i({type:Boolean,nonNullable:!0})],u.prototype,"legendEnabled",void 0),t([i({type:Boolean,json:{name:"visibility",write:!0}})],u.prototype,"visible",void 0),t([i({type:Number,json:{write:!0}})],u.prototype,"opacity",void 0),u=t([p("esri.layers.buildingSublayers.BuildingSublayer")],u);const z=He();let o=class extends ee.LoadableMixin(te.EsriPromiseMixin(u)){constructor(e){super(e),this.type="building-component",this.nodePages=null,this.materialDefinitions=[],this.textureSetDefinitions=[],this.geometryDefinitions=[],this.indexInfo=null,this.serviceUpdateTimeStamp=null,this.store=null,this.attributeStorageInfo=[],this.fields=[],this.associatedLayer=null,this.outFields=null,this.listMode="show",this.renderer=null,this.definitionExpression=null,this.popupEnabled=!0,this.popupTemplate=null,this.layerType="3d-object"}get parsedUrl(){return this.layer?{path:`${this.layer.parsedUrl?.path}/sublayers/${this.id}`,query:this.layer.parsedUrl?.query}:{path:""}}get fieldsIndex(){return new Ze(this.fields)}readAssociatedLayer(e,r){const s=this.layer.associatedFeatureServiceItem,a=r.associatedLayerID;return s!=null&&typeof a=="number"?new oe({portalItem:s,customParameters:this.customParameters,layerId:a}):null}get objectIdField(){if(this.fields!=null){for(const e of this.fields)if(e.type==="oid")return e.name}return""}get globalIdField(){if(this.fields!=null){for(const e of this.fields)if(e.type==="global-id")return e.name}return""}get displayField(){return this.associatedLayer!=null?this.associatedLayer.displayField:void 0}get apiKey(){return this.layer.apiKey}get customParameters(){return this.layer.customParameters}get fullExtent(){return this.layer.fullExtent}get spatialReference(){return this.layer.spatialReference}get version(){return this.layer.version}get elevationInfo(){return this.layer.elevationInfo}get minScale(){return this.layer.minScale}get maxScale(){return this.layer.maxScale}get effectiveScaleRange(){return this.layer.effectiveScaleRange}get defaultPopupTemplate(){return this.createPopupTemplate()}load(e){const r=e!=null?e.signal:null,s=this._fetchService(r).then((()=>{this.indexInfo=ze(this.parsedUrl.path,this.rootNode,this.nodePages,this.customParameters,this.apiKey,F.getLogger(this),r)}));return this.addResolvingPromise(s),Promise.resolve(this)}createPopupTemplate(e){return rt(this,e)}async _fetchService(e){const r=(await re(this.parsedUrl.path,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(r,{origin:"service",url:this.parsedUrl})}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){const s=this.getField(e)?.domain??null;return this.associatedLayer?Je(this.associatedLayer,e,r,s):s}getFeatureType(e){return e&&this.associatedLayer!=null?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer!=null?this.associatedLayer.types??[]:[]}get typeIdField(){return this.associatedLayer!=null?this.associatedLayer.typeIdField:null}get geometryType(){return this.layerType==="3d-object"?"mesh":"point"}get profile(){return this.layerType==="3d-object"?"mesh-pyramids":"points"}get capabilities(){const e=this.associatedLayer!=null&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:De,{query:r,operations:{supportsQuery:s},data:{supportsZ:a,supportsM:l,isVersioned:h}}=e;return{query:r,operations:{supportsQuery:s},data:{supportsZ:a,supportsM:l,isVersioned:h}}}createQuery(){const e=new me;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,r){return this._getAssociatedLayerForQuery().then((s=>s.queryExtent(e||this.createQuery(),r)))}queryFeatureCount(e,r){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatureCount(e||this.createQuery(),r)))}queryFeatures(e,r){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatures(e||this.createQuery(),r))).then((s=>{if(s?.features)for(const a of s.features)a.layer=this.layer,a.sourceLayer=this;return s}))}async queryObjectIds(e,r){return(await(await this._getAssociatedLayerForQuery()).queryObjectIds(e||this.createQuery(),r)).filter(fe)}async queryCachedAttributes(e,r){const s=ge(this.fieldsIndex,await st(this,ot(this)));return it(this.parsedUrl.path,this.attributeStorageInfo,e,r,s,this.apiKey,this.customParameters)}async queryCachedFeature(e,r){const s=await this.queryCachedAttributes(e,[r]);if(!s||s.length===0)throw new I("scenelayer:feature-not-in-cached-data","Feature not found in cached data");return new be({attributes:s[0],layer:this,sourceLayer:this})}getFieldUsageInfo(e){return this.fieldsIndex.has(e)?{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}:{supportsLabelingInfo:!1,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:this.associatedLayer!=null}}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),this.associatedLayer==null)throw new I("buildingscenelayer:query-not-available","BuildingSceneLayer component layer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new I("buildingscenelayer:query-not-available","BuildingSceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}};t([i({readOnly:!0})],o.prototype,"parsedUrl",null),t([i({type:Ge,readOnly:!0})],o.prototype,"nodePages",void 0),t([i({type:[Xe],readOnly:!0})],o.prototype,"materialDefinitions",void 0),t([i({type:[Ye],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),t([i({type:[et],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),t([i({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),t([i({readOnly:!0})],o.prototype,"store",void 0),t([i({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],o.prototype,"rootNode",void 0),t([i({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),t([i(z.fields)],o.prototype,"fields",void 0),t([i({readOnly:!0})],o.prototype,"fieldsIndex",null),t([i({readOnly:!0,type:oe})],o.prototype,"associatedLayer",void 0),t([x("service","associatedLayer",["associatedLayerID"])],o.prototype,"readAssociatedLayer",null),t([i(z.outFields)],o.prototype,"outFields",void 0),t([i({type:String,readOnly:!0})],o.prototype,"objectIdField",null),t([i({type:String,readOnly:!0})],o.prototype,"globalIdField",null),t([i({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),t([i({readOnly:!0,type:String})],o.prototype,"apiKey",null),t([i({readOnly:!0,type:String})],o.prototype,"customParameters",null),t([i({readOnly:!0,type:ve})],o.prototype,"fullExtent",null),t([i({readOnly:!0,type:ie})],o.prototype,"spatialReference",null),t([i({readOnly:!0})],o.prototype,"version",null),t([i({readOnly:!0,type:Se})],o.prototype,"elevationInfo",null),t([i({readOnly:!0,type:Number})],o.prototype,"minScale",null),t([i({readOnly:!0,type:Number})],o.prototype,"maxScale",null),t([i({readOnly:!0,type:Number})],o.prototype,"effectiveScaleRange",null),t([i({type:["hide","show"],json:{write:!0}})],o.prototype,"listMode",void 0),t([i({types:tt,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",void 0),t([i({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),t([i(we)],o.prototype,"popupEnabled",void 0),t([i({type:$e,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],o.prototype,"popupTemplate",void 0),t([i({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),t([i({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),t([i()],o.prototype,"types",null),t([i()],o.prototype,"typeIdField",null),t([i({json:{write:!1}}),se(new Oe({"3DObject":"3d-object",Point:"point"}))],o.prototype,"layerType",void 0),t([i()],o.prototype,"geometryType",null),t([i()],o.prototype,"profile",null),t([i({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),t([i({readOnly:!0})],o.prototype,"statisticsInfo",void 0),o=t([p("esri.layers.buildingSublayers.BuildingComponentSublayer")],o);const A=o;var _;const W={type:S,readOnly:!0,json:{origins:{service:{read:{source:"sublayers",reader:ae}}},read:!1}};function ae(e,r,s){if(e&&Array.isArray(e))return new S(e.map((a=>{const l=ut(a);if(l){const h=new l;return h.read(a,s),h}return s?.messages&&a&&s.messages.push(new Ie("building-scene-layer:unsupported-sublayer-type","Building scene sublayer of type '"+(a.type||"unknown")+"' are not supported",{definition:a,context:s})),null})))}let d=_=class extends u{constructor(e){super(e),this.type="building-group",this.listMode="show",this.sublayers=null}loadAll(){return Fe(this,(e=>_.forEachSublayer(this.sublayers,(r=>{r.type!=="building-group"&&e(r)}))))}};function ut(e){return e.layerType==="group"?d:A}t([i({type:["hide","show","hide-children"],json:{write:!0}})],d.prototype,"listMode",void 0),t([i(W)],d.prototype,"sublayers",void 0),d=_=t([p("esri.layers.buildingSublayers.BuildingGroupSublayer")],d),(function(e){function r(s,a){s.forEach((l=>{a(l),l.type==="building-group"&&r(l.sublayers,a)}))}e.sublayersProperty=W,e.readSublayers=ae,e.forEachSublayer=r})(d||(d={}));let L=class extends b{constructor(){super(...arguments),this.type=null}};t([i({type:String,readOnly:!0,json:{write:{isRequired:!0}}})],L.prototype,"type",void 0),L=t([p("esri.layers.support.BuildingFilterAuthoringInfo")],L);const le=L;var N;let w=N=class extends b{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new N({filterType:this.filterType,filterValues:m(this.filterValues)})}};t([i({type:String,json:{write:{isRequired:!0}}})],w.prototype,"filterType",void 0),t([i({type:[String],json:{write:{isRequired:!0}}})],w.prototype,"filterValues",void 0),w=N=t([p("esri.layers.support.BuildingFilterAuthoringInfoType")],w);const yt=w;var M;const dt=S.ofType(yt);let j=M=class extends b{clone(){return new M({filterTypes:m(this.filterTypes)})}};t([i({type:dt,json:{write:{isRequired:!0}}})],j.prototype,"filterTypes",void 0),j=M=t([p("esri.layers.support.BuildingFilterAuthoringInfoBlock")],j);const ct=j;var k;const ht=S.ofType(ct);let $=k=class extends le{constructor(){super(...arguments),this.type="checkbox"}clone(){return new k({filterBlocks:m(this.filterBlocks)})}};t([i({type:["checkbox"]})],$.prototype,"type",void 0),t([i({type:ht,json:{write:{isRequired:!0}}})],$.prototype,"filterBlocks",void 0),$=k=t([p("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],$);const G=$;let T=class extends b{};t([i({readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],T.prototype,"type",void 0),T=t([p("esri.layers.support.BuildingFilterMode")],T);const B=T;var K;let P=K=class extends B{constructor(){super(...arguments),this.type="solid"}clone(){return new K}};t([i({type:["solid"],readOnly:!0,json:{write:{isRequired:!0}}})],P.prototype,"type",void 0),P=K=t([p("esri.layers.support.BuildingFilterModeSolid")],P);const Q=P;var V;let O=V=class extends B{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new V({edges:m(this.edges)})}};t([se({wireFrame:"wire-frame"})],O.prototype,"type",void 0),t([i(xe)],O.prototype,"edges",void 0),O=V=t([p("esri.layers.support.BuildingFilterModeWireFrame")],O);const X=O;var U;let E=U=class extends B{constructor(){super(...arguments),this.type="x-ray"}clone(){return new U}};t([i({type:["x-ray"],readOnly:!0,json:{write:{isRequired:!0}}})],E.prototype,"type",void 0),E=U=t([p("esri.layers.support.BuildingFilterModeXRay")],E);const Y=E;var C;const mt={nonNullable:!0,types:{key:"type",base:B,typeMap:{solid:Q,"wire-frame":X,"x-ray":Y}},json:{read:e=>{switch(e?.type){case"solid":return Q.fromJSON(e);case"wireFrame":return X.fromJSON(e);case"x-ray":return Y.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let v=C=class extends b{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new Q,this.title=""}clone(){return new C({filterExpression:this.filterExpression,filterMode:m(this.filterMode),title:this.title})}};t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],v.prototype,"filterExpression",void 0),t([i(mt)],v.prototype,"filterMode",void 0),t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],v.prototype,"title",void 0),v=C=t([p("esri.layers.support.BuildingFilterBlock")],v);const ft=v;var D;const gt=S.ofType(ft);let f=D=class extends b{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=Le(),this.name=null}clone(){return new D({description:this.description,filterBlocks:m(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:m(this.filterAuthoringInfo)})}};t([i({type:String,json:{write:!0}})],f.prototype,"description",void 0),t([i({type:gt,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"filterBlocks",void 0),t([i({types:{key:"type",base:le,typeMap:{checkbox:G}},json:{read:e=>e?.type==="checkbox"?G.fromJSON(e):null,write:!0}})],f.prototype,"filterAuthoringInfo",void 0),t([i({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"id",void 0),t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"name",void 0),f=D=t([p("esri.layers.support.BuildingFilter")],f);let c=class extends b{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};t([i({type:String})],c.prototype,"fieldName",void 0),t([i({type:String})],c.prototype,"modelName",void 0),t([i({type:String})],c.prototype,"label",void 0),t([i({type:Number})],c.prototype,"min",void 0),t([i({type:Number})],c.prototype,"max",void 0),t([i({json:{read:e=>Array.isArray(e)&&(e.every((r=>typeof r=="string"))||e.every((r=>typeof r=="number")))?e.slice():null}})],c.prototype,"mostFrequentValues",void 0),t([i({type:[Number]})],c.prototype,"subLayerIds",void 0),c=t([p("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")],c);let g=class extends ee.LoadableMixin(te.EsriPromiseMixin(b)){constructor(e){super(e),this.url=null,this.customParameters=null}get fields(){return this.loaded||this.loadStatus==="loading"?this._get("fields"):(F.getLogger(this).error("building summary statistics are not loaded"),null)}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this._fetchService(r)),Promise.resolve(this)}async _fetchService(e){const r=(await re(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(r,{origin:"service"})}};t([i({constructOnly:!0,type:String})],g.prototype,"url",void 0),t([i({constructOnly:!0})],g.prototype,"customParameters",void 0),t([i({constructOnly:!0})],g.prototype,"apiKey",void 0),t([i({readOnly:!0,type:[c],json:{read:{source:"summary"}}})],g.prototype,"fields",null),g=t([p("esri.layers.support.BuildingSummaryStatistics")],g);const ne=S.ofType(f),pe=m(d.sublayersProperty),q=pe.json?.origins;q&&(q["web-scene"]={type:[A],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},q["portal-item"]={type:[A],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}});let n=class extends We(lt(je(Te(Pe(Ee(nt(at(Qe)))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new Be({getCollections:()=>[this.sublayers],getChildrenFunction:r=>r.type==="building-group"?r.sublayers:null}),this.sublayers=null,this._allSublayerOverrides=null,this.filters=new ne,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.legendEnabled=!0,this.type="building-scene"}normalizeCtorArgs(e){return typeof e=="string"?{url:e}:e??{}}destroy(){this.allSublayers.destroy()}readSublayers(e,r,s){const a=d.readSublayers(e,r,s);return d.forEachSublayer(a,(l=>l.layer=this)),this._allSublayerOverrides&&(bt(a,this._allSublayerOverrides),this._allSublayerOverrides=null),a}write(e,r){return e=super.write(e,r),!r||r.origin!=="web-scene"&&r.origin!=="portal-item"||(this.sublayers?St(this.sublayers,e,r):this._allSublayerOverrides&&wt(this._allSublayerOverrides,e,r)),e}read(e,r){if(super.read(e,r),(r?.origin==="web-scene"||r?.origin==="portal-item")&&Array.isArray(e?.sublayers)){const s=vt(e.sublayers,r);this.sublayers?ue(this.sublayers,s):(this._allSublayerOverrides??=new Map,this._allSublayerOverrides.set(r.origin,s))}}readSummaryStatistics(e,r){if(typeof r.statisticsHRef=="string"&&this.parsedUrl){const s=qe(this.parsedUrl.path,r.statisticsHRef);return new g({url:s,apiKey:this.apiKey,customParameters:this.customParameters})}return null}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}load(e){const r=e!=null?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Re).then((()=>this._fetchService(r))).then((()=>this._fetchAssociatedFeatureService(r)));return this.addResolvingPromise(s),Promise.resolve(this)}loadAll(){return Ae(this,(e=>{d.forEachSublayer(this.sublayers,(r=>{r.type!=="building-group"&&e(r)})),this.summaryStatistics&&e(this.summaryStatistics)}))}async saveAs(e,r){return this._debouncedSaveOperations(Z.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(Z.SAVE,e)}validateLayer(e){if(!e.layerType||e.layerType!=="Building")throw new I("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}async _fetchAssociatedFeatureService(e){try{const{portalItem:r}=await pt(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e});this.associatedFeatureServiceItem=r}catch{_e(this._logWarningOnPopupEnabled())}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(Ne(e)),await Me((()=>this.allSublayers.filter((y=>y.type==="building-component")).some((y=>y.popupEnabled&&y.popupTemplate!=null))),e.signal);const r=this.allSublayers.filter((y=>y.type==="building-component")).filter((y=>y.popupEnabled&&y.popupTemplate!=null)),s=[],a=[];for(const y of r){const J=y.title??`untitled ${y.id}`;y.attributeStorageInfo?s.push(J):a.push(J)}const l=`
  `,h=s.length>0?`
The following sublayers will fall back to binary attributes for Popups:${l}${s.join(l)}`:"",ye=a.length>0?`
The following sublayers have no binary attributes and will not work with Popups:${l}${a.join(l)}`:"";F.getLogger(this).warn(`Associated FeatureLayer could not be loaded for this BuildingSceneLayer: ${this.title}.`,h,ye)}_validateElevationInfo(e){const r="Building scene layers";H(F.getLogger(this),ke(r,"absolute-height",e)),H(F.getLogger(this),Ke(r,e))}};function bt(e,r){r.forEach((s=>ue(e,s)))}function ue(e,r){const{overrides:s,context:a}=r;d.forEachSublayer(e,(l=>l.read(s.get(l.id),a)))}function vt(e,r){const s=new Map;for(const a of e)a!=null&&typeof a=="object"&&typeof a.id=="number"?s.set(a.id,a):r.messages?.push(new I("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:a}));return{overrides:s,context:r}}function St(e,r,s){const a=[];d.forEachSublayer(e,(l=>{const h=l.write({},s);Object.keys(h).length>1&&a.push(h)})),a.length>0&&(r.sublayers=a)}function wt(e,r,s){const a=s?.origin&&e.get(s.origin);a&&(r.sublayers=[],a.overrides.forEach((l=>{r.sublayers.push(m(l))})))}t([i({type:["BuildingSceneLayer"]})],n.prototype,"operationalLayerType",void 0),t([i({readOnly:!0})],n.prototype,"allSublayers",void 0),t([i(pe)],n.prototype,"sublayers",void 0),t([x("service","sublayers")],n.prototype,"readSublayers",null),t([i({type:ne,nonNullable:!0,json:{write:!0}})],n.prototype,"filters",void 0),t([i({type:String,json:{write:!0}})],n.prototype,"activeFilterId",void 0),t([i({readOnly:!0,type:g})],n.prototype,"summaryStatistics",void 0),t([x("summaryStatistics",["statisticsHRef"])],n.prototype,"readSummaryStatistics",null),t([i({type:[String],json:{read:!1}})],n.prototype,"outFields",void 0),t([i(Ve)],n.prototype,"fullExtent",void 0),t([i(Ue)],n.prototype,"legendEnabled",void 0),t([i({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),t([i(R(ie))],n.prototype,"spatialReference",void 0),t([i(Ce)],n.prototype,"elevationInfo",null),t([i({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([i()],n.prototype,"associatedFeatureServiceItem",void 0),n=t([p("esri.layers.BuildingSceneLayer")],n);const li=n;export{li as default};

import{v as a,w as h,x as M,bw as S,s as f,cN as F,dd as $,V as C,e9 as R,a_ as V}from"./test-DMnSxVQs.js";import{r as E}from"./BitmapContainer-DUGYRNcj.js";import{S as q}from"./LayerView2D-NU4wH-7h.js";import{M as U}from"./ExportStrategy-D6Pv-nft.js";import{u as L}from"./LayerView-_65SRCjZ.js";import{i as W}from"./RefreshableLayerView-Dt5pLzQ-.js";import{a as z}from"./ExportWMSImageParameters-Cr04lBT4.js";import{i as A}from"./timeSupport-NWN7qrOE.js";import"./index-BJQUWR-1.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";import"./WGLContainer-CrZ-XYlx.js";import"./Utils-z42kt5DD.js";import"./BoundingBox-BjWh8LA9.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-V_U9Cecj.js";import"./VertexArrayObject-_LuaUtOc.js";import"./memoryEstimations-Bf3XeyNh.js";import"./vec3f32-WCVSSNPR.js";import"./Container-D1xt9iBh.js";import"./StyleDefinition-Bk9QDbvE.js";import"./enums-DCdj6Lab.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-B6zVmPj5.js";import"./OptimizedFeature-C54A3ei6.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BitmapTechnique-Wmr6RpmG.js";import"./GraphShaderModule-D2kLMRjP.js";import"./FramebufferObject-CTArVR-t.js";import"./ShaderBuilder-C0_MvlxS.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-pk2C5RYg.js";import"./bitmapUtils-D2kG4_VJ.js";import"./layerViewUtils-yeCv-jWE.js";const H=e=>{let t=class extends e{initialize(){this.exportImageParameters=new z({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return A(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,o){const{layer:s}=this;if(!i)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:d}=s;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const r=this.createFetchPopupFeaturesQuery(i);if(!r)return[];const{extent:p,width:n,height:m,x:c,y:l}=r;if(!(p&&n&&m))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:n,height:m});const g=await s.fetchFeatureInfo(p,n,m,c,l);return F(o),g}};return a([h()],t.prototype,"exportImageParameters",void 0),a([h({readOnly:!0})],t.prototype,"exportImageVersion",null),a([h()],t.prototype,"layer",void 0),a([h({readOnly:!0})],t.prototype,"timeExtent",null),t=a([M("esri.views.layers.WMSLayerView")],t),t};let u=class extends H(W(q(L))){constructor(){super(...arguments),this.bitmapContainer=new E}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((t=>{$(t)||C.getLogger(this).error(t)}))}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:i}=e;this.bitmapContainer=new E,this.container.addChild(this.bitmapContainer),this.strategy=new U({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:i,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R((()=>this.exportImageVersion),(()=>this.requestUpdate())))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:i}=this,{x:o,y:s}=e,{spatialReference:d}=t;let r,p=0,n=0;if(i.children.some((g=>{const{width:w,height:v,resolution:b,x:y,y:x}=g,I=y+b*w,P=x-b*v;return o>=y&&o<=I&&s<=x&&s>=P&&(r=new V({xmin:y,ymin:P,xmax:I,ymax:x,spatialReference:d}),p=w,n=v,!0)})),!r)return null;const m=r.width/p,c=Math.round((o-r.xmin)/m),l=Math.round((r.ymax-s)/m);return{extent:r,width:p,height:n,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,i,o){return this.layer.fetchImageBitmap(e,t,i,{timeExtent:this.timeExtent,...o})}};a([h()],u.prototype,"strategy",void 0),a([h()],u.prototype,"updating",void 0),u=a([M("esri.views.2d.layers.WMSLayerView2D")],u);const wt=u;export{wt as default};

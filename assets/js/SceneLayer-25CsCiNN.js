const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/editingSupport-BUnfZ_zx.js","assets/js/test-DMnSxVQs.js","assets/js/index-BJQUWR-1.js","assets/js/vendor-CHjNVy30.js","assets/css/index-xCubpQZP.css","assets/js/station-DfQHTTxy.js","assets/css/test-D2ol9zJk.css","assets/js/EditBusLayer-Bas8QQcN.js","assets/js/infoFor3D-VMSlSy0z.js","assets/js/Mesh-BpX3n7Fz.js","assets/js/axisAngleDegrees-CKN8jXll.js","assets/js/quat-Bl4gg7Oa.js","assets/js/MeshComponent-gBm4yCCq.js","assets/js/meshProperties-Cj6q1fp6.js","assets/js/MeshLocalVertexSpace-pp_jQN70.js","assets/js/MeshTransform-CXnfAX4N.js","assets/js/MeshVertexAttributes-xGPVcWFa.js","assets/js/meshVertexSpaceUtils-C_yYfkz_.js","assets/js/triangulationUtils-DiH_A6V9.js","assets/js/Indices-CjrokVvN.js","assets/js/deduplicate-D_PrXreV.js","assets/js/vertexSpaceConversion-V-RwHtes.js","assets/js/computeTranslationToOriginAndRotation-B5dlshrR.js","assets/js/vec3-DKP8VnvX.js","assets/js/BufferView-CRrbrpVC.js","assets/js/vec4-DLWrDfQy.js","assets/js/External-Dq1L3YEY.js"])))=>i.map(i=>d[i]);
import{a as j}from"./index-BJQUWR-1.js";import{v as i,w as s,cL as D,x as L,dx as q,aU as P,fM as J,nb as _,d9 as w,e3 as X,fD as Y,fC as ee,H as K,L as te,s as p,dg as re,fs as ie,ft as se,fu as ae,fv as oe,bI as ne,fw as le,aw as H,bw as de,iV as U,V as m,F as pe,cI as ue,nc as ye,d as ce,dC as C,_ as fe,av as N,e4 as x,dd as he,gQ as me,j0 as ge,lf as ve,fJ as V,nd as we,fL as be,fN as Ie,iX as Le,fy as Fe,ne as Se,iZ as _e,dE as Te,iW as Ee,i_ as $e}from"./test-DMnSxVQs.js";import{i as Oe,m as xe,a as je}from"./meshSpatialReferenceScaleUtils-Tv4QQ7eq.js";import{i as Ae}from"./APIKeyMixin-BwA3mwUn.js";import{l as Pe}from"./ArcGISService-CmgVmE1Y.js";import{e as Re}from"./CustomParametersMixin-D2Cn_t_n.js";import{F as De}from"./EditBusLayer-Bas8QQcN.js";import{R as qe,V as G}from"./SceneService-DTbVfh6X.js";import{f as Ue}from"./TemporalLayer-C8vxSxjW.js";import{u as Q,a as Ce}from"./TimeInfo-BDG3uRT1.js";import{s as Ne}from"./associatedFeatureServiceUtils-DqcKWMBa.js";import{t as Ve}from"./capabilities-DoKz1UAZ.js";import{N as Ge,Y as Qe,n as ke,l as k,A as Me}from"./labelingInfo-x9rZLFU5.js";import{c as ze,t as Ke}from"./FeatureReductionSelection-C6VG7clU.js";import{s as He}from"./fieldProperties-C7eLwcbe.js";import{Z as We}from"./FieldsIndex-HhUW4mjA.js";import{p as W,a as Ze,y as Be,m as Je}from"./I3SLayerDefinitions-DD2M5M6w.js";import{r as Xe,n as Ye}from"./infoFor3D-VMSlSy0z.js";import{i as et}from"./LayerFloorInfo-DSub_M9_.js";import{a as tt}from"./lazyLayerLoader-DNOlzJxA.js";import{t as rt}from"./styleUtils-cPuj9opO.js";import{u as it}from"./typeUtils-C6KCJBit.js";import{p as st}from"./popupUtils-D9e_Xuim.js";import{B as at}from"./I3SUtil-CBo438xu.js";import{n as ot,p as nt}from"./popupUtils-DnCNqF8K.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";import"./MeshTransform-CXnfAX4N.js";import"./quat-Bl4gg7Oa.js";import"./axisAngleDegrees-CKN8jXll.js";import"./originUtils-CmZQxivA.js";import"./jsonContext--JKapB0G.js";import"./resourceUtils-BdpmGKuY.js";import"./resourceUtils-CbFcqewb.js";import"./saveUtils-C8vypMrn.js";import"./SimpleRenderer-BRmEDfY-.js";import"./commonProperties-DbyQootx.js";import"./colorRamps-CJBsWMSE.js";import"./ColorStop-DXxxp7Xk.js";import"./visualVariableUtils-L08xCRcr.js";import"./jsonUtils-8wfeekkP.js";import"./defaults3D-BelXX9Kz.js";import"./defaults-CxYRXl92.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-CGaPvNCx.js";import"./diffUtils-3YJ40hic.js";import"./RendererLegendOptions-DwnCe4OB.js";import"./styleUtils-BLaqcVJr.js";import"./NormalizationBinParametersMixin-BE2oKi81.js";import"./labelUtils-CDaO9w0G.js";import"./UnknownTimeZone-BTcI1Sc1.js";import"./ClassBreaksRenderer-vhcRb_6K.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-CJ-ldC4v.js";import"./ArcadeExpression-DICBwx3X.js";import"./TimeOnly-6nuEd6-R.js";import"./enum-Dj4NXxC3.js";import"./utils-y48t8Afq.js";import"./defaultCIMValues-eS1WuCTt.js";import"./enums-DCdj6Lab.js";import"./heatmapUtils-PVivGZel.js";import"./I3SBinaryReader-NtP671oc.js";import"./VertexAttribute-BfkzOMLV.js";import"./edgeUtils-ro11SGFe.js";import"./floatRGBA-BSE9nSch.js";import"./NormalAttribute.glsl-DjSF-sAn.js";import"./glsl-Cj7KC756.js";import"./ShaderOutput-Bdd80V3g.js";import"./BindType-BBwFZqyN.js";import"./orientedBoundingBox-BkX7KmB9.js";import"./computeTranslationToOriginAndRotation-B5dlshrR.js";function Z({associatedLayer:e,serviceUpdateTimeStamp:t}){const r=e?.editingInfo?.lastEditDate,o=e?.serverGens,n=r!=null,l=t!=null,d=n&&l&&t.lastUpdate!==r.getTime();return n&&(d||!l&&o?.minServerGen!==o?.serverGen)}const lt=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const r=this.associatedLayer?.timeInfo;if(r==null)return null;const o=r.clone();return q(o,this.fieldsIndex),o}set timeInfo(r){q(r,this.fieldsIndex),this._override("timeInfo",r)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(r){this._override("timeExtent",r)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(r){this._override("timeOffset",r)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(r){this._override("datesInUnknownTimezone",r)}async loadTimeInfoFromService(r){const{serviceTimeInfo:o}=this;if(o==null)return;const{startTimeField:n,endTimeField:l}=o;if(n==null&&l==null||Z({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const d=async h=>{let u=null;try{u=(await this.fetchStatistics?.(h,r))?.stats}catch{}if(u==null)return null;const{minTimeStr:v,min:T,maxTimeStr:E,max:$}=u,F=h===n?v??T:E??$;return F!=null?new Date(F):null},[y,c]=await Promise.all([d(n),d(l)]);if(n!=null&&y==null||l!=null&&c==null)return;const f=new D({start:y,end:c});this.setAtOrigin("timeInfo",new Q({endField:l,startField:n,fullTimeExtent:f}),"service")}};return i([s({type:Q,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),i([s({type:D,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),i([s({type:Ce,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),i([s({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),i([s({type:I,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=i([L("esri.layers.mixins.TemporalSceneLayer")],t),t};let I=class extends P{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};i([s({type:String})],I.prototype,"endTimeField",void 0),i([s({type:String})],I.prototype,"startTimeField",void 0),I=i([L("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],I);let g=class extends P{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([s({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"name",void 0),i([s({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"field",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),i([s({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"type",void 0),g=i([L("esri.layers.support.RangeInfo")],g);var A;let b=A=class extends P{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new _,this._geometriesSource=null}initialize(){this.addHandles(X((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),Y))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=_.fromJSON(e,r):this._geometriesSource={url:ee(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:o}=this._geometriesSource,n=await K(r,{responseType:"json",signal:t?.signal}),l=e.toJSON(),d=n.data.map((y=>({...y,spatialReference:l})));this.geometries=_.fromJSON(d,o),this._geometriesSource=null}clone(){const e=new A({geometries:te(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([s({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],b.prototype,"spatialRelationship",void 0),i([s({type:_,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),J({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],b.prototype,"geometries",void 0),i([w(["web-scene","portal-item"],"geometries")],b.prototype,"readGeometries",null),b=A=i([L("esri.layers.support.SceneFilter")],b);const dt=b;async function pt({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:o,path:n,customParameters:l,apiKey:d,signal:y}){if(t==null)throw new p(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const c=o.get(e);if(c==null)throw new p(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const f=t.find((v=>v.name===c.name));if(f==null)throw new p(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const h=re(n,f.href),{data:u}=await K(h,{query:{f:"json",...l,token:d},responseType:"json",signal:y});return u}async function ut(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(yt(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function yt(e){const{BlobReader:t,ZipReader:r,BlobWriter:o}=await j(()=>import("./zipjs-wrapper-VhGV0zzF.js"),[]),n=[];return(await new r(new t(e)).getEntries()).forEach((d=>{if(d.directory||/^__MACOS/i.test(d.filename))return;const y=new o,c=d.getData?.(y).then((f=>new File([f],d.filename)));c&&n.push(c)})),Promise.all(n)}const ct=new Set(["3DObject","Point"]),M=He();let a=class extends lt(De(qe(Pe(ie(se(ae(oe(Re(Ae(ne.ClonableMixin(le))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new H,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.attributeTableTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=de(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getField(e)?.domain??null;return this.associatedLayer?Ge(this.associatedLayer,e,t,r):r}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new We(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:W.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Qe(this.associatedLayer)}get geometryType(){return ft[this.profile]||"mesh"}set renderer(e){U(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=e??Ve;const{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:y},data:{supportsZ:c,supportsM:f,isVersioned:h,supportsAttachment:u},operations:{supportsEditing:v,supportsAdd:T,supportsUpdate:E,supportsDelete:$,supportsQuery:F,supportsQueryAttachments:R,supportsAsyncConvert3D:B}}=e,S=e.operations.supportsChangeTracking,O=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsReturnServiceEditsInSourceSpatialReference:y,supportsRollbackOnFailure:n,supportsGeometryUpdate:O&&d,supportsUploadWithItemId:l},data:{supportsAttachment:u,supportsZ:c,supportsM:f,isVersioned:h},operations:{supportsQuery:F,supportsQueryAttachments:R,supportsEditing:v&&S,supportsAdd:O&&T&&S,supportsDelete:O&&$&&S,supportsUpdate:E&&S,supportsAsyncConvert3D:B}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return r!=null&&z[r]?z[r]:(m.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(pe),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await rt(this,{origin:"service"},t),U(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new ue;return this.geometryType==="mesh"?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((r=>{if(r?.features)for(const o of r.features)o.layer=this,o.sourceLayer=this;return r}))}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=ye(this.fieldsIndex,await ot(this,nt(this)));return at(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new ce;return o.attributes=r[0],o.layer=this,o.sourceLayer=this,o}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return st(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(G.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(G.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await j(()=>import("./editingSupport-BUnfZ_zx.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]));let o=t;await this.load();const n=this.associatedLayer;if(!n)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,d=!!n.infoFor3D,y=o?.globalIdUsed??!0;if(d&&l==null)throw new p(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!y)throw new p(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return C(n.url)&&d&&e.deleteFeatures!=null&&l!=null&&(o={...o,globalIdToObjectId:await ke(n,e.deleteFeatures,l)}),r(this,n.source,e,o)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??={};const r=u=>{throw m.getLogger(this).error(".convertMesh()",u.message),u};await this.load(),this.infoFor3D||r(new p("invalid:layer","SceneLayer has no capability for mesh conversion"));const o=await this.extractAndFilterFiles(e),n=o.reduce(((u,v)=>Xe(this.infoFor3D,v)?u+1:u),0);n===0&&r(new Oe),n>1&&r(new xe);const l=this.spatialReference,d=t.location??new fe({x:0,y:0,z:0,spatialReference:l}),y=d.spatialReference.isGeographic?"local":"georeferenced",{default:c}=await j(async()=>{const{default:u}=await import("./Mesh-BpX3n7Fz.js");return{default:u}},__vite__mapDeps([9,2,3,4,1,5,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,8])),f=c.createWithExternalSource(d,{type:"client",files:o},{vertexSpace:y,transform:je(d.spatialReference),unitConversionDisabled:!0}),[h]=await this.uploadAssets([f],{...t,useAssetOrigin:!t.location});return h}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await ut(e)).filter((r=>Ye(t,r))):e}validateLayer(e){if(e.layerType&&!ct.has(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,o){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=o&&o.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some((n=>n.name===e.name)),r=!!this.associatedLayer?.fields?.some((n=>n&&e.name===n.name)),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=o}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPropertyOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPropertyOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled","attributeTableTemplate"],t=N(this);for(let r=0;r<e.length;r++){const o=e[r],n=this.originIdOf(o),l=this.associatedLayer.originIdOf(o);n<l&&(l===x.SERVICE||l===x.PORTAL_ITEM)&&t.setAtOrigin(o,this.associatedLayer[o],l)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");this.associatedLayer?.infoFor3D==null||!e||!C(this.associatedLayer?.url)||!Z(this)||N(this).setAtOrigin("fullExtent",e.clone(),x.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:o}=await Ne(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await tt.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:r,portalItem:o}),await this.associatedLayer.load()}catch(t){he(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(me(e));try{await ge((()=>this.popupEnabled&&this.popupTemplate!=null),e.signal)}catch(r){return void ve(r)}const t=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${t}`):m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${t}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&V(m.getLogger(this),we("Mesh scene layers","relative-to-scene",e)),V(m.getLogger(this),be("Scene layers",e))}async fetchStatistics(e,t){return await pt({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};i([s({types:{key:"type",base:Ke,typeMap:{selection:ze}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],a.prototype,"featureReduction",void 0),i([s({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],a.prototype,"rangeInfos",void 0),i([s({json:{read:!1}})],a.prototype,"associatedLayer",void 0),i([s({type:["show","hide"]})],a.prototype,"listMode",void 0),i([s({type:["ArcGISSceneServiceLayer"]})],a.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],a.prototype,"type",void 0),i([s({...M.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"fields",void 0),i([s()],a.prototype,"types",null),i([s()],a.prototype,"typeIdField",null),i([s()],a.prototype,"templates",null),i([s()],a.prototype,"formTemplate",null),i([s({readOnly:!0,clonable:!1})],a.prototype,"fieldsIndex",null),i([s({type:et,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],a.prototype,"floorInfo",void 0),i([s(M.outFields)],a.prototype,"outFields",void 0),i([s({type:W,readOnly:!0,json:{read:!1}})],a.prototype,"nodePages",void 0),i([w("service","nodePages",["nodePages","pointNodePages"])],a.prototype,"readNodePages",null),i([s({type:[Ze],readOnly:!0})],a.prototype,"materialDefinitions",void 0),i([s({type:[Be],readOnly:!0})],a.prototype,"textureSetDefinitions",void 0),i([s({type:[Je],readOnly:!0})],a.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],a.prototype,"serviceUpdateTimeStamp",void 0),i([s({readOnly:!0})],a.prototype,"attributeStorageInfo",void 0),i([s({readOnly:!0})],a.prototype,"statisticsInfo",void 0),i([s({type:H.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],a.prototype,"excludeObjectIds",void 0),i([s({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],a.prototype,"definitionExpression",void 0),i([s({type:dt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],a.prototype,"filter",void 0),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),i([s(Ie)],a.prototype,"elevationInfo",null),i([s({readOnly:!0,json:{read:!1}})],a.prototype,"effectiveCapabilities",null),i([s({readOnly:!0})],a.prototype,"effectiveEditingEnabled",null),i([s({type:String})],a.prototype,"geometryType",null),i([s(Le)],a.prototype,"labelsVisible",void 0),i([s({type:[Me],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:k},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:k},write:!0}})],a.prototype,"labelingInfo",void 0),i([s(Fe)],a.prototype,"legendEnabled",void 0),i([s({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if(typeof e=="number"&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return r!==void 0?Se(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],a.prototype,"opacity",void 0),i([s({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"priority",void 0),i([s({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"semantic",void 0),i([s({types:it,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],a.prototype,"renderer",null),i([s({json:{read:!1}})],a.prototype,"cachedDrawingInfo",void 0),i([w("service","cachedDrawingInfo")],a.prototype,"readCachedDrawingInfo",null),i([s({readOnly:!0,json:{read:!1}})],a.prototype,"capabilities",null),i([s({type:Boolean,json:{read:!1}})],a.prototype,"editingEnabled",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],a.prototype,"infoFor3D",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],a.prototype,"relationships",null),i([s(_e)],a.prototype,"popupEnabled",void 0),i([s({type:Te,json:{name:"popupInfo",write:!0}})],a.prototype,"popupTemplate",void 0),i([s({readOnly:!0,json:{read:!1}})],a.prototype,"defaultPopupTemplate",null),i([s(Ee)],a.prototype,"attributeTableTemplate",void 0),i([s({type:String,json:{read:!1}})],a.prototype,"objectIdField",void 0),i([w("service","objectIdField",["objectIdField","fields"])],a.prototype,"readObjectIdField",null),i([s({type:String,json:{read:!1}})],a.prototype,"globalIdField",void 0),i([w("service","globalIdField",["globalIdField","fields"])],a.prototype,"readGlobalIdField",null),i([s({readOnly:!0,type:String,json:{read:!1}})],a.prototype,"displayField",null),i([s({type:String,json:{read:!1}})],a.prototype,"profile",void 0),i([w("service","profile",["store.profile"])],a.prototype,"readProfile",null),i([s({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],a.prototype,"normalReferenceFrame",void 0),i([s($e)],a.prototype,"screenSizePerspectiveEnabled",void 0),i([s({json:{read:!1,origins:{service:{read:!0}}}})],a.prototype,"serviceItemId",void 0),i([s(Ue)],a.prototype,"useViewTime",null),a=i([L("esri.layers.SceneLayer")],a);const z={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},ft={"mesh-pyramids":"mesh",points:"point"},Pr=a;export{Pr as default};

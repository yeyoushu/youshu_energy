const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/CatalogLayer-C_M0KG-4.js","assets/js/index-CulM0VMq.js","assets/js/vendor-CHjNVy30.js","assets/css/index-DXVkK3IA.css","assets/js/test-Dp3_P59c.js","assets/js/station-CTe-uNfl.js","assets/css/test-D2ol9zJk.css","assets/js/LRUCache--7okbBjw.js","assets/js/MemCache-CYsUaMUi.js","assets/js/OrderByInfo-BRAutEHC.js","assets/js/utils-Czy_3xGG.js","assets/js/ClassBreaksDefinition-DYQp9k4a.js","assets/js/FeatureLayerBase-CyFKe2Eq.js","assets/js/labelingInfo-HpcBILMX.js","assets/js/SimpleRenderer-Cv_4-yU7.js","assets/js/commonProperties-Cz4LY7so.js","assets/js/colorRamps-B0gQZwFY.js","assets/js/ColorStop-Cu9MX0m5.js","assets/js/visualVariableUtils-CZtJQX17.js","assets/js/jsonUtils-C0_9DqtZ.js","assets/js/defaults3D-B9tjgcmU.js","assets/js/defaults-B2ew532g.js","assets/js/defaultsJSON-GKolV7NZ.js","assets/js/UniqueValueRenderer-U8EJ9Zmb.js","assets/js/diffUtils-CRH5h29A.js","assets/js/RendererLegendOptions-BX0ZTuxr.js","assets/js/styleUtils-B7fY0eUg.js","assets/js/NormalizationBinParametersMixin-D7jY13wx.js","assets/js/labelUtils-BD42FNJJ.js","assets/js/LayerFloorInfo-CGkss_sI.js","assets/js/Relationship-ZVIB7Bqn.js","assets/js/serviceCapabilitiesUtils-Cibhll9V.js","assets/js/infoFor3D-VMSlSy0z.js","assets/js/FeatureEffectLayer-26UFsVao.js","assets/js/FeatureEffect-CuBFMCn2.js","assets/js/FeatureFilter-Dp8Yy4C1.js","assets/js/typeUtils-D_YGTMGu.js","assets/js/ClassBreaksRenderer-D8UibT1q.js","assets/js/DictionaryScriptEvaluator-BP8szh1a.js","assets/js/FieldsIndex-dVB9L1ZQ.js","assets/js/UnknownTimeZone-CD5-cTzw.js","assets/js/ArcadeExpression-Dcbbajtk.js","assets/js/TimeOnly-CSJYFsnz.js","assets/js/enum-DYiiI-Eb.js","assets/js/utils-Bn4MiHWW.js","assets/js/defaultCIMValues-eS1WuCTt.js","assets/js/enums-DCdj6Lab.js","assets/js/heatmapUtils-DD4QNsCV.js","assets/js/popupUtils-sYzRdAbr.js","assets/js/FeatureLayerSource-CqG_Qqsz.js","assets/js/MeshLocalVertexSpace-BIS3_7WL.js","assets/js/meshVertexSpaceUtils-DJqF3X5b.js","assets/js/External-DpL5W0tO.js","assets/js/MeshTransform-DD5i_qG7.js","assets/js/quat-LJUBQ7U8.js","assets/js/axisAngleDegrees-7e8IY39v.js","assets/js/editingSupport-BigvaAS5.js","assets/js/EditBusLayer-tgFZCz6v.js","assets/js/clientSideDefaults-BGTRnQvd.js","assets/js/QueryEngineCapabilities-CsRUnGk7.js","assets/js/QueryTask-OsVRS9TU.js","assets/js/executeForIds-B7TBDwdz.js","assets/js/query-D7rDZ32y.js","assets/js/pbfQueryUtils-DPE1auIa.js","assets/js/pbf-JmGe42-A.js","assets/js/memoryEstimations-T_QTZf5l.js","assets/js/OptimizedFeature-99IiHQtf.js","assets/js/OptimizedFeatureSet-BR8EEvDc.js","assets/js/queryZScale-3rRSqsEH.js","assets/js/executeQueryJSON-DY3OMOWy.js","assets/js/FeatureSet-DR2_MLz0.js","assets/js/featureConversionUtils-BISEwGRc.js","assets/js/editsZScale-DaIJOTHU.js","assets/js/APIKeyMixin-CNR1gULI.js","assets/js/ArcGISService-CvJlLKAW.js","assets/js/CustomParametersMixin-DnycMbXv.js","assets/js/DisplayFilteredLayer-NgY85tE-.js","assets/js/scaleUtils-BTu79So4.js","assets/js/displayFilterUtils-DEO713VP.js","assets/js/OrderedLayer-D6-zNrUd.js","assets/js/TemporalLayer-DVwyCMWq.js","assets/js/TimeInfo-BfXh-Eak.js","assets/js/FeatureType-rNOlx-wE.js","assets/js/FeatureTemplate-NyiQ8gPj.js","assets/js/fieldProperties-B5lKbTPg.js","assets/js/versionUtils-B_VxMTBn.js","assets/js/FeatureLayer-1i3ov8Sx.js","assets/js/FeatureReductionLayer-Dggj6XFo.js","assets/js/FeatureReductionSelection-D2_2kWu1.js","assets/js/jsonUtils-ckGU7SCY.js","assets/js/TrackableLayer-ZFZ1oTsI.js","assets/js/TitleCreator-Cq6q_lIz.js","assets/js/styleUtils-Dk_DlEqH.js","assets/js/interfaces-CL2NbQte.js","assets/js/OrientedImageryLayer-D7NRJSnB.js"])))=>i.map(i=>d[i]);
import{a as S}from"./index-CulM0VMq.js";import{p as d,dA as K,gF as A,s as y,gG as f,c9 as V,gH as u,gI as B,fk as H,gJ as z,gK as j}from"./test-Dp3_P59c.js";import{i as w}from"./originUtils-TS7VWtkB.js";import{P as q,w as O,d as Q,v as W,$ as X,p as x,f as Z,I as N,m as E}from"./utils-BeWH20Zb.js";import{n as ee,l as ae}from"./fetchService-C9db-vkp.js";import{o as te}from"./jsonContext-BGln5sw3.js";import"./vendor-CHjNVy30.js";import"./station-CTe-uNfl.js";import"./saveUtils-CtKjcsNq.js";const T="Feature Service",v="feature-layer-utils",re=`${v}-save`,ne=`${v}-save-as`,p=`${v}-saveall`,m=`${v}-saveall-as`;function I(e){return{isValid:j(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(e,a){const t=te(e,"portal-item");return a?.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=b(e),t=b(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)se(r)?t.push(o):a.push(o);return{layers:a,tables:t}}function se(e,a){return e.isTable}function J(e){return D([e])}async function G(e,a){return/\/\d+\/?$/.test(e.url)?J(a[0]):U(a,e)}async function U(e,a){if(e.reverse(),!a)return D(e);const t=await oe(a,e);for(const r of e)C(r.layer,r.layerJSON,t);return ce(t,e),t}async function oe(e,a){let t=await e.fetchData("json");if(le(t)&&!V(e,u.HOSTED_SERVICE))return t;t||={},ie(t);const{layer:{url:r,customParameters:o,apiKey:s}}=a[0];return await ue(t,{url:r??"",customParameters:o,apiKey:s},a.map((n=>n.layer.layerId))),t}function le(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function ie(e){e.layers||=[],e.tables||=[]}function ce(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}P(e.layers,t),P(e.tables,r)}function P(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);H(t.sort($),a.slice().sort($))&&e.sort(((r,o)=>{const s=a.indexOf(r.id),n=a.indexOf(o.id);return s<n?-1:s>n?1:0}))}function $(e,a){return e<a?-1:e>a?1:0}async function ue(e,a,t){const{url:r,customParameters:o,apiKey:s}=a,{serviceJSON:n,layersJSON:l}=await ee(r,{customParameters:o,apiKey:s}),i=g(e.layers,n.layers,t),c=g(e.tables,n.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],k=l?[...l.layers,...l.tables]:[];await ye(e,h,r,k)}function g(e,a,t){const r=z(e,a,((s,n)=>s.id===n.id));e=e.filter((s=>!r.removed.some((n=>n.id===s.id))));const o=r.added;return o.forEach((({id:s})=>{e.push({id:s})})),{itemResources:e,added:o.filter((({id:s})=>!t.includes(s)))}}async function ye(e,a,t,r){const o=await fe(a),s=a.map((({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find((({id:i})=>i===n))})));await Promise.allSettled(s.map((n=>n.load()))),s.forEach((n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};C(n,n.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:n.operationalLayerType},e)}))}async function fe(e){const a=[];e.forEach((({type:o})=>{switch(ae(o)){case"CatalogLayer":a.push(S(()=>import("./CatalogLayer-C_M0KG-4.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85])).then((s=>s.default)));break;case"FeatureLayer":a.push(S(()=>import("./FeatureLayer-1i3ov8Sx.js"),__vite__mapDeps([86,1,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,72,68,70,73,74,75,76,77,78,57,33,34,35,87,88,89,36,37,7,8,38,39,40,41,42,43,44,45,46,47,79,9,80,81,90,83,82,84,91,85,92,48,93])).then((s=>s.default)));break;case"OrientedImageryLayer":a.push(S(()=>import("./OrientedImageryLayer-D7NRJSnB.js"),__vite__mapDeps([94,4,1,2,3,5,6,86,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,72,68,70,73,74,75,76,77,78,57,33,34,35,87,88,89,36,37,7,8,38,39,40,41,42,43,44,45,46,47,79,9,80,81,90,83,82,84,91,85,92,48,93])).then((s=>s.default)))}}));const t=await Promise.all(a),r=new Map;return e.forEach((({type:o},s)=>{r.set(o,t[s])})),r}function C(e,a,t){e.isTable?_(t.tables,a):_(t.layers,a)}function _(e,a){const t=e.findIndex((({id:r})=>r===a.id));t===-1?e.push(a):e[t]=a}function F(e,a){if(!e.length)throw new y(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function pe(e,a){const t=e.map((r=>r.portalItem.id));if(new Set(t).size>1)throw new y(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(e,a){const t=e.map((r=>r.layerId));if(new Set(t).size!==t.length)throw new y(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function me(e){F(e,p),await Promise.all(e.map((a=>a.load())));for(const a of e)x(a,p,I),Z({layer:a,itemType:T,errorNamePrefix:p});pe(e,p),M(e,p)}function de(e){if(!("layerType"in e))return!!e.charts?.length;switch(e.layerType){case"OrientedImageryLayer":return!!e.charts?.length;case"SubtypeGroupLayer":return!!e.layers.some((a=>!!a.charts?.length));case"SubtypeGroupTable":return!!e.tables.some((a=>!!a.charts?.length));case"CatalogLayer":return!!e.footprintLayer?.charts?.length}}function L(e,a){let t=0,r=0,o=0,s=0;for(const n of[...a.layers,...a.tables])if(de(n)&&s++,"layerType"in n)switch(n.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(e,u.ORIENTED_IMAGERY_LAYER,t>0),f(e,u.SUBTYPE_GROUP_LAYER,r>0),f(e,u.SUBTYPE_GROUP_TABLE,o>0),f(e,u.CHARTS,s>0)}function Y(e,a,t){B(a,u.METADATA),f(a,u.MULTI_LAYER,e.length>1),f(a,u.SINGLE_LAYER,e.length===1),f(a,u.TABLE,t.tables.length>0&&t.layers.length===0),L(a,t)}async function he(e,a,t){L(a,t)}async function we(e,a,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=e,i=d(r);a.url=(i?.serverType==="FeatureServer"?r:`${r}/${o}`)??null,a.title||=s,a.extent=null,l||n==null||(a.extent=await A(n)),Y([e],a,t)}function be(e,a){for(const s of e){const n=s.parsedUrl.path,l=d(n);if(!l?.url.path)throw new y(`${a}:invalid-parameters`,E(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l?.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new y(`${a}:invalid-parameters`,E(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&e.length>1)throw new y(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=d(e[0].parsedUrl.path),r=t?.url.path;if(!e.every((s=>d(s.parsedUrl.path)?.url.path===r)))throw new y(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function Te(e){F(e,m),await Promise.all(e.map((a=>a.load())));for(const a of e)x(a,m,I);be(e,m),M(e,m)}function ve(e,a){L(e,a),N(e)}async function Ie(e,a,t){let r=0;for(const{isTable:n}of e)n||r++;const o=e[0].parsedUrl.path,s=d(o);if(a.url=s?.serverType==="FeatureServer"?s.url.path:o,a.title||=s.title,a.extent=null,r>0){const n=e.map((l=>l.fullExtent)).filter(K).reduce(((l,i)=>l.clone().union(i)));n&&(a.extent=await A(n))}Y(e,a,t),N(a)}async function xe(e,a){return q({layer:e,itemType:T,validateLayer:I,createJSONContext:t=>b(t,e),createItemData:(t,r)=>G(r,[t]),errorNamePrefix:re,setItemProperties:he},a)}async function Ne(e,a){await me(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map((n=>O(n,n.isTable?r.forTables:r.forLayers,a)))),s=await G(t,e.map(((n,l)=>({layer:n,layerJSON:o[l]}))));return ve(t,s),await t.update({data:s}),await Promise.all(e.slice(1).map((n=>n.portalItem.reload()))),w(r.forLayers),w(r.forTables),t.clone()}async function Re(e,a,t){return X({layer:e,itemType:T,validateLayer:I,createJSONContext:r=>b(r,e),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:ne,newItem:a,setItemProperties:we},t)}async function De(e,a,t){await Te(e);const r=Q({itemType:T,errorNamePrefix:m,newItem:a}),o=R(r),s=await Promise.all(e.map((l=>O(l,l.isTable?o.forTables:o.forLayers,t)))),n=await U(e.map(((l,i)=>({layer:l,layerJSON:s[i]}))));await Ie(e,r,n),await W(r,n,t);for(const l of e)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{xe as save,Ne as saveAll,De as saveAllAs,Re as saveAs};

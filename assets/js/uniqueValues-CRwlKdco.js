const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/intersectionOperator-b2hwSPH9.js","assets/js/test-DMnSxVQs.js","assets/js/index-BJQUWR-1.js","assets/js/vendor-CHjNVy30.js","assets/css/index-xCubpQZP.css","assets/js/station-DfQHTTxy.js","assets/css/test-D2ol9zJk.css","assets/js/Point2D-COgQ1fyf.js","assets/js/ProjectionTransformation-DUElxxPj.js","assets/js/Envelope2D-Co2MCTM2.js","assets/js/Transformation2D-BGxYmbTi.js","assets/js/SimpleGeometryCursor-B92kdZ15.js","assets/js/OperatorDefinitions-DP7_WWTp.js","assets/js/jsonConverter-BZ2wfFT6.js","assets/js/operatorIntersection-CcY_Z-Iu.js","assets/js/apiConverter-BUGr88Kj.js"])))=>i.map(i=>d[i]);
import{s as y,de as ot,bx as lt,cI as Ge,du as ut,H as mt,e6 as D,aU as Je,v as w,w as S,x as M,bJ as ct,iP as pt,e_ as dt,cN as q,cr as yt,dA as ft,cn as C,mZ as ht,m_ as gt,ce as wt,dt as Ft,oU as St,ds as vt,j0 as Se,oV as je,V as xt,eT as Ve,cV as Vt,bY as qt,oW as Lt,oX as G,dC as zt,cf as Ue,d as qe,oY as _t}from"./test-DMnSxVQs.js";import{F as de,U as L,N as le,b as Oe,T as Tt,M as bt}from"./utils-yikIE6So.js";import{j as Ze,M as Q,$ as N,C as Et,U as P,f as B}from"./utils-DY2Sc_K6.js";import{d as $t,c as Ct,j as Le,m as ge,q as We,C as ue,$ as me,P as He,a as Nt,n as Mt}from"./utils-B8wkDuTC.js";import{t as It}from"./jsonUtils-BheKt0Vs.js";import{a as Ot}from"./executeQueryJSON-Cr2_rwwd.js";import"./pbf-C2q1zdMn.js";import{g as ze}from"./FeatureSet-bSdURJbK.js";import{a as At}from"./index-BJQUWR-1.js";import{s as kt}from"./quantizationUtils-DwvMSTst.js";import{summaryStatistics as J,uniqueValues as _e,histogram as ce,classBreaks as Te,heatmapStatistics as Pt}from"./statsWorker-Bzy18Yge.js";import Bt from"./AttributeBinsQuery-DE1JMZti.js";import{a as Qt,m as Rt,n as Dt,b as Gt}from"./FixedIntervalBinParameters-y0_TYCdu.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";import"./heatmapUtils-PVivGZel.js";import"./ClassBreaksDefinition-B7GFRgXT.js";import"./typeUtils-C6KCJBit.js";import"./ClassBreaksRenderer-vhcRb_6K.js";import"./commonProperties-DbyQootx.js";import"./colorRamps-CJBsWMSE.js";import"./ColorStop-DXxxp7Xk.js";import"./visualVariableUtils-L08xCRcr.js";import"./jsonUtils-8wfeekkP.js";import"./defaults3D-BelXX9Kz.js";import"./defaults-CxYRXl92.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-DwnCe4OB.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-CJ-ldC4v.js";import"./FieldsIndex-HhUW4mjA.js";import"./UnknownTimeZone-BTcI1Sc1.js";import"./ArcadeExpression-DICBwx3X.js";import"./TimeOnly-6nuEd6-R.js";import"./enum-Dj4NXxC3.js";import"./utils-y48t8Afq.js";import"./defaultCIMValues-eS1WuCTt.js";import"./enums-DCdj6Lab.js";import"./SimpleRenderer-BRmEDfY-.js";import"./UniqueValueRenderer-CGaPvNCx.js";import"./diffUtils-3YJ40hic.js";import"./styleUtils-BLaqcVJr.js";import"./query-WVsuoyMs.js";import"./pbfQueryUtils-DO8eYVpO.js";import"./OptimizedFeature-C54A3ei6.js";import"./memoryEstimations-Bf3XeyNh.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-CYbRiGtO.js";import"./queryUtils-BbHc-bQ7.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-BE2oKi81.js";function Jt(e,t){if(!e.view)throw new y(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new y(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new y(`${t}:invalid-parameters`,"3d view is not supported for binning")}let ee=class H{constructor(){this.connection=null}async open(t){this.connection=await ot("statsWorker",{strategy:"distributed",signal:t})}destroy(){this.connection?.close()}static getInstance(){return H.instance||(H.instance=new H),H.instance}async summaryStatistics(t,a){if(!this.connection)throw new y("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new y("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new y("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new y("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new y("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function jt(e,t,a,i,r){return Zt(t,await Ut(e,t,a,i,r))}async function Ut(e,t,a,i,r){const s={...i},l=Wt(t,a),o=t.outStatistics?.[0]!=null,n=lt("featurelayer-pbf-statistics"),u=!o||n;let m;return u||(m=await Ot(e,l,s,r)),a?.fieldsIndex,m.fields,m}async function Zt(e,t,a,i){return ze.fromJSON(t)}function Wt(e,t){let a=Ge.from(e);return a.sourceSpatialReference=a.sourceSpatialReference??t?.sourceSpatialReference??null,a}async function Ht(e,t,a,i){const r=ut(e),{source:s,checkValueRange:l}=t,{classificationDefinition:o}=a,n={...a.toJSON(),f:"json"};let u=null;if(u=o?.type==="class-breaks-definition"?o.classificationField:o?.attributeField,s){const d={source:s?.toJSON()};n.layer=JSON.stringify(d)}n.classificationDef&&(n.classificationDef=JSON.stringify(n.classificationDef));let m={query:n};i&&(m={...i,...m});const c={url:r.path,field:u,checkValueRange:l},p=r.path+"/generateRenderer";return mt(p,m).then((d=>Kt(c,d)))}function Kt(e,t){const{field:a,checkValueRange:i,url:r}=e,s=t?.data;if(!s)return;if(!i){const u=Ae(s);return Promise.resolve(u)}const l=new D({statisticType:"min",onStatisticField:a}),o=new D({statisticType:"max",onStatisticField:a}),n=new Ge({outStatistics:[l,o]});return jt(r,n).then((u=>{const m=u.features[0].attributes;let c=null,p=null;for(const d in m)d.toLowerCase().indexOf("min")===0?c=m[d]:p=m[d];return Ae(s,c,p)}))}function Ae(e,t,a){if(e.type==="classBreaks"){const r=It(e);return{classBreaks:r.classBreakInfos.map(((s,l)=>(l===0&&t!=null&&(s.minValue=t),l===r.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label}))),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:i}=e;return{uniqueValues:i?.map(((r,s)=>(s===0&&t!=null&&(r.value=t),s===i.length-1&&a!=null&&(r.value=a),{count:r.count,value:r.value,label:r.label})))??[]}}let A=class extends Je{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};w([S({json:{name:"classificationDef",write:!0}})],A.prototype,"classificationDefinition",void 0),w([S({type:String,json:{write:!0}})],A.prototype,"where",void 0),A=w([M("esri.rest.support.GenerateRendererParameters")],A);let I=class extends Je{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};w([ct({uniqueValueDef:"unique-value-definition"})],I.prototype,"type",void 0),w([S()],I.prototype,"attributeField",void 0),w([S()],I.prototype,"attributeField2",void 0),w([S()],I.prototype,"attributeField3",void 0),w([S({json:{write:!0}})],I.prototype,"fieldDelimiter",void 0),w([S({json:{write:!0}})],I.prototype,"uniqueValueFields",null),I=w([M("esri.rest.support.UniqueValueDefinition")],I);const Ke="no_dominant_category";function Xt(e){return{expression:Yt(e,{defaultValue:`'${Ke}'`})}}function Yt(e,t){const{defaultValue:a,layer:i}=t,r=[];if(a){const s=e.map((l=>`${l} <= 0`)).join(" AND ");r.push(`WHEN ${s} THEN ${a}`)}for(const s of e){const l=e.reduce(((u,m)=>(s!==m&&u.push(`${s} > ${m}`),u)),[]).join(" AND "),o=i&&Ze(i,s),n=`'${s}'`?`'${s}'`:o?Q(s):s;r.push(`WHEN ${l} THEN ${n}`)}return`CASE ${r.join(" ")} ELSE ${a||"0"} END`}function ea(e){return e&&e.map((t=>`$feature["${t}"];`)).join(`
`)+`
`||""}function ta(e,t=!1){const a=e.map((r=>`"${r}"`));return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function be(e){const t=ta(e);return`
  ${ea(e)}
  ${t}
  return maxValueField;
  `}let T=class extends pt{constructor(t){super(t),this.adapterName="layer-adapter"}};w([S({readOnly:!0})],T.prototype,"adapterName",void 0),w([S({constructOnly:!0})],T.prototype,"layer",void 0),w([S()],T.prototype,"geometryType",void 0),w([S()],T.prototype,"objectIdField",void 0),w([S()],T.prototype,"supportsSQLExpression",void 0),w([S()],T.prototype,"hasQueryEngine",void 0),w([S()],T.prototype,"minScale",void 0),w([S()],T.prototype,"maxScale",void 0),w([S()],T.prototype,"fullExtent",void 0),T=w([M("esri.smartMapping.support.adapters.LayerAdapter")],T);const aa=/_value$/i,ra=Math.LOG10E,ia={SECOND:1e3,MINUTE:6e4,HOUR:36e5},X=10;function Y(e){return e.map((t=>t.toJSON()))}function ke(e,t){const a=[],i=e.layer,r="featureReduction"in i?i.featureReduction:null,s=r?.type==="binning",l=r!=null&&"fields"in r?r.fields?.map((o=>o.name?.toLowerCase())).filter(Boolean):[];if(!s||!t)return a;for(const o of t)l.includes(o.toLowerCase())||a.push(o);return a}function pe(e,t,a){const i=[];if(t)for(const r of t){const s=e.getField(r);s&&a&&"availableFields"in a&&!a.availableFields?.includes(s.name)&&i.push(s.name)}return i}function Ee(e,t){const a=e&&e.features;if(a?.length===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const i=a?.[0]?.attributes,r={};for(const s in i)r[s.replace(aa,"").toLowerCase()]=i[s];return r.totalcount!=null&&r.totalcount>=r.count&&(r.nullcount=r.totalcount-r.count),delete r.totalcount,r.min===r.max&&r.min!=null&&r.stddev==null&&(r.stddev=r.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach((s=>{r[s]!=null&&(r[s]=Math.ceil(r[s]))})),r.min===r.max&&r.min!=null&&(r.avg=r.min,r.stddev=r.variance=0)),r}function sa(e){const t=[],a=e.classBreaks,i=a[0].minValue,r=a[a.length-1].maxValue;a.forEach((l=>{t.push([l.minValue,l.maxValue])}));const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:i,max:r,intervals:t,sqlExpr:j(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function j(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:s}=e,l=Ze(s,t);let o=t;return a==="percent-of-total"?o=`((${l?Q(t):t} / ${r}) * 100)`:a==="log"?o=`(log(${t}) * ${ra})`:a==="field"?o=`(${l?Q(t):t} / ${i})`:a==="natural-log"?o=`(log(${l?Q(t):t}))`:a==="square-root"&&(o=`(power(${l?Q(t):t}, 0.5))`),o}function Xe(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()!==t){a=e[i];break}}return a}function K(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()===t){a=e[i];break}}return a}function Ye(e,t,a,i,r){const s={},l="countOFExpr";e&&e.features&&e.features.forEach((n=>{const u=n.attributes,m=Xe(u,l),c=K(u,l);m!=null&&c!=null&&m!==0&&(s[m]=c)}));const o=[];return Le(t,a,i).forEach(((n,u)=>{const m=(u+1).toString();o.push({minValue:n[0],maxValue:n[1],count:s.hasOwnProperty(m)?s[m]:0})})),{bins:o,minValue:t,maxValue:a,normalizationTotal:r}}async function $e(e,t){const a=e&&e.features,{field:i,field2:r,field3:s,fieldDelimiter:l,layer:o,view:n,signal:u,labels:m}=t,c=`countOF${(!i||!r)&&i||"Expr"}`,p={};let d=!1;for(const h of a){const g=h.attributes,v=K(g,c);let F=i?K(g,i):Xe(g,c),x=r?K(g,r):null,z=s?K(g,s):null;F===null&&v===0&&(d=!0),(F==null||typeof F=="string"&&F.trim()==="")&&(F=null),r&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),s&&(z==null||typeof z=="string"&&z.trim()==="")&&(z=null);let _=F;r&&(_=`${ge(_)}${l}${ge(x)}`,s&&(_=`${_}${l}${ge(z)}`)),p[_]==null?p[_]={count:v,data:_}:p[_].count=p[_].count+v}if(i&&d){const h=i+" is NULL";try{const g=await o.queryFeatureCount({whereClause:h,view:n,signal:u});return p.null.count=p.null.count+g,we(p,m)}catch{return q(u),we(p,m)}}return we(p,m)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const i=e?a.getField(e):null,r=i?a.getFieldDomain(i.name):null;if(r)return r;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),l=s.map((o=>new ht({code:o.value})));return new gt({codedValues:l})}async function ye(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:i,field3:r}=e;if(a&&!i){const l=a?t.getField(a):null,o=l?t.getFieldDomain(l.name):null;return o?[o]:[]}const s=[];return a&&(s.push(Fe(a,e,t)),i&&(s.push(Fe(i,e,t)),r&&s.push(Fe(r,e,t)))),Promise.all(s)}function na(e,t){return Et(e,new Date(0),t,"milliseconds").sqlExpression}function oa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ia[t]}`}function la(e){return e?Q(["HOUR","MINUTE","SECOND"].map((t=>`(${oa(e,t)})`)).join(" + ")):null}function b(e){return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function Ce(e,t){const a=new Set(e.map((r=>r.value))),i=t.filter((r=>!a.has(r)));for(const r of i)e.push({value:r,count:0});e.sort(((r,s)=>t.indexOf(r.value)-t.indexOf(s.value)));for(const r of e)r.value===Ke&&(r.value=null);return{predominantCategoryInfos:e}}function Pe(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map((a=>{const i=ua(a,e.fieldsIndex);return i?new yt({type:i,name:a.name,alias:a.alias}):null})).filter(ft)}function ua(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function et(e,t){return N(t)?na(e,t?.name):C(t)?la(t?.name):null}function Ne(e,t,a,i=!0){const{field:r,normalizationType:s,normalizationField:l,normalizationTotal:o,minValue:n,maxValue:u,filter:m}=t,c=e.supportsSQLExpression?et(e,a)||t.sqlExpression:null,p=j({field:r,normalizationType:s,normalizationField:l,normalizationTotal:o,layer:e}),d=c||p,h=d?le(d,n,u):null,g=de({field:r,normalizationField:l,normalizationType:s}),v=L(t.sqlWhere,g),F=L(v,h),x=$t({normalizationField:l,normalizationType:s,sqlExpression:c,supportsSQLExpression:e.supportsSQLExpression,minValue:n,maxValue:u}),z=dt(e.getField(r??void 0)),{include:_,exclude:te}=t.outStatisticTypes||{},fe=Ct.filter(($=>(!_||_.includes($))&&(!te||!te.includes($))&&($==="nullcount"?x:!z||$==="count")&&($!=="median"||i))),O=e.createQuery();return O.where=L(O.where,F),O.sqlFormat=c?"standard":null,O.outStatistics=fe.map(($=>{const U=new D;let Z=null,W=null,Ie=`${$}_value`;if($==="variance")Z="var",W=d;else if($==="nullcount"){const he=e.objectIdField;Z="count",W=he&&e.getField(he)?he:"1",Ie="totalcount_value"}else $==="median"?(Z="percentile-continuous",W=d,U.statisticParameters={value:.5}):(Z=$,W=d);return U.statisticType=Z,U.onStatisticField=W,U.outStatisticFieldName=Ie,U})),E(O,m),O}function E(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function tt(e,t){const{field:a,field2:i,field3:r,sqlExpression:s}=t,l=!(!a||!i),o=e.createQuery();return o.where=L(o.where,t.sqlWhere),o.sqlFormat=s?"standard":null,o.outStatistics=[ma(l?null:a,l?"1":s)].filter(Boolean),o.groupByFieldsForStatistics=[a||s,i,r].filter(Boolean),E(o,t.filter),o}function ma(e,t){const a="countOF"+(e||"Expr"),i=new D;return i.statisticType="count",i.onStatisticField=t?"1":e,i.outStatisticFieldName=a,i}function re(e,t,a,i=X,r,s,l){const{min:o,max:n,normTotal:u,excludeZerosExpr:m}=t,c=t.intervals||Le(o,n,i),p=t.sqlExpr||a;return ca(e,c,p,m,r,s,l).then((d=>({bins:d.map(((h,g)=>({minValue:c[g][0],maxValue:c[g][1],count:h.status==="fulfilled"?h.value:0}))),minValue:o,maxValue:n,normalizationTotal:u})))}function ca(e,t,a,i,r,s,l){const o=[],n=t.length;for(let u=0;u<n;u++){const m=L(i,L(a+" >= "+t[u][0],t[u][1]!==null?a+(u===n-1?" <= ":" < ")+t[u][1]:""));o.push(m)}return Promise.allSettled(o.map((u=>e.queryFeatureCount({whereClause:u,view:r,filter:s,signal:l}))))}const at="countOFExpr",pa="lowerBoundary",da="upperBoundary";function rt(e,t,a){const i=e.valueExpression||e.sqlExpression,r=e.signal;if(!i){const{field:s,normalizationType:l,normalizationField:o}=e,n=s?t.getField(s):null,u=N(n)||C(n);return{sqlExpression:u?et(t,n):j({field:s,normalizationType:l,normalizationField:o,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||de({field:s,normalizationType:l,normalizationField:o}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}async function ve(e,t,a){const{field:i,normalizationType:r,normalizationField:s,signal:l}=e,o=de({field:i,normalizationType:r,normalizationField:s}),n=new A({classificationDefinition:We({field:i,normalizationType:r,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||X}),where:L(o,a)});return t.generateRenderer(n,l).then((u=>{const{normalizationTotal:m,classBreaks:c}=u;return sa({field:i,normalizationType:r,normalizationField:s,normalizationTotal:m,classBreaks:c,where:o,layer:t})}))}async function ya(e,t,a,i,r){const{field:s,sqlExpression:l,normalizationField:o,classificationMethod:n,normalizationType:u}=e,m=s?t.getField(s):null,c=C(m),p=vt(m)||c,d=e.numBins||X;if(p){if(u||n)throw new y(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const h=(i-a)/d/1e3,g=h/86400;return new Qt({field:s,expression:l,interval:{unit:c?"seconds":"days",value:Math.ceil(c?h:g)},start:a,end:i})}if(n==="defined-interval")return new Rt({field:s,expression:l,normalizationField:o,normalizationTotal:r,normalizationType:u,interval:e.definedInterval??Math.ceil((i-a)/d),start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null});if(n==="manual")throw new y(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(n==="natural-breaks"||n==="quantile"||n==="standard-deviation"){const h=j({field:s,normalizationField:o,normalizationTotal:r,normalizationType:u,layer:t}),g=e.minValue!==null&&e.maxValue!==null?le(h,e.minValue,e.maxValue):void 0,v=await ve(e,t,g);if(!v.intervals)throw new y(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const F=[a,...v.intervals.map((x=>x[1]))];return new Dt({field:u?null:s,expression:u?h:l,boundaries:F})}return new Gt({field:s,normalizationField:o,normalizationTotal:r,normalizationType:u,expression:l,numBins:d,start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null})}function it(e,t,a,i){return a!=null&&i!=null?Promise.resolve({min:a,max:i}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then((r=>({min:r.min,max:r.max})))}async function st(e,t,a,i){const{field:r,minValue:s,maxValue:l,filter:o,view:n}=e,u=r?t.getField(r):null,m=wt(u)||Ft(u),c=rt(e,t,a),{min:p,max:d}=await it(c,t,s,l);if(p==null||d==null)return{query:null,min:p,max:d};const h=new D({statisticType:"count",outStatisticFieldName:at,onStatisticField:"1"}),g=L(i,c.sqlWhere),v="lowerBoundary",F="upperBoundary",x=new Bt({binParameters:await ya(e,t,p,d,a),outStatistics:[h],binOrder:e.sortOrder,where:g,lowerBoundaryAlias:v,upperBoundaryAlias:F,outTimeZone:n?.timeZone&&m?St(n.timeZone):null});return E(x,o),{query:x,min:p,max:d}}function Be(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function nt(e,t,a){const i=C(t);return{...a,bins:e.features.map((r=>({minValue:Be(r.attributes[pa],i),maxValue:Be(r.attributes[da],i),count:r.attributes[at]})))}}function Qe(e,t,a){const{valueExpression:i,view:r}=e,{featuresJSON:s,graphics:l,fieldInfos:o}=t,n={field:e.field,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&r&&(s||l)&&(n.viewInfoParams=b(r),n.timeZone=r.timeZone,n.fieldInfos=o),n}const fa=5;let ae=null,k=class extends T{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){this.workerClient?.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new y(`${this.adapterName}:insufficient-data`,"layerView is required to fetch the features");const t=new AbortController,a=Se((()=>!e.updating),t.signal);await je(a,5e3,t).catch((i=>{throw xt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),i}))}async _fetchFeatureSetFromMemory(e,t,a){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!t)throw new y(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(r),r.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,i){const r=this.layer,s=i==="json";if(this._hasLocalSource&&"queryFeatures"in r){const o=await r.queryFeatures(t);return s?Y(o.features):o.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:o}=await e.queryFeaturesJSON(t,{signal:a});return o}if(!("queryFeatures"in e))throw new y(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const l=await e.queryFeatures(t,{signal:a});return s?Y(l.features):l.features}_fetchFeaturesForStats(e,t){return P({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t)))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:i}=e,r=Ne(this,e,t),s=await this._fetchFeatureSetFromMemory(r,a,i),l=Ee(s,N(t)||C(t));return ue(l,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:l}=t,o={include:["sum"]},n=(!i&&!r&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(l,{field:e},{signal:a}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:o},i):await J({attribute:{field:e,outStatisticTypes:o},features:r??[]})).sum;if(n==null)throw new y(`${this.adapterName}:invalid`,"invalid normalizationTotal");return n}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:l}=e,o={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:n,graphics:u,layerView:m,query:c,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return r&&a&&(n||u)&&(o.fieldType=t?.type?Ve.toJSON(t.type):null,o.viewInfoParams=b(a),o.timeZone=a.timeZone,o.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:n,graphics:u,layerView:m,query:c},l)),!n&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(c,o,{signal:l}):n?this.workerClient.summaryStatistics(o,n):J({attribute:o,features:u})}async _getFilteredFeatures(e,t){let a=e;const i=t?.geometry;if(t?.spatialRelationship==="intersects"&&i){const r=await At(()=>import("./intersectionOperator-b2hwSPH9.js").then(s=>s.i),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]));a=e.filter((({geometry:s})=>!(!s||!r.execute(s,i))))}return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:l,normalizationField:o,valueExpression:n,layerViewFunc:u,signal:m}=e;let c=e.returnGeometry;if(c==null&&n){if(!ae){const{arcadeUtils:x}=await Vt();ae=x}const F=ae.hasGeometryOperations(n);F&&await ae.enableGeometryOperations(),c=F}let p=null,d=null,h=null,g=null,v=null;if(i)try{const F=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;p=await i.whenLayerView(F),d=u!=null&&u in p&&typeof p[u]=="function"}catch{d=!1}if(d)try{await this._waitForLayerViewUpdate(p);const F=await P({field:r,field2:s,field3:l,normalizationField:o,valueExpression:n});pe(this,F,p).length?d=!1:(h=this.layer.createQuery(),h.outFields=F,h.returnGeometry=!1,E(h,a)),p.suspended&&(d=!1)}catch{d=!1}return d||(g=await this._fetchFeaturesForStats({field:r,field2:s,field3:l,valueExpression:n,normalizationField:o,returnGeometry:c,filter:a,view:i,signal:m},"json"),v=(await P({valueExpression:n})).map((F=>this.getField(F)?.toJSON())).filter(Boolean)),{layerView:p,query:h,featuresJSON:g,fieldInfos:v}}async _uvFromClientQuery(e,t){const{view:a,signal:i}=e,r=tt(this,e),s=await this._fetchFeatureSetFromMemory(r,a,i),l=await $e(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:B,view:e.view,signal:e.signal});return me(l,t,e.returnAllCodedValues,B)}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:l}=e,{featuresJSON:o,graphics:n,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:B,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(o||n)&&(p.viewInfoParams=b(a),p.timeZone=a.timeZone,p.fieldInfos=c),!o&&!n&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,p,{signal:l}):o?this.workerClient.uniqueValues(p,o):_e({attribute:p,features:n})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then((a=>{if(!a.count)throw new y(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}})),t.then((a=>re(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal)))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:i}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:l,layerView:o,query:n}=r,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,i):void 0;if(!o||!("queryAttributeBins"in o)||s||l){const h=Qe(e,r,u);return s?this.workerClient.histogram(h,s):ce({attribute:h,features:l})}const{query:m,min:c,max:p}=await st(e,this,u,n?.where);if(!m)return{bins:[],minValue:c,maxValue:p,normalizationTotal:u};const d=await o.queryAttributeBins(m,{signal:i});return nt(d,t?this.getField(t):null,{minValue:c,maxValue:p,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:r,graphics:s,layerView:l,query:o}=i,n=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,a):void 0,u=Qe(e,i,n);return!r&&!s&&l&&"queryHistogram"in l?l.queryHistogram(o,u,{signal:a}):r?this.workerClient.histogram(u,r):ce({attribute:u,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,i=e.numClasses||fa,r=[],s=(a-t)/i;for(let n=0;n<i;n++){const u=t+n*s;r.push({minValue:u,maxValue:u+s})}r[i-1].maxValue=a;const l={classBreaks:r,normalizationTotal:e.normalizationTotal},o=He(l,e.classificationMethod);return Promise.resolve(o)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:l,layerView:o,query:n,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||l)&&(m.viewInfoParams=b(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:o,query:n},r)),!s&&!l&&o&&"queryClassBreaks"in o?o.queryClassBreaks(n,m,{signal:r}):s?this.workerClient.classBreaks(m,s):Te({attribute:m,features:l})}async _heatmapStatsFromMemory(e){const{view:t,field:a,radius:i,signal:r}=e;qt(t,"InMemoryLayerAdapter: must have a view");try{const u=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in u&&!u.updating&&!e.filter)return await u.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{q(r)}const{featuresJSON:s,graphics:l}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),o=new Lt({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:t.pixelSizeAt?.(t.center)}),n={field:a,radius:i,transform:kt(o),spatialReference:t.spatialReference?.toJSON(),size:t.size};return s?.length||l?.length?s?this.workerClient.heatmapStatistics(n,s):Pt({attribute:n,features:l}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:i,features:r,view:s}=e,l=t?this.getField(t):null,o=!!a,n=s?.type==="3d";if(!a&&i&&!this.supportsSQLExpression)throw new y(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||r||n?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,view:r}=e,s=await ye(e,this),l=!!t,o=r?.type==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new y(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return l||i||o?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}async histogram(e){const{features:t,valueExpression:a,normalizationType:i,sqlExpression:r}=e,s=t||!!a;if(!a&&r&&!this.supportsSQLExpression)throw new y(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new y(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=this.layer.createQuery();r.where=L(r.where,t);const s=await a.whenLayerView(this.layer);return await Se((()=>!s.updating),i),s.queryFeatureCount(r,{signal:i})}async generateRenderer(e,t){throw new y(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:i,filter:r}=e,s=be(t),l=await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r});return Ce(l.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:l,signal:o}=e,n=this.layer.createQuery(),u=1;if(n.outSpatialReference=a?.spatialReference,n.returnGeometry=!!s,n.outFields=r,E(n,l),!a)throw new y(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const m=await a.whenLayerView(this.layer);if(pe(this,r,m).length)throw new y(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const c=await this._fetchFeaturesFromMemory(m,n,o,t),p=i!=null&&i>0&&i<=c.length?i:c.length;return G(c,p,u)}load(e){const t=this.layer.load(e).then((async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!a.capabilities?.query?.supportsSqlExpression,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:a.parent?.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ee.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],k.prototype,"adapterName",void 0),w([S({constructOnly:!0})],k.prototype,"layer",void 0),k=w([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],k);const Re=5,De=2e4,ha=4e5;let V=class extends k{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||this.geometryType==="multipatch"&&!zt(e.url)&&e.version<10.5)throw new y(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then((a=>a.features))}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(Y)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Re,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then((i=>{let r,s,l;if(i.classBreakInfos?.some((n=>(n.hasAvg&&(r=n),!!r))),r){const n=r.maxValue-r.minValue;s=r.minValue+n/2,l=4*n}const o={min:i.minValue,max:i.maxValue,avg:s,stddev:l};return ue(o,e.outStatisticTypes)}))}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=N(t)||C(t),i="capabilities"in this.layer?this.layer.capabilities:null,r=Ne(this,e,t,i?.query?.supportsPercentileStatistics??!1),s=await this.layer.queryFeatures(r,{signal:e.signal}),l=Ee(s,a);return ue(l,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,i=new I({attributeField:a}),r=new A({classificationDefinition:i});return this.generateRenderer(r,e.signal).then((s=>{const l={},o=this.getField(a);return s.uniqueValues.forEach((n=>{let u=n.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),l[u]==null?l[u]={count:n.count,data:Ue(o)&&u?Number(u):u}:l[u].count=l[u].count+n.count})),{count:l}})).then((s=>me(s,[t],e.returnAllCodedValues)))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(tt(this,e),{signal:e.signal}))).then((a=>$e(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:B,view:e.view,signal:e.signal}))).then((a=>me(a,t,e.returnAllCodedValues,B)))}_getNormalizationTotal(e,t,a,i){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:i}).then((r=>r.sum)):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then((t=>{const a=rt(e,this,t);return it(a,this,e.minValue,e.maxValue).then((i=>{const r=i.min,s=i.max;if(r==null||s==null)return{bins:[],minValue:r,maxValue:s,normalizationTotal:t};const l=e.numBins||X,o=Le(r,s,l),n=ga(a.sqlExpression,o,e.minValue!=null&&e.maxValue!=null),u=new D({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=L(m.where,a.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[n],m.orderByFields=[n],E(m,e.filter),this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(m,{signal:a.signal}))).then((c=>Ye(c,r,s,l,t)))}))}))}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:i,signal:r}=e,s=await this._getNormalizationTotal(t,a,i,r),l=this.layer.createQuery(),{query:o,min:n,max:u}=await st(e,this,s,l?.where);if(!o)return{bins:[],minValue:n,maxValue:u,normalizationTotal:s};const m=await this.layer.queryAttributeBins(o,{signal:r});return nt(m,t?this.getField(t):null,{minValue:n,maxValue:u,normalizationTotal:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,signal:s}=e,l=de({field:t,normalizationType:a,normalizationField:i}),o=j({field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:this}),n=le(o,e.minValue,e.maxValue),u=We({field:t,normalizationType:a,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Re}),m=new A({classificationDefinition:u});return m.where=L(l,n),this.generateRenderer(m,s).then((c=>He(c,e.classificationMethod)))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:i,sqlExpression:r,view:s,features:l,useFeaturesInView:o}=e,n=t?this.getField(t):null,u=N(n)||C(n),m=i&&!(r&&this.supportsSQLExpression),c=this._hasLocalSource||l||o,p=s&&s.type==="3d";if(c||m)return m||l||o||p?this._summaryStatsFromMemory(e,n):this._summaryStatsFromClientQuery(e,n);if(!this.supportsSQLExpression&&(u||r||a==="natural-log"||a==="square-root"))throw new y(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,n)).catch((()=>(q(e.signal),this._summaryStatsFromMemory(e,n))))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,useFeaturesInView:r,signal:s}=e,l=t&&!(a&&this.supportsSQLExpression),o=this._hasLocalSource||i||r||l,n=e.view,u=n&&n.type==="3d",m=await ye(e,this);return o?l||i||r||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch((c=>(q(s),!e.field||e.field2||e.field3||e.filter?c:this._uvFromGenRenderer(e,m[0])))).catch((()=>(q(s),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m))))}async histogram(e){const{field:t,normalizationType:a,normalizationField:i,classificationMethod:r,view:s,filter:l,signal:o}=e,n=t?this.getField(t):null,u=N(n)||C(n),m=e.valueExpression||e.sqlExpression,c=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),p=this._hasLocalSource||e.features||e.useFeaturesInView||c,d=this.supportsSQLExpression,h=!r||r==="equal-interval",g=e.minValue,v=e.maxValue,F=g!=null&&v!=null,x=e.numBins||X;if(p)return this._histogramFromMemory(e);if(this.layer.capabilities?.operations?.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return q(o),this._histogramFromQueryAttributeBinsFromMemory(e)}if((m||d)&&h){if(!d&&(m||a==="natural-log"||a==="square-root"))throw new y(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&h)throw new y(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!h?ve(e,this).then((z=>{if(!F)return re(this,z,t,x,s,l,o);if(g>z.max||v<z.min)throw new y(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(h)return re(this,{min:g,max:v,sqlExpr:z.sqlExpr,excludeZerosExpr:z.excludeZerosExpr},t,x,s,l,o);{const _={field:t,normalizationType:a,normalizationField:i,normalizationTotal:z.normTotal,layer:this},te=j(_),fe=le(te,g,v);return ve(e,this,fe).then((O=>re(this,O,t,x,s,l,o)))}})):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch((()=>(q(e.signal),this._classBreaksFromMemory(e))))}async queryFeatureCount(e){if(this._hasLocalSource)throw new y(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=L(a.where,e.whereClause),E(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new y(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const i=a.createQuery();return e.where=L(e.where,i.where),Ht(a.parsedUrl?.path??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new y(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:i,filter:r}=e,s=be(t),l=Xt(t),o=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:a,signal:i,filter:r}):await this._uvFromServiceQuery({sqlExpression:l.expression,valueExpression:s,signal:i,filter:r});return Ce(o.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,requiredFields:i,returnGeometry:r,filter:s,signal:l}=e,o=e.sampleSize;if(o==null||o===0)return[];const n=this.layer.createQuery(),u=1,m=t==="json";n.outSpatialReference=a?.spatialReference,n.returnGeometry=!!r,n.outFields=i,E(n,s);let c=[],p=!1;if(a)try{const d=await a.whenLayerView(this.layer);if(p=!pe(this,i,d).length,p){if(o>=1&&!e.filter&&"getSampleFeatures"in d){await this._waitForLayerViewUpdate(d);const h=await d.getSampleFeatures({minFeatureCount:o,sampleSize:o});if(h!=null)return m?h:h.map((g=>qe.fromJSON(g)))}if(c=await this._fetchFeaturesFromMemory(d,n,l,t),c.length>=o&&o>0)return G(c,o,u)}}catch{q(l)}try{if(this._hasLocalSource)return p?c:m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l);const d=await this.queryFeatureCount({view:a,filter:s,signal:l}),h=this.layer.capabilities.query.maxRecordCount;let g=o===-1?d:o;if(g=h&&g>h?h:g,d<=c.length||c.length>=h)return c;if(n.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:_t(this.layer.spatialReference))*ha,d<=g)return m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l);if(d<=De){const v=this.layer.createQuery();E(v,s);const F=await this.layer.queryObjectIds();return n.objectIds=G(F,g,u),m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l)}return this.layer.capabilities?.query?.supportsPagination&&(n.num=Math.min(g,De)),m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l)}catch{return q(l),c}}load(e){const t=this.layer.load(e).then((async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=ee.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};function ga(e,t,a){const i=[],r=t.length;return t.forEach(((s,l)=>{const[o,n]=s;let u=null;u=l!==0||a?l!==r-1||a?L(`${e} >= ${o}`,`${e} ${l===r-1?" <= ":" < "} ${n}`):`${e} >= ${o}`:`${e} < ${n}`,i.push("WHEN ("+u+") THEN "+(l+1))})),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}w([S({readOnly:!0})],V.prototype,"adapterName",void 0),w([S({constructOnly:!0})],V.prototype,"layer",void 0),V=w([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],V);let ie=class extends V{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(e,t,a,i,r){const s=e?.features;if(!s?.length)throw new y("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const o=Y(s);let n=null;if(i==="percent-of-total"&&(n=(await this.workerClient.summaryStatistics({field:t},o)).sum,n==null))throw new y("csv-layer-adapter:invalid","invalid normalizationTotal");if(r?.type==="class-breaks-definition"){const m=(await Oe({field:t,normalizationType:i,normalizationField:a,normalizationTotal:n},o)).filter((c=>Number.isFinite(c)));return Nt({definition:r,values:m,normalizationTotal:n})}const u=(await Oe({field:t},o)).filter((m=>m!=null&&typeof m=="string"&&m.trim()!==""));return Mt(u)}generateRenderer(e,t){const a=e.classificationDefinition;let i=null,r=null,s=null;a?.type==="class-breaks-definition"?(i=a.classificationField,r=a.normalizationField,s=a.normalizationType):i=a?.attributeField;const l=this.layer;return P({field:i,normalizationField:r}).then((o=>{const n=l.createQuery();return n.returnGeometry=!1,n.outFields=o,n.where=L(n.where,e.where),l.queryFeatures(n,{signal:t}).then((u=>this._createGenerateRendererResult(u,i,r,s,a)))}))}load(e){const t=this.layer.load(e).then((async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ee.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],ie.prototype,"adapterName",void 0),ie=w([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ie);let se=class extends V{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:s,query:l}=t,o={include:["sum"]},n=(!i&&!r&&s&&"queryAggregateSummaryStatistics"in s?await s.queryAggregateSummaryStatistics(l,{field:e,outStatisticTypes:o},{signal:a}):i?await this.workerClient.summaryStatistics({field:e},i):await J({attribute:{field:e,outStatisticTypes:o},features:r})).sum;if(n==null)throw new y(`${this.adapterName}:invalid`,"invalid normalizationTotal");return n}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:s,field3:l,normalizationField:o,valueExpression:n,returnGeometry:u,layerViewFunc:m,signal:c}=e;let p=null,d=null,h=null,g=null,v=null;if(i)try{if(p=await i.whenLayerView(this.layer),d=m!=null&&m in p&&typeof p[m]=="function",d){await this._waitForLayerViewUpdate(p);const F=await P({field:r,field2:s,field3:l,normalizationField:o,valueExpression:n});ke(this,F).length?d=!1:(h="createAggregateQuery"in p?p.createAggregateQuery():null,h?(h.outFields=F,h.returnGeometry=!1,E(h,a)):d=!1),p.suspended&&(d=!1)}}catch{d=!1}if(!d&&(v=Pe(this.layer).map((F=>F.toJSON())),g=await this._fetchFeaturesForStats({field:r,field2:s,field3:l,valueExpression:n,normalizationField:o,returnGeometry:u,filter:a,view:i,signal:c},"json"),!g?.length))throw new y(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:p,query:h,featuresJSON:g,fieldInfos:v}}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:s,signal:l}=e,o={field:i,valueExpression:r,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:n,graphics:u,layerView:m,query:c,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return r&&a&&(n||u)&&(o.fieldType=t?.type?Ve.toJSON(t.type):null,o.viewInfoParams=b(a),o.timeZone=a.timeZone,o.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:n,graphics:u,layerView:m,query:c},l)),!n&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(c,o,{signal:l}):n?this.workerClient.summaryStatistics(o,n):J({attribute:o,features:u})}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:s,signal:l}=e,{featuresJSON:o,graphics:n,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:B,valueExpression:r,domains:t,returnAllCodedValues:s};return r&&a&&(o||n)&&(p.viewInfoParams=b(a),p.timeZone=a.timeZone,p.fieldInfos=c),!o&&!n&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,p,{signal:l}):o?this.workerClient.uniqueValues(p,o):_e({attribute:p,features:n})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:l,layerView:o,query:n,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(s||l)&&(m.viewInfoParams=b(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:o,query:n},r)),!s&&!l&&o&&"queryAggregateHistogram"in o?o.queryAggregateHistogram(n,m,{signal:r}):s?this.workerClient.histogram(m,s):ce({attribute:m,features:l})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:s,graphics:l,layerView:o,query:n,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(s||l)&&(m.viewInfoParams=b(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:o,query:n},r)),!s&&!l&&o&&"queryAggregateClassBreaks"in o?o.queryAggregateClassBreaks(n,m,{signal:r}):s?this.workerClient.classBreaks(m,s):Te({attribute:m,features:l})}getField(e=""){return Pe(this.layer)?.find((a=>a.name.toLowerCase()===e?.toLowerCase()))}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new y(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await ye(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new y(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch((()=>(q(e.signal),this._classBreaksFromMemory(e))))}async queryFeatureCount(e){const t=await e.view?.whenLayerView(this.layer);if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new y(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=L(a.where,e.whereClause),E(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new y(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new y(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:i}=e,r=be(t),s=await this._uvFromMemory({valueExpression:r,view:a,signal:i});return Ce(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,filter:l,signal:o}=e;if(!a)throw new y(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new y(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const n=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in n&&n.queryAggregateJSON&&"queryAggregates"in n&&n.queryAggregates))throw new y(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(n),ke(this,r).length)throw new y(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,m=t==="json",c=n.createAggregateQuery();c.outSpatialReference=a?.spatialReference,c.returnGeometry=!!s,c.outFields=r,E(c,l);const{features:p}=m?await n.queryAggregateJSON(c,{signal:o}):await n.queryAggregates(c,{signal:o});return p.length&&i!=null&&i>0&&i<=p.length?G(p,i,u):p}load(e){const t=this.layer.load(e).then((async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const i="featureReduction"in a?a.featureReduction:null;if(i?.type!=="binning"&&i?.type!=="cluster")throw new y(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${i?.type} is not supported`);this.workerClient=ee.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],se.prototype,"adapterName",void 0),se=w([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],se);const wa=se;let R=class extends T{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){this.workerClient?.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const i=this.layer.objectIdField,r=e.clone(),s=t.filter((o=>{const n=this.layer.getField(o);return!a.includes(n.name)})),l=s.some((o=>this.layer.getField(o).name===i));return r.outFields=l?s:[...s,i],r}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new y("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),r=new AbortController,s=r.signal,l=Se((()=>!i.updating),s);await je(l,5e3,r);const o=pe(this,a,i);q(s);const n=this._updateQuery(t,a??[],o),u=await i.queryFeatures(n,{signal:s});q(s);const m=u.features;return o.length?i.whenGraphicAttributes(m,o):m}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(Y)}_fetchFeaturesForStats(e,t){return P({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t)))}async _processStatsFromMemoryParams(e){const t=e.features;if(t?.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:i,normalizationField:r,valueExpression:s,signal:l}=e,o=await this._fetchFeaturesForStats({field:i,valueExpression:s,normalizationField:r,view:a,signal:l},null);if(!o?.length)throw new y("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:o}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new y("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t?.name,{signal:e.signal}).then((i=>{const r=i.stats,{min:s,max:l,totalValuesCount:o}=r;let{avg:n,stddev:u,sum:m,variance:c,count:p}=r;return s===0&&l===0||(n=n===0?null:n,m=m===0?null:m,u=u===0?null:u,c=c===0?null:c,p=p===0?null:p),p==null&&(m!=null&&n!=null?p=Math.round(m/n):o!=null&&(p=o)),{avg:n,count:p,max:l,min:s,stddev:u,sum:m,variance:c}}))}async _getNormalizationTotal(e,t,a){const i={include:["sum"]},r=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},t):await J({attribute:{field:e,outStatisticTypes:i},features:a})).sum;if(r==null)throw new y("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:i,normalizationField:r,valueExpression:s}=e,{featuresJSON:l,graphics:o}=await this._processStatsFromMemoryParams(e),n={field:i,valueExpression:s,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&l&&(n.fieldType=t?.type?Ve.toJSON(t.type):null,n.viewInfoParams=b(a),n.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(i,l,o)),l?this.workerClient.summaryStatistics(n,l):J({attribute:n,features:o})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,i=t?.name,r=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new y("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(i,{signal:e.signal}).then((s=>{const l=s.stats;if(!l.mostFrequentValues)throw new Error;const o=s.labels?.labels,n={},u=[],m="countOF"+i;l.mostFrequentValues.forEach((p=>{const d=new qe({attributes:{}});d.attributes[i]=t&&t.name!==a.objectIdField&&(Ue(t)||N(t))?Number(p.value):p.value,d.attributes[m]=p.count,u.push(d)})),o&&o.forEach((p=>{n[p.value]=p.label}));const c=new ze({features:u});return $e(c,{layer:this,field:e.field,labels:n,view:e.view,signal:e.signal})})).then((s=>me(s,[r],e.returnAllCodedValues)))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:i,field2:r,field3:s,valueExpression:l,returnAllCodedValues:o}=e,n={field:i,field2:r,field3:s,fieldDelimiter:B,valueExpression:l,domains:t,returnAllCodedValues:o},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(n.viewInfoParams=b(a),n.timeZone=a.timeZone),u?this.workerClient.uniqueValues(n,u):_e({attribute:n,features:m})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new y("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then((i=>{const r=i.stats,{minValue:s,maxValue:l}=e,o=s??r.min,n=l??r.max,u=e.numBins||10,m=Fa(r.histogram,o,n,u);return Ye(m,o,n,u)}))}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:i,valueExpression:r}=e,{featuresJSON:s,graphics:l}=await this._processStatsFromMemoryParams(e),o={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(o.viewInfoParams=b(t),o.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotal(a,s,l)),s?this.workerClient.classBreaks(o,s):Te({attribute:o,features:l})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:i,graphics:r}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(s.viewInfoParams=b(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,i,r)),i?this.workerClient.histogram(s,i):ce({attribute:s,features:r})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new y("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?this._getCachedStatistics(e,t).catch((()=>(q(e.signal),this._getSummaryStatisticsFromMemory(e,t)))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new y("scene-layer-adapter:not-supported","filter is not supported");const t=await ye(e,this),{field:a,field2:i}=e,r=a&&i,s=this.getField(a);return!r&&s&&this._hasCachedStatistics(s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch((()=>(q(e.signal),this._getUniqueValuesFromMemory(e,t)))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new y("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch((()=>(q(e.signal),this._getHistogramFromMemory(e)))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new y("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?Promise.reject(new y("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new y("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new y("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new y("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new y("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new y("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:i,requiredFields:r,returnGeometry:s,signal:l}=e,o=1,n=t==="json",u=this.createQuery();u.outFields=r,u.returnGeometry=!!s,u.where=null,u.num=i;let m=[];try{if(m=n?await this._fetchFeaturesJSONFromMemory(a,u,r):await this._fetchFeaturesFromMemory(a,u,r),m.length&&i!=null&&i>0&&i<=m.length)return G(m,i,o)}catch{q(l)}let c=null;if(this._featureLayerAdapter){const p={...e};delete p.view,c=await this._featureLayerAdapter.getSampleFeatures(p,t)}return c?.length?c:G(m,m.length,o)}load(e){const t=this.layer.load(e).then((async a=>{this.workerClient=ee.getInstance(),await this.workerClient.open(e.signal);const i=a.associatedLayer;if(this.geometryType=a.geometryType,i!=null)return this._featureLayerAdapter=new V({layer:i}),this._featureLayerAdapter.load(e).then((()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent}));this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent}));return this.addResolvingPromise(t),Promise.resolve(this)}};function Fa(e,t=e.minimum,a=e.maximum,i){const r=[];for(let u=0;u<i;u++)r[u]=0;const s=e.counts.length,l=e.minimum,o=e.maximum;for(let u=0;u<s;u++){const m=(u+.5)/s,c=((1-m)*l+m*o-t)/(a-t)*i;c>=0&&c<=i&&(r[c===i?i-1:Math.floor(c)]+=e.counts[u])}const n=[];return r.forEach(((u,m)=>{const c=new qe({attributes:{}});c.attributes.EXPR_1=m+1,c.attributes.countOFExpr=u,n.push(c)})),new ze({features:n})}w([S({readOnly:!0})],R.prototype,"adapterName",void 0),w([S({constructOnly:!0})],R.prototype,"layer",void 0),R=w([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],R);let ne=class extends R{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then((()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1}));return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=w([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],ne);let oe=class extends k{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:i}=e,r=Ne(this,e,t);r.outStatistics=r.outStatistics?.filter((o=>o.outStatisticFieldName!=="totalcount_value"));const s=await this._fetchFeatureSetFromMemory(r,i,a),l=Ee(s,N(t)||C(t));return ue(l,e.outStatisticTypes)}};w([S({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=w([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],oe);var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.ImageryLayer=5]="ImageryLayer",e[e.KnowledgeGraphSublayer=6]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=7]="OGCFeatureLayer",e[e.OrientedImageryLayer=8]="OrientedImageryLayer",e[e.ParquetLayer=9]="ParquetLayer",e[e.PointCloudLayer=10]="PointCloudLayer",e[e.SceneLayer=11]="SceneLayer",e[e.StreamLayer=12]="StreamLayer",e[e.SubtypeGroupLayer=13]="SubtypeGroupLayer",e[e.SubtypeSublayer=14]="SubtypeSublayer",e[e.WFSLayer=15]="WFSLayer"})(f||(f={}));const xe={[f.CatalogLayer]:{adapter:V,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:V,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:ie,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:V,type:"feature",label:"FeatureLayer"},[f.ImageryLayer]:{adapter:V,type:"imagery",label:"ImageryLayer"},[f.GeoJSONLayer]:{adapter:V,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:V,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:k,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:V,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:V,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:ne,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:R,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:oe,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:V,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:V,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:V,type:"wfs",label:"WFSLayer"}},Me=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Sa=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function va(e){return e.map((t=>xe[t].label))}function xa(e,t=Me,a){if(e instanceof T)return e;const i=Va(e,t);return i?a?new wa({layer:e}):new i({layer:e}):null}function Va(e,t=Me){let a=null;return t.some((i=>{const r=e.type===xe[i].type;return r&&(a=xe[i].adapter),r})),a}async function qa(e){if(!e?.layer||!e.field&&!e.valueExpression)throw new y("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new y("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new y("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Jt(e,"unique-values");const{layer:i,...r}=e,s=[...Me,f.ImageryLayer],l=e.forBinning?Sa:s,o=xa(i,l,e.forBinning);if(!o)throw new y("unique-values:invalid-parameters","'layer' must be one of these types: "+va(l).join(", "));const n={layerAdapter:o,...r},u=n.signal!=null?{signal:n.signal}:null;await o.load(u);const m=await P({field:n.field,field2:n.field2,field3:n.field3,valueExpression:n.valueExpression}),c=Tt(o,m,"unique-values:invalid-parameters");if(c)throw c;n.filter&&!n.filter.spatialRelationship&&(n.filter.spatialRelationship="intersects");const p=bt(n.filter,"summary-statistics:invalid-parameters");if(p)throw p;return n}async function Lr(e){const{layerAdapter:t,...a}=await qa(e);return t.uniqueValues(a)}export{Lr as default};

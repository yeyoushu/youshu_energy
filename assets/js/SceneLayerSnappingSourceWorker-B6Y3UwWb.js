import{iw as x,ix as b,iy as l,ad as f,a9 as m,aq as y,n as u,cN as L,iz as P,iA as S,iB as E,Q as p,v as $,x as I}from"./test-Dp3_P59c.js";import{b as w}from"./Octree-DLA8WU95.js";import{g as V}from"./edgeProcessing-BUMAIHpk.js";import"./index-CulM0VMq.js";import"./vendor-CHjNVy30.js";import"./station-CTe-uNfl.js";import"./BufferView-CgSr7tXI.js";import"./deduplicate-DKrV6nlJ.js";import"./Indices-CFyKJVVM.js";import"./InterleavedLayout-C9NdYy31.js";import"./types-BKo2foNY.js";import"./VertexAttribute-BfkzOMLV.js";import"./glUtil-BeYgneug.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-CeSTrJdt.js";const T=1e3;function j(t,s,n){const i=x(),o=l(i);return b(o,o,t,.5),b(o,o,s,.5),i[3]=f(o,t),m(o,o,n),i}let g=class{constructor(){this._idToComponent=new Map,this._components=new w((t=>t.bounds)),this._edges=new w((t=>t.bounds)),this._tmpLineSegment=y(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,s){await Promise.resolve(),L(s),await this._ensureEdgeLocations(t,s);const n=[];return this._edges.forEachNeighbor((i=>(this._addCandidates(t,i,n),n.length<T)),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,s){const n=[];if(this._components.forEachNeighbor((e=>{if(e.info==null){const{id:c,uid:r}=e;n.push({id:c,uid:r})}return!0}),t.bounds),!n.length)return;const i={components:n},o=await this.remoteClient.invoke("fetchAllEdgeLocations",i,s??{});for(const e of o.components)this._setFetchEdgeLocations(e)}async add(t){const s=new _(t.id,t.bounds);return this._idToComponent.set(s.id,s),this._components.add([s]),{result:{}}}async remove(t){const s=this._idToComponent.get(t.id);if(s){const n=[];this._edges.forEachNeighbor((i=>(i.component===s&&n.push(i),!0)),s.bounds),this._edges.remove(n),this._components.remove([s]),this._idToComponent.delete(s.id)}return{result:{}}}_setFetchEdgeLocations(t){const s=this._idToComponent.get(t.id);if(s==null||t.uid!==s.uid)return;const n=V.createView(t.locations),i=new Array(n.count),o=u(),e=u();for(let d=0;d<n.count;d++){n.position0.getVec(d,o),n.position1.getVec(d,e);const a=j(o,e,t.origin),v=new N(s,d,a);i[d]=v}this._edges.add(i);const{objectIds:c,origin:r}=t;s.info={locations:n,objectIds:c,origin:r}}_addCandidates(t,s,n){const{info:i}=s.component,{origin:o,objectIds:e}=i,c=i.locations,r=c.position0.getVec(s.index,this._tmpP1),d=c.position1.getVec(s.index,this._tmpP2);m(r,r,o),m(d,d,o);const a=e[c.componentIndex.get(s.index)];this._addEdgeCandidate(t,a,r,d,n),C(t,a,r,n),C(t,a,d,n)}_addEdgeCandidate(t,s,n,i,o){if(!t.returnEdge)return;const e=l(t.bounds),c=P(n,i,this._tmpLineSegment),r=S(c,e,this._tmpP3);E(t.bounds,r)&&o.push({type:"edge",objectId:s,target:p(r),distance:f(e,r),start:p(n),end:p(i)})}};g=$([I("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const O=g;function C(t,s,n,i){if(!t.returnVertex||!E(t.bounds,n))return;const o=l(t.bounds);i.push({type:"vertex",objectId:s,target:p(n),distance:f(o,n)})}const h=class h{constructor(s,n){this.id=s,this.bounds=n,this.info=null,this.uid=++h.uid}};h.uid=0;let _=h;class N{constructor(s,n,i){this.component=s,this.index=n,this.bounds=i}}export{O as default};

const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/meshFeatureSet-CpOkG_W6.js","assets/js/test-Dp3_P59c.js","assets/js/index-CulM0VMq.js","assets/js/vendor-CHjNVy30.js","assets/css/index-DXVkK3IA.css","assets/js/station-CTe-uNfl.js","assets/css/test-D2ol9zJk.css","assets/js/Mesh-CF0cJOOR.js","assets/js/axisAngleDegrees-7e8IY39v.js","assets/js/quat-LJUBQ7U8.js","assets/js/MeshComponent-A9h5loeE.js","assets/js/meshProperties-Cj6q1fp6.js","assets/js/MeshLocalVertexSpace-BIS3_7WL.js","assets/js/MeshTransform-DD5i_qG7.js","assets/js/MeshVertexAttributes-B7QBM4je.js","assets/js/meshVertexSpaceUtils-DJqF3X5b.js","assets/js/triangulationUtils-BO2sofXm.js","assets/js/Indices-CFyKJVVM.js","assets/js/deduplicate-DKrV6nlJ.js","assets/js/vertexSpaceConversion-DPJCPz_Z.js","assets/js/computeTranslationToOriginAndRotation-B3HgMnyy.js","assets/js/vec3-dMx4sFX_.js","assets/js/BufferView-CgSr7tXI.js","assets/js/vec4-DEigWiEW.js","assets/js/External-DpL5W0tO.js","assets/js/infoFor3D-VMSlSy0z.js","assets/js/FeatureSet-DR2_MLz0.js","assets/js/meshFeatureAttributes-BL00iY87.js","assets/js/labelingInfo-HpcBILMX.js","assets/js/SimpleRenderer-Cv_4-yU7.js","assets/js/commonProperties-Cz4LY7so.js","assets/js/colorRamps-B0gQZwFY.js","assets/js/ColorStop-Cu9MX0m5.js","assets/js/visualVariableUtils-CZtJQX17.js","assets/js/jsonUtils-C0_9DqtZ.js","assets/js/defaults3D-B9tjgcmU.js","assets/js/defaults-B2ew532g.js","assets/js/defaultsJSON-GKolV7NZ.js","assets/js/UniqueValueRenderer-U8EJ9Zmb.js","assets/js/diffUtils-CRH5h29A.js","assets/js/RendererLegendOptions-BX0ZTuxr.js","assets/js/styleUtils-B7fY0eUg.js","assets/js/NormalizationBinParametersMixin-D7jY13wx.js","assets/js/labelUtils-BD42FNJJ.js","assets/js/executeRelationshipQuery-C_F-DFgN.js","assets/js/query-D7rDZ32y.js","assets/js/pbfQueryUtils-DPE1auIa.js","assets/js/pbf-JmGe42-A.js","assets/js/memoryEstimations-T_QTZf5l.js","assets/js/OptimizedFeature-99IiHQtf.js","assets/js/OptimizedFeatureSet-BR8EEvDc.js","assets/js/queryZScale-3rRSqsEH.js","assets/js/queryAttachments-DLX_teX6.js","assets/js/AttachmentInfo-6q_G3DqS.js","assets/js/executeAttributeBinsQuery-CHZkIB-T.js","assets/js/AttributeBinsFeatureSet-D2nvNrVI.js","assets/js/AttributeBinsQuery-D_VzJKss.js","assets/js/queryUtils-BylZ_vR4.js","assets/js/json-Wa8cmqdu.js","assets/js/FixedIntervalBinParameters-CoCzclvP.js","assets/js/executeTopFeaturesQuery-YRy7xhZy.js","assets/js/queryTopFeatures-Cnfc2O9w.js","assets/js/TopFeaturesQuery-DboWWKpJ.js","assets/js/executeForTopIds-utTDwOmk.js","assets/js/executeForTopExtents-ClgJgvIB.js","assets/js/executeForTopCount-ChiwuF9G.js"])))=>i.map(i=>d[i]);
import{a as u}from"./index-CulM0VMq.js";import{du as m,cI as _,a_ as C,dO as O,bY as T,ax as V,I as w,bx as A,gx as d,kB as x,s as g,dN as q,v as l,w as c,x as G}from"./test-Dp3_P59c.js";import{d as E}from"./infoFor3D-VMSlSy0z.js";import{s as L,i as Q}from"./executeForIds-B7TBDwdz.js";import{O as N,f as M}from"./query-D7rDZ32y.js";import{a as $}from"./executeQueryJSON-DY3OMOWy.js";import{w as Z,l as B}from"./featureConversionUtils-BISEwGRc.js";import{g as z}from"./FeatureSet-DR2_MLz0.js";async function k(r,t,e){const s=m(r),i=await N(s,_.from(t),{...e}),o=i.data.extent;return!o||isNaN(o.xmin)||isNaN(o.ymin)||isNaN(o.xmax)||isNaN(o.ymax)?{count:i.data.count,extent:null}:{count:i.data.count,extent:C.fromJSON(o)}}function j(r,t){return t}function y(r,t,e,s){switch(e){case 0:return p(r,t+s,0);case 1:return r.originPosition==="lowerLeft"?p(r,t+s,1):Y(r,t+s,1)}}function F(r,t,e,s){return e===2?p(r,t,2):y(r,t,e,s)}function J(r,t,e,s){return e===2?t===0?0:p(r,t,3):y(r,t,e,s)}function U(r,t,e,s){return e===3?t===0?0:p(r,t,3):F(r,t,e,s)}function p({translate:r,scale:t},e,s){return r[s]+e*t[s]}function Y({translate:r,scale:t},e,s){return r[s]-e*t[s]}class X{constructor(t){this._options=t,this.geometryTypes=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=j,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._mValueOffset=null,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{}}createFeatureResult(){return{fields:[],features:[]}}finishFeatureResult(t){if(this._options.applyTransform&&(t.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!t.hasZ)return;const e=O(t.geometryType,this._options.sourceSpatialReference,t.spatialReference);if(e!=null)for(const s of t.features)e(s.geometry)}createSpatialReference(){return{}}addField(t,e){const s=t.fields;T(s),s.push(e);const i=s.map((o=>o.name));this._attributesConstructor=function(){for(const o of i)this[o]=null}}addFeature(t,e){t.features.push(e)}prepareFeatures(t){switch(this._transform=t.transform,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._mValueOffset=null,this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&(this._mValueOffset=this._vertexDimension,this._vertexDimension++),t.geometryType){case"esriGeometryPoint":this.addCoordinate=(e,s,i)=>this.addCoordinatePoint(e,s,i),this.createGeometry=e=>this.createPointGeometry(e);break;case"esriGeometryPolygon":this.addCoordinate=(e,s,i)=>this._addCoordinatePolygon(e,s,i),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"esriGeometryPolyline":this.addCoordinate=(e,s,i)=>this._addCoordinatePolyline(e,s,i),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"esriGeometryMultipoint":this.addCoordinate=(e,s,i)=>this._addCoordinateMultipoint(e,s,i),this.createGeometry=e=>this._createMultipointGeometry(e)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,{attributes:new this._attributesConstructor}}allocateCoordinates(){}addLength(t,e,s){this._lengths.length===0&&(this._toAddInCurrentPath=e),this._lengths.push(e)}addQueryGeometry(t,e){const{queryGeometry:s,queryGeometryType:i}=e,o=this._transform?Z(s.clone(),s,!1,!1,this._transform):s.clone(),a=B(o,i,!1,!1);t.queryGeometryType=i,t.queryGeometry={...a}}createPointGeometry(t){const e={x:0,y:0,spatialReference:t.spatialReference};return t.hasZ&&(e.z=0),t.hasM&&(e.m=0),e}addCoordinatePoint(t,e,s){const i=this._transform;switch(e=this._applyTransform(i,e,s,0),s){case 0:t.x=e;break;case 1:t.y=e;break;case 2:"z"in t?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,e){let s=0;e<=1&&(s=this._previousCoordinate[e],this._previousCoordinate[e]+=t);const i=this._transform;return this._mValueOffset!==null&&t===0&&e>0&&!(e%this._mValueOffset)?0:this._applyTransform(i,t,e,s)}_addCoordinatePolyline(t,e,s){this._dehydratedAddPointsCoordinate(t.paths,e,s)}_addCoordinatePolygon(t,e,s){this._dehydratedAddPointsCoordinate(t.rings,e,s)}_addCoordinateMultipoint(t,e,s){s===0&&t.points.push([]);const i=this._transformPathLikeValue(e,s);t.points[t.points.length-1].push(i)}_createPolygonGeometry(t){return{rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,s){s===0&&this._toAddInCurrentPath--===0&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const i=this._transformPathLikeValue(e,s),o=t[t.length-1];s===0&&(this._coordinateBufferPtr=0,this._coordinateBuffer=new Array(this._vertexDimension),o.push(this._coordinateBuffer)),this._coordinateBuffer[this._coordinateBufferPtr++]=i}_deriveApplyTransform(t){const{hasZ:e,hasM:s}=t;return e&&s?U:e?F:s?J:y}}async function H(r,t,e,s){const i=m(r),o={...e},a=_.from(t),h=!a.quantizationParameters,{data:f}=await M(i,a,new X({sourceSpatialReference:a.sourceSpatialReference,applyTransform:h}),o,s);return f}let n=class extends V{constructor(r){super(r),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.uniqueIdFields=null,this.url=null}get parsedUrl(){return w(this.url)}async execute(r,t){const e=await this.executeJSON(r,t);return this.featureSetFromJSON(r,e,t)}async executeJSON(r,t){const e=this._normalizeQuery(r),s=r.outStatistics?.[0]!=null,i=A("featurelayer-pbf-statistics"),o=(!s||i)&&r.returnTrueCurves!==!0;let a;if(this.pbfSupported&&o)try{a=await H(this.url,e,t,{uniqueIdFields:this.uniqueIdFields})}catch(h){if(h.name!=="query:parsing-pbf")throw h;this.pbfSupported=!1}return this.pbfSupported&&o||(a=await $(this.url,e,t,{uniqueIdFields:this.uniqueIdFields})),this._normalizeFields(a.fields),a}async featureSetFromJSON(r,t,e){if(!this._queryIs3DObjectFormat(r)||this.infoFor3D==null||!t.features)return z.fromJSON(t);const{meshFeatureSetFromJSON:s}=await d(u(()=>import("./meshFeatureSet-CpOkG_W6.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])),e);return s(r,this.infoFor3D,t)}executeForCount(r,t){return L(this.url,this._normalizeQuery(r),t,{uniqueIdFields:this.uniqueIdFields})}executeForExtent(r,t){return k(this.url,this._normalizeQuery(r),t)}executeForIds(r,t){return Q(this.url,this._normalizeQuery(r),t,{uniqueIdFields:this.uniqueIdFields})}async executeRelationshipQuery(r,t){const[{default:e},{executeRelationshipQuery:s}]=await d(Promise.all([u(()=>import("./labelingInfo-HpcBILMX.js").then(i=>i.g),__vite__mapDeps([28,2,3,4,1,5,6,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43])),u(()=>import("./executeRelationshipQuery-C_F-DFgN.js"),__vite__mapDeps([44,1,2,3,4,5,6,45,46,47,48,49,50,51,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43]))]),t);return r=e.from(r),(this.gdbVersion||this.dynamicDataSource)&&((r=r.clone()).gdbVersion=r.gdbVersion||this.gdbVersion,r.dynamicDataSource=r.dynamicDataSource||this.dynamicDataSource),s(this.url,r,t)}async executeRelationshipQueryForCount(r,t){const[{default:e},{executeRelationshipQueryForCount:s}]=await d(Promise.all([u(()=>import("./labelingInfo-HpcBILMX.js").then(i=>i.g),__vite__mapDeps([28,2,3,4,1,5,6,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43])),u(()=>import("./executeRelationshipQuery-C_F-DFgN.js"),__vite__mapDeps([44,1,2,3,4,5,6,45,46,47,48,49,50,51,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43]))]),t);return r=e.from(r),(this.gdbVersion||this.dynamicDataSource)&&((r=r.clone()).gdbVersion=r.gdbVersion||this.gdbVersion,r.dynamicDataSource=r.dynamicDataSource||this.dynamicDataSource),s(this.url,r,t)}async executeAttachmentQuery(r,t){const{executeAttachmentQuery:e,fetchAttachments:s,processAttachmentQueryResult:i}=await d(u(()=>import("./queryAttachments-DLX_teX6.js"),__vite__mapDeps([52,1,2,3,4,5,6,45,46,47,48,49,50,51,53])),t),o=m(this.url);return i(o,await(this.queryAttachmentsSupported?e(o,r,t):s(o,r,t)))}async executeAttributeBinsQuery(r,t){const{executeAttributeBinsQuery:e}=await d(u(()=>import("./executeAttributeBinsQuery-CHZkIB-T.js"),__vite__mapDeps([54,1,2,3,4,5,6,45,46,47,48,49,50,51,55,26,56,57,58,59,42])),t);return e(this.parsedUrl,r,t)}async executeTopFeaturesQuery(r,t){const{executeTopFeaturesQuery:e}=await d(u(()=>import("./executeTopFeaturesQuery-YRy7xhZy.js"),__vite__mapDeps([60,1,2,3,4,5,6,61,45,46,47,48,49,50,51,26,62])),t);return e(this.parsedUrl,r,this.sourceSpatialReference,t)}async executeForTopIds(r,t){const{executeForTopIds:e}=await d(u(()=>import("./executeForTopIds-utTDwOmk.js"),__vite__mapDeps([63,1,2,3,4,5,6,61,45,46,47,48,49,50,51,62])),t);return e(this.parsedUrl,r,t)}async executeForTopExtents(r,t){const{executeForTopExtents:e}=await d(u(()=>import("./executeForTopExtents-ClgJgvIB.js"),__vite__mapDeps([64,1,2,3,4,5,6,61,45,46,47,48,49,50,51,62])),t);return e(this.parsedUrl,r,t)}async executeForTopCount(r,t){const{executeForTopCount:e}=await d(u(()=>import("./executeForTopCount-ChiwuF9G.js"),__vite__mapDeps([65,1,2,3,4,5,6,61,45,46,47,48,49,50,51,62])),t);return e(this.parsedUrl,r,t)}_normalizeQuery(r){let t=_.from(r);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===r?t.clone():t,t.gdbVersion=r.gdbVersion||this.gdbVersion,t.dynamicDataSource=r.dynamicDataSource?x.from(r.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:e}=this;if(e!=null&&this._queryIs3DObjectFormat(r)){if(t=t===r?t.clone():t,t.formatOf3DObjects=E(e),!t.formatOf3DObjects)throw new g("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outSpatialReference&&!q(t.outSpatialReference,this.sourceSpatialReference))throw new g("query:unsupported-out-spatial-reference","3D object feature services do not support projection of geometries");if(t.outFields==null||!t.outFields.includes("*")){t=t===r?t.clone():t,t.outFields==null&&(t.outFields=[]);const{originX:s,originY:i,originZ:o,translationX:a,translationY:h,translationZ:f,scaleX:S,scaleY:D,scaleZ:P,rotationX:b,rotationY:R,rotationZ:I,rotationDeg:v}=e.transformFieldRoles;t.outFields.push(s,i,o,a,h,f,S,D,P,b,R,I,v)}}return t}_normalizeFields(r){if(this.fieldsIndex!=null&&r!=null)for(const t of r){const e=this.fieldsIndex.get(t.name);e&&Object.assign(t,e.toJSON())}}_queryIs3DObjectFormat(r){return this.infoFor3D!=null&&r.returnGeometry===!0&&r.multipatchOption!=="xyFootprint"&&!r.outStatistics}};l([c({type:x})],n.prototype,"dynamicDataSource",void 0),l([c()],n.prototype,"fieldsIndex",void 0),l([c()],n.prototype,"gdbVersion",void 0),l([c()],n.prototype,"infoFor3D",void 0),l([c({readOnly:!0})],n.prototype,"parsedUrl",null),l([c()],n.prototype,"pbfSupported",void 0),l([c()],n.prototype,"queryAttachmentsSupported",void 0),l([c()],n.prototype,"sourceSpatialReference",void 0),l([c()],n.prototype,"uniqueIdFields",void 0),l([c({type:String})],n.prototype,"url",void 0),n=l([G("esri.layers.graphics.sources.support.QueryTask")],n);export{n as S};

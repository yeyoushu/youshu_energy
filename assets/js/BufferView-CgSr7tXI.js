import{kk as _t,X as te,aI as ee,i as se}from"./test-Dp3_P59c.js";let ut=globalThis.Float16Array;function fe(...n){return new(ut??Float32Array)(...n)}function rt(){return ut}let it=!!ut;var o;let Qt=(o=class{constructor(t,e,r=0,s,f){this.TypedArrayConstructor=t,this.elementCount=9;const i=this.TypedArrayConstructor;s===void 0&&(s=9*i.BYTES_PER_ELEMENT);const u=e.byteLength===0?0:r;this.typedBuffer=f==null?new i(e,u):new i(e,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,r=this.count-e){const s=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,s,this.stride,s+r*this.stride)}getMat(t,e){let r=t*this.typedBufferStride;for(let s=0;s<9;s++)e[s]=this.typedBuffer[r++];return e}setMat(t,e){let r=t*this.typedBufferStride;for(let s=0;s<9;s++)this.typedBuffer[r++]=e[s]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,r){this.typedBuffer[t*this.typedBufferStride+e]=r}copyFrom(t,e,r){const s=this.typedBuffer,f=e.typedBuffer;let i=t*this.typedBufferStride,u=r*e.typedBufferStride;for(let c=0;c<9;++c)s[i++]=f[u++]}get buffer(){return this.typedBuffer.buffer}},o.ElementCount=9,o);var a;let Wt=(a=class{constructor(t,e,r=0,s,f){this.TypedArrayConstructor=t,this.elementCount=16;const i=this.TypedArrayConstructor;s===void 0&&(s=16*i.BYTES_PER_ELEMENT);const u=e.byteLength===0?0:r;this.typedBuffer=f==null?new i(e,u):new i(e,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,r=this.count-e){const s=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,s,this.stride,s+r*this.stride)}getMat(t,e){let r=t*this.typedBufferStride;for(let s=0;s<16;s++)e[s]=this.typedBuffer[r++];return e}setMat(t,e){let r=t*this.typedBufferStride;for(let s=0;s<16;s++)this.typedBuffer[r++]=e[s]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,r){this.typedBuffer[t*this.typedBufferStride+e]=r}copyFrom(t,e,r){this.copyFromTypedBuffer(t,e.typedBuffer,r*e.typedBufferStride)}copyFromTypedBuffer(t,e,r){const s=this.typedBuffer;let f=t*this.typedBufferStride;for(let i=0;i<16;++i)s[f++]=e[r++]}get buffer(){return this.typedBuffer.buffer}},a.ElementCount=16,a);const nt=class nt{constructor(t,e,r=0,s,f){this.TypedArrayConstructor=t,this.elementCount=1;const i=this.TypedArrayConstructor;s===void 0&&(s=i.BYTES_PER_ELEMENT);const u=e.byteLength===0?0:r;this.typedBuffer=f==null?new i(e,u):new i(e,u,(f-r)/i.BYTES_PER_ELEMENT),this.stride=s,this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride)}sliceBuffer(t,e,r=this.count-e){const s=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,s,this.stride,s+r*this.stride)}get(t){return this.typedBuffer[t*this.typedBufferStride]}set(t,e){this.typedBuffer[t*this.typedBufferStride]=e}get buffer(){return this.typedBuffer.buffer}};nt.ElementCount=1;let h=nt;var B;let l=(B=class{constructor(t,e,r=0,s,f){this.TypedArrayConstructor=t,this.start=r,this.elementCount=2;const i=this.TypedArrayConstructor;s===void 0&&(s=2*i.BYTES_PER_ELEMENT);const u=e.byteLength===0?0:r;this.typedBuffer=f==null?new i(e,u):new i(e,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,r=this.count-e){const s=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,s,this.stride,s+r*this.stride)}getVec(t,e){return t*=this.typedBufferStride,_t(e,this.typedBuffer[t],this.typedBuffer[t+1])}setVec(t,e){t*=this.typedBufferStride,this.typedBuffer[t++]=e[0],this.typedBuffer[t]=e[1]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,r){this.typedBuffer[t*this.typedBufferStride+e]=r}setValues(t,e,r){t*=this.typedBufferStride,this.typedBuffer[t++]=e,this.typedBuffer[t]=r}copyFrom(t,e,r){const s=this.typedBuffer,f=e.typedBuffer;let i=t*this.typedBufferStride,u=r*e.typedBufferStride;s[i++]=f[u++],s[i]=f[u]}get buffer(){return this.typedBuffer.buffer}},B.ElementCount=2,B);var E;let p=(E=class{constructor(t,e,r=0,s,f){this.TypedArrayConstructor=t,this.elementCount=3;const i=this.TypedArrayConstructor;s===void 0&&(s=3*i.BYTES_PER_ELEMENT);const u=e.byteLength===0?0:r;this.typedBuffer=f==null?new i(e,u):new i(e,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,r=this.count-e){const s=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,s,this.stride,s+r*this.stride)}getVec(t,e){return t*=this.typedBufferStride,te(e,this.typedBuffer[t],this.typedBuffer[t+1],this.typedBuffer[t+2])}setVec(t,e){t*=this.typedBufferStride,this.typedBuffer[t++]=e[0],this.typedBuffer[t++]=e[1],this.typedBuffer[t]=e[2]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,r){this.typedBuffer[t*this.typedBufferStride+e]=r}setValues(t,e,r,s){t*=this.typedBufferStride,this.typedBuffer[t++]=e,this.typedBuffer[t++]=r,this.typedBuffer[t]=s}copyFrom(t,e,r){const s=this.typedBuffer,f=e.typedBuffer;let i=t*this.typedBufferStride,u=r*e.typedBufferStride;s[i++]=f[u++],s[i++]=f[u++],s[i]=f[u]}get buffer(){return this.typedBuffer.buffer}},E.ElementCount=3,E);const ct=class ct{constructor(t,e,r=0,s,f){this.TypedArrayConstructor=t,this.start=r,this.elementCount=4;const i=this.TypedArrayConstructor;s===void 0&&(s=4*i.BYTES_PER_ELEMENT);const u=e.byteLength===0?0:r;this.typedBuffer=f==null?new i(e,u):new i(e,u,(f-r)/i.BYTES_PER_ELEMENT),this.typedBufferStride=s/i.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,r=this.count-e){const s=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,s,this.stride,s+r*this.stride)}getVec(t,e){return t*=this.typedBufferStride,ee(e,this.typedBuffer[t++],this.typedBuffer[t++],this.typedBuffer[t++],this.typedBuffer[t])}setVec(t,e){t*=this.typedBufferStride,this.typedBuffer[t++]=e[0],this.typedBuffer[t++]=e[1],this.typedBuffer[t++]=e[2],this.typedBuffer[t]=e[3]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,r){this.typedBuffer[t*this.typedBufferStride+e]=r}setValues(t,e,r,s,f){t*=this.typedBufferStride,this.typedBuffer[t++]=e,this.typedBuffer[t++]=r,this.typedBuffer[t++]=s,this.typedBuffer[t]=f}copyFrom(t,e,r){const s=this.typedBuffer,f=e.typedBuffer;let i=t*this.typedBufferStride,u=r*e.typedBufferStride;s[i++]=f[u++],s[i++]=f[u++],s[i++]=f[u++],s[i]=f[u]}get buffer(){return this.typedBuffer.buffer}};ct.ElementCount=4;let y=ct,re=class{constructor(t){this.message=t}toString(){return`AssertException: ${this.message}`}};function ft(n,t="Assertion"){if(!n){const e=new Error(t).stack;throw new re(`${t} at ${e}`)}}function ne(n,t){n||(t=t||"",console.warn("Verify failed: "+t+`
`+new Error("verify").stack))}function ce(n,t,e,r){let s,f=(e[0]-n[0])/t[0],i=(r[0]-n[0])/t[0];f>i&&(s=f,f=i,i=s);let u=(e[1]-n[1])/t[1],c=(r[1]-n[1])/t[1];if(u>c&&(s=u,u=c,c=s),f>c||u>i)return!1;u>f&&(f=u),c<i&&(i=c);let A=(e[2]-n[2])/t[2],d=(r[2]-n[2])/t[2];return A>d&&(s=A,A=d,d=s),!(f>d||A>i)&&(d<i&&(i=d),!(i<0))}function he(n,t,e,r,s,f=se()){const i=(r[s]-e[s])*(t[0]-n[0])-(r[0]-e[0])*(t[s]-n[s]),u=(r[0]-e[0])*(n[s]-e[s])-(r[s]-e[s])*(n[0]-e[0]);if(i===0)return!1;const c=u/i;return f[0]=n[0]+c*(t[0]-n[0]),f[1]=n[s]+c*(t[s]-n[s]),!0}function ye(n,t){return Math.log(n)/Math.log(t)}function le(n){return n[0]===1&&n[1]===0&&n[2]===0&&n[3]===0&&n[4]===0&&n[5]===1&&n[6]===0&&n[7]===0&&n[8]===0&&n[9]===0&&n[10]===1&&n[11]===0&&n[15]===1}const ht=class ht extends h{constructor(t,e=0,r,s){ft(it),super(rt(),t,e,r,s),this.elementType="f16"}};ht.ElementType="f16";let lt=ht;const yt=class yt extends h{constructor(t,e=0,r,s){super(Float32Array,t,e,r,s),this.elementType="f32"}};yt.ElementType="f32";let pt=yt;const b=class b extends l{constructor(t,e=0,r,s){ft(it),super(rt(),t,e,r,s),this.elementType="f16"}slice(t,e){return this.sliceBuffer(b,t,e)}};b.ElementType="f16";let dt=b;const x=class x extends l{constructor(t,e=0,r,s){super(Float32Array,t,e,r,s),this.elementType="f32"}slice(t,e){return this.sliceBuffer(x,t,e)}};x.ElementType="f32";let ot=x;const g=class g extends p{constructor(t,e=0,r,s){ft(it),super(rt(),t,e,r,s),this.elementType="f16"}slice(t,e){return this.sliceBuffer(g,t,e)}};g.ElementType="f16";let at=g;const T=class T extends p{constructor(t,e=0,r,s){super(Float32Array,t,e,r,s),this.elementType="f32"}slice(t,e){return this.sliceBuffer(T,t,e)}static fromTypedArray(t,e){return new T(t.buffer,t.byteOffset,e,t.byteOffset+t.byteLength)}};T.ElementType="f32";let Bt=T;const M=class M extends y{constructor(t,e=0,r,s){ft(it),super(rt(),t,e,r,s),this.elementType="f16"}slice(t,e){return this.sliceBuffer(M,t,e)}};M.ElementType="f16";let Et=M;const L=class L extends y{constructor(t,e=0,r,s){super(Float32Array,t,e,r,s),this.elementType="f32"}slice(t,e){return this.sliceBuffer(L,t,e)}};L.ElementType="f32";let Tt=L;const C=class C extends Qt{constructor(t,e=0,r,s){super(Float32Array,t,e,r,s),this.elementType="f32"}slice(t,e){return this.sliceBuffer(C,t,e)}};C.ElementType="f32";let mt=C;const w=class w extends Qt{constructor(t,e=0,r,s){super(Float64Array,t,e,r,s),this.elementType="f64"}slice(t,e){return this.sliceBuffer(w,t,e)}};w.ElementType="f64";let St=w;const Y=class Y extends Wt{constructor(t,e=0,r,s){super(Float32Array,t,e,r,s),this.elementType="f32"}slice(t,e){return this.sliceBuffer(Y,t,e)}};Y.ElementType="f32";let At=Y;const N=class N extends Wt{constructor(t,e=0,r,s){super(Float64Array,t,e,r,s),this.elementType="f64"}slice(t,e){return this.sliceBuffer(N,t,e)}};N.ElementType="f64";let bt=N;const P=class P extends h{constructor(t,e=0,r,s){super(Float64Array,t,e,r,s),this.elementType="f64"}slice(t,e){return this.sliceBuffer(P,t,e)}};P.ElementType="f64";let xt=P;const R=class R extends l{constructor(t,e=0,r,s){super(Float64Array,t,e,r,s),this.elementType="f64"}slice(t,e){return this.sliceBuffer(R,t,e)}};R.ElementType="f64";let gt=R;const m=class m extends p{constructor(t,e=0,r,s){super(Float64Array,t,e,r,s),this.elementType="f64"}slice(t,e){return this.sliceBuffer(m,t,e)}static fromTypedArray(t,e){return new m(t.buffer,t.byteOffset,e,t.byteOffset+t.byteLength)}};m.ElementType="f64";let Mt=m;const F=class F extends y{constructor(t,e=0,r,s){super(Float64Array,t,e,r,s),this.elementType="f64"}slice(t,e){return this.sliceBuffer(F,t,e)}};F.ElementType="f64";let Lt=F;const $=class $ extends h{constructor(t,e=0,r,s){super(Uint8Array,t,e,r,s),this.elementType="u8"}slice(t,e){return this.sliceBuffer($,t,e)}};$.ElementType="u8";let Ct=$;const I=class I extends l{constructor(t,e=0,r,s){super(Uint8Array,t,e,r,s),this.elementType="u8"}slice(t,e){return this.sliceBuffer(I,t,e)}};I.ElementType="u8";let wt=I;const S=class S extends p{constructor(t,e=0,r,s){super(Uint8Array,t,e,r,s),this.elementType="u8"}slice(t,e){return this.sliceBuffer(S,t,e)}static fromTypedArray(t,e){return new S(t.buffer,t.byteOffset,e,t.byteOffset+t.byteLength)}};S.ElementType="u8";let Yt=S;const O=class O extends y{constructor(t,e=0,r,s){super(Uint8Array,t,e,r,s),this.elementType="u8"}slice(t,e){return this.sliceBuffer(O,t,e)}};O.ElementType="u8";let Nt=O;const U=class U extends h{constructor(t,e=0,r,s){super(Uint16Array,t,e,r,s),this.elementType="u16"}slice(t,e){return this.sliceBuffer(U,t,e)}};U.ElementType="u16";let Pt=U;const V=class V extends l{constructor(t,e=0,r,s){super(Uint16Array,t,e,r,s),this.elementType="u16"}slice(t,e){return this.sliceBuffer(V,t,e)}};V.ElementType="u16";let Rt=V;const v=class v extends p{constructor(t,e=0,r,s){super(Uint16Array,t,e,r,s),this.elementType="u16"}slice(t,e){return this.sliceBuffer(v,t,e)}};v.ElementType="u16";let Ft=v;const k=class k extends y{constructor(t,e=0,r,s){super(Uint16Array,t,e,r,s),this.elementType="u16"}slice(t,e){return this.sliceBuffer(k,t,e)}};k.ElementType="u16";let $t=k;const X=class X extends h{constructor(t,e=0,r,s){super(Uint32Array,t,e,r,s),this.elementType="u32"}slice(t,e){return this.sliceBuffer(X,t,e)}};X.ElementType="u32";let It=X;const Z=class Z extends l{constructor(t,e=0,r,s){super(Uint32Array,t,e,r,s),this.elementType="u32"}slice(t,e){return this.sliceBuffer(Z,t,e)}};Z.ElementType="u32";let Ot=Z;const j=class j extends p{constructor(t,e=0,r,s){super(Uint32Array,t,e,r,s),this.elementType="u32"}slice(t,e){return this.sliceBuffer(j,t,e)}};j.ElementType="u32";let Ut=j;const q=class q extends y{constructor(t,e=0,r,s){super(Uint32Array,t,e,r,s),this.elementType="u32"}slice(t,e){return this.sliceBuffer(q,t,e)}};q.ElementType="u32";let Vt=q;const z=class z extends h{constructor(t,e=0,r,s){super(Int8Array,t,e,r,s),this.elementType="i8"}slice(t,e){return this.sliceBuffer(z,t,e)}};z.ElementType="i8";let vt=z;const D=class D extends l{constructor(t,e=0,r,s){super(Int8Array,t,e,r,s),this.elementType="i8"}slice(t,e){return this.sliceBuffer(D,t,e)}};D.ElementType="i8";let kt=D;const G=class G extends p{constructor(t,e=0,r,s){super(Int8Array,t,e,r,s),this.elementType="i8"}slice(t,e){return this.sliceBuffer(G,t,e)}};G.ElementType="i8";let Xt=G;const H=class H extends y{constructor(t,e=0,r,s){super(Int8Array,t,e,r,s),this.elementType="i8"}slice(t,e){return this.sliceBuffer(H,t,e)}};H.ElementType="i8";let Zt=H;const J=class J extends h{constructor(t,e=0,r,s){super(Int16Array,t,e,r,s),this.elementType="i16"}slice(t,e){return this.sliceBuffer(J,t,e)}};J.ElementType="i16";let jt=J;const K=class K extends l{constructor(t,e=0,r,s){super(Int16Array,t,e,r,s),this.elementType="i16"}slice(t,e){return this.sliceBuffer(K,t,e)}};K.ElementType="i16";let qt=K;const Q=class Q extends p{constructor(t,e=0,r,s){super(Int16Array,t,e,r,s),this.elementType="i16"}slice(t,e){return this.sliceBuffer(Q,t,e)}};Q.ElementType="i16";let zt=Q;const W=class W extends y{constructor(t,e=0,r,s){super(Int16Array,t,e,r,s),this.elementType="i16"}slice(t,e){return this.sliceBuffer(W,t,e)}};W.ElementType="i16";let Dt=W;const _=class _ extends h{constructor(t,e=0,r,s){super(Int32Array,t,e,r,s),this.elementType="i32"}slice(t,e){return this.sliceBuffer(_,t,e)}};_.ElementType="i32";let Gt=_;const tt=class tt extends l{constructor(t,e=0,r,s){super(Int32Array,t,e,r,s),this.elementType="i32"}slice(t,e){return this.sliceBuffer(tt,t,e)}};tt.ElementType="i32";let Ht=tt;const et=class et extends p{constructor(t,e=0,r,s){super(Int32Array,t,e,r,s),this.elementType="i32"}slice(t,e){return this.sliceBuffer(et,t,e)}};et.ElementType="i32";let Jt=et;const st=class st extends y{constructor(t,e=0,r,s){super(Int32Array,t,e,r,s),this.elementType="i32"}slice(t,e){return this.sliceBuffer(st,t,e)}};st.ElementType="i32";let Kt=st;export{bt as A,xt as B,kt as C,Xt as D,At as E,Lt as F,Zt as G,jt as H,Ct as I,qt as J,zt as K,Rt as L,$t as M,Dt as N,Yt as O,Gt as P,Ht as Q,Jt as R,Ot as S,Tt as T,Mt as U,Ft as V,Kt as W,lt as a,gt as b,ne as c,mt as d,he as e,pt as f,Nt as g,at as h,ce as i,wt as j,Ut as k,rt as l,Et as m,le as n,Bt as o,dt as p,Vt as q,it as r,ft as s,fe as t,ye as u,It as v,Pt as w,St as x,ot as y,vt as z};

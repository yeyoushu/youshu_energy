import{ax as u,g4 as m,bv as b,gR as w,e9 as y,gO as k,ea as _,bw as d,v as o,w as n,x as v}from"./test-DMnSxVQs.js";import{h as f,d as B,S as M,b as S}from"./Stop-CMkkmHAH.js";import"./index-BJQUWR-1.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";import"./networkEnums-wWPfn3N_.js";function p(e,r){e.networkFeature=r}function V(e){const r=l(e.graphic);return{...e,networkFeature:r}}function L(e){const r=e.graphics.map((t=>l(t)));return{...e,networkFeatures:r}}function l(e){return e.networkFeature}function F(e){return e?.type==="point"||e?.type==="polyline"||e?.type==="polygon"}let s=class extends u{constructor(e){super(e),this._createMode=null,this._graphicsLayer=new m({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new b,this.enabled=!0,this._handleSketchViewModelEvents=async r=>{switch(r.type){case"update":switch(r.state){case"active":case"complete":for(const t of r.graphics)l(t).geometry=F(t.geometry)?t.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const t of r.graphics){const i=l(t);this._removeNetworkFeature(i)}break;case"create":if(r.graphic&&r.state==="complete"&&this._createMode){const t=r.graphic.geometry?.clone(),i=r.graphic.symbol?.clone();if(!t)break;switch(this._createMode){case"stop":{if(t.type!=="point")break;const{stops:a}=this.layer;if(a.length>0&&a.every((({geometry:c})=>!c))){a.at(0).geometry=t;break}if(a.length>1&&a.filter(((c,g)=>g!==0)).every((({geometry:c})=>!c))){a.at(1).geometry=t;break}const h=new S({geometry:t});a.add(h),p(r.graphic,h);break}case"point-barrier":{if(t.type!=="point")break;const a=new M({geometry:t,symbol:i});this.layer.pointBarriers.add(a),p(r.graphic,a);break}case"polyline-barrier":{if(t.type!=="polyline")break;const a=new B({geometry:t,symbol:i});this.layer.polylineBarriers.add(a),p(r.graphic,a);break}case"polygon-barrier":{if(t.type!=="polygon")break;const a=new f({geometry:t,symbol:i});this.layer.polygonBarriers.add(a),p(r.graphic,a);break}}}}(await this.view.whenLayerView(this.layer)).emit(r.type,r.type==="create"?V(r):L(r))}}initialize(){this._sketchViewModel=new w({layer:this._graphicsLayer,view:this.view}),this.addHandles([y((()=>this.enabled),(e=>{e?this._activate():this._deactivate()}),_),y((()=>{const{stops:e,pointBarriers:r,polylineBarriers:t,polygonBarriers:i}=this.layer;return{stops:e,pointBarriers:r,polylineBarriers:t,polygonBarriers:i}}),(()=>{this.enabled&&this._loadClonedGraphics()})),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),k(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=d(this._graphicsLayer),this._sketchViewModel=d(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map((e=>l(e)))}get updating(){return this._updatingHandles.updating}create(e){switch(this._createMode=e,e){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(e){const r=this._graphicsLayer.graphics.find((t=>l(t)===e));r&&this._graphicsLayer.remove(r),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap((r=>r.toArray().map((t=>{const i=t.toGraphic();return i.networkFeature=t,i}))));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case"stop":this.layer.stops.remove(e);break;case"point-barrier":this.layer.pointBarriers.remove(e);break;case"polyline-barrier":this.layer.polylineBarriers.remove(e);break;case"polygon-barrier":this.layer.polygonBarriers.remove(e)}}};o([n()],s.prototype,"enabled",void 0),o([n({constructOnly:!0})],s.prototype,"layer",void 0),o([n({readOnly:!0})],s.prototype,"selectedNetworkFeatures",null),o([n()],s.prototype,"updating",null),o([n({constructOnly:!0})],s.prototype,"view",void 0),s=o([v("esri.views.2d.layers.support.RouteLayerInteraction")],s);export{s as RouteLayerInteraction};

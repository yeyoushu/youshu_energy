import{aU as T,bI as C,kC as P,v as s,w as i,_ as H,ga as J,b7 as x,kD as U,x as _,e9 as A,eA as D,aw as L,ew as G,kE as I,a_ as Q,fk as Y,b1 as j,ex as B,bi as F,fs as K,fv as W,fw as X,bQ as Z}from"./test-DMnSxVQs.js";import{c as ee,b as te}from"./featureReferenceUtils-Dn097Cnf.js";import{l as se}from"./Analysis-8shTonn2.js";import"./index-BJQUWR-1.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";import"./IntersectorType-gQim6TH1.js";let a=class extends T.JSONSupportMixin(C){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}get valid(){return this.observer!=null&&this.farDistance>0}equals(e){return P(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&ee(this.feature,e.feature)}};s([i({type:H,json:{write:{isRequired:!0}}})],a.prototype,"observer",void 0),s([i({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),s([i({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),J((e=>x.normalize(U(e),void 0,!0)))],a.prototype,"heading",void 0),s([i({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),s([i({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),s([i({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),s([i(te)],a.prototype,"feature",void 0),s([i({readOnly:!0,json:{read:!1}})],a.prototype,"valid",null),a=s([_("esri.analysis.Viewshed")],a);const N=L.ofType(a);let l=class extends se{constructor(t){super(t),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A((()=>this._computeExtent()),(t=>{t.pending==null&&(this._extent=t.extent)}),D))}get viewsheds(){return this._get("viewsheds")||new N}set viewsheds(t){this._set("viewsheds",G(t,this.viewsheds,N))}get spatialReference(){for(const t of this.viewsheds)if(t.observer!=null)return t.observer.spatialReference;return null}get extent(){return this._extent}get valid(){return this.viewsheds.every((t=>t.valid))}async waitComputeExtent(){const t=this._computeExtent();t.pending!=null&&await t.pending}_computeExtent(){const{spatialReference:t}=this;if(t==null)return{pending:null,extent:null};const u=this.viewsheds.filter((r=>r.observer!=null)),d=u.map((r=>r.observer)).toArray(),p=I(d,t);return p.pending!=null?{pending:p.pending,extent:null}:{pending:null,extent:p.geometries.map(((r,h)=>{const b=u.at(h);return r!=null&&b!=null?this._computeViewshedExtent(this.viewsheds.at(h),r):null})).filter((r=>r!=null)).reduce(((r,h)=>ie(r,h)),null)}}_computeViewshedExtent(t,u){const{farDistance:d,heading:p,tilt:r,horizontalFieldOfView:h,verticalFieldOfView:b}=t,{spatialReference:q}=u,O=h/2,V=b/2,$=d/q.metersPerUnit,k=[x.normalize(p-O),p,x.normalize(p+O)],c=Q.fromPoint(u),m=f=>{const y=k.map((o=>x.normalize(o-f)));if(y[0]>y[2]||h===360)return $;const w=y.map((o=>Math.abs(o>180?360-o:o))).reduce(((o,g)=>o>g?g:o));return w>90?0:$*Math.cos(j(w))};c.xmax+=m(90),c.xmin-=m(-90),c.ymax+=m(0),c.ymin-=m(180);const v=u.z;if(v!=null){let f=v,y=v;const w=r-90,o=F(w+V,-90,90),g=F(w-V,-90,90),z=q?.isGeographic?d:$;f+=z*R(o),y+=z*R(g);const S=M(V)*z,E=R(w)*S*(1-M(O));r<90&&(f-=E),r>90&&(y-=E),c.zmax=Math.max(f,v),c.zmin=Math.min(y,v)}return c}equals(t){return this===t||super.equals(t)&&Y(this.viewsheds.toArray(),t.viewsheds.toArray(),((u,d)=>u.equals(d)))}clear(){this.viewsheds.removeAll()}};function ie(e,t){return e==null?t:t==null?e:e.union(t)}function M(e){return Math.cos(j(e))}function R(e){return Math.sin(j(e))}s([i({type:["viewshed"]})],l.prototype,"type",void 0),s([i({cast:B,type:N,nonNullable:!0})],l.prototype,"viewsheds",null),s([i({readOnly:!0})],l.prototype,"spatialReference",null),s([i()],l.prototype,"_extent",void 0),s([i()],l.prototype,"extent",null),s([i({readOnly:!0})],l.prototype,"valid",null),l=s([_("esri.analysis.ViewshedAnalysis")],l);let n=class extends K(W(X)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new l,this.opacity=1}initialize(){this.addHandles(A((()=>this.source),((e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)}),D))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new l)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,u,d){t.viewsheds=e.filter((p=>p.valid)).toJSON(d)}};s([i({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),s([i({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),s([i({type:l,nonNullable:!0})],n.prototype,"source",void 0),s([i({readOnly:!0})],n.prototype,"spatialReference",null),s([i({readOnly:!0})],n.prototype,"fullExtent",null),s([i({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),s([i({type:["show","hide"]})],n.prototype,"listMode",void 0),s([i({type:L.ofType(a),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),s([Z("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=s([_("esri.layers.ViewshedLayer")],n);const he=n;export{he as default};

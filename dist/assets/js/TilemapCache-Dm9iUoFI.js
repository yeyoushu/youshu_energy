import{bj as q,L,H as T,s as m,ax as S,e9 as x,ea as P,dd as A,g as I,kb as M,jE as C,iI as U,bK as j,c3 as k,c6 as E,g9 as H,v as y,w as b,x as R}from"./test-DMnSxVQs.js";import{E as F}from"./ByteSizeUnit-BsxeN7wM.js";import{e as K}from"./LRUCache--7okbBjw.js";import{i as N}from"./memoryEstimations-Bf3XeyNh.js";function J(t,e=!1){return t<=q?e?new Array(t).fill(0):new Array(t):new Uint32Array(t)}class g{constructor(e){G(e);const{location:a,data:l}=e;this.location=Object.freeze(L(a));const i=this.location.width,s=this.location.height;let r=!0,h=!0;const o=Math.ceil(i*s/32),n=J(o);let f=0;for(let c=0;c<l.length;c++){const u=c%32;l[c]?(h=!1,n[f]|=1<<u):r=!1,u===31&&++f}h?(this._availability="unavailable",this.byteSize=40):r?(this._availability="available",this.byteSize=40):(this._availability=n,this.byteSize=40+N(n))}getAvailability(e,a){if(this._availability==="unavailable"||this._availability==="available")return this._availability;const l=(e-this.location.top)*this.location.width+(a-this.location.left),i=l%32,s=l>>5,r=this._availability;return s<0||s>r.length?"unknown":r[s]&1<<i?"available":"unavailable"}static fromDefinition(e,a){const l=e.service.request||T,{row:i,col:s,width:r,height:h}=e,o={query:{f:"json"}};return a=a?{...o,...a}:o,l(B(e),a).then((n=>n.data)).catch((n=>{if(n?.details?.httpStatus===422)return{location:{top:i,left:s,width:r,height:h},valid:!0,data:new Array(r*h).fill(0)};throw n})).then((n=>{if(n.location&&(n.location.top!==i||n.location.left!==s||n.location.width!==r||n.location.height!==h))throw new m("tilemap:location-mismatch","Tilemap response for different location than requested",{response:n,definition:{top:i,left:s,width:r,height:h}});return g.fromJSON(n)}))}static fromJSON(e){return Object.freeze(new g(e))}}function D(t){return`${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}function B(t){let e;if(t.service.tileServers?.length){const l=t.service.tileServers;e=`${l&&l.length?l[t.row%l.length]:t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`}else e=`${t.service.url}/tilemap/${t.level}/${t.row}/${t.col}/${t.width}/${t.height}`;const a=t.service.query;return a&&(e=`${e}?${a}`),e}function G(t){if(!t?.location)throw new m("tilemap:missing-location","Location missing from tilemap response");if(t.valid===!1)throw new m("tilemap:invalid","Tilemap response was marked as invalid");if(!t.data)throw new m("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(t.data))throw new m("tilemap:data-mismatch","Data must be an array of numbers");if(t.data.length!==t.location.width*t.location.height)throw new m("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}var d;function O(t,e,a){return new m("tile-map:tile-unavailable","Tile is not available",{level:t,row:e,col:a})}var p;let v=(p=class extends S{constructor(e){super(e),this._pendingTilemapRequests={},this.request=T,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new K(2*F.MEGABYTES),this.addHandles(x((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),P))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,a,l){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const i=this._tilemapFromCache(e,a,l,this._tmpTilemapDefinition);return i?i.getAvailability(a,l):"unknown"}fetchAvailability(e,a,l,i){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(O(e,a,l)):this._fetchTilemap(e,a,l,i).catch((s=>s)).then((s=>{if(s instanceof g){const r=s.getAvailability(a,l);if(r==="unavailable")throw O(e,a,l);return r}if(A(s))throw s;return"unknown"}))}fetchAvailabilityUpsample(e,a,l,i,s){i.level=e,i.row=a,i.col=l;const r=this.layer.tileInfo;r.updateTileInfo(i);const h=this.fetchAvailability(e,a,l,s).catch((o=>{if(A(o))throw o;if(r.upsampleTile(i))return this.fetchAvailabilityUpsample(i.level,i.row,i.col,i,s);throw o}));return this._fetchAvailabilityUpsamplePrefetch(i.id,e,a,l,s,h),h}async _fetchAvailabilityUpsamplePrefetch(e,a,l,i,s,r){if(!this._prefetchingEnabled||e==null)return;const h=`prefetch-${e}`;if(this.hasHandles(h))return;const o=new AbortController;r.then((()=>o.abort()),(()=>o.abort()));let n=!1;const f=I((()=>{n||(n=!0,o.abort())}));if(this.addHandles(f,h),await M(10,o.signal).catch((()=>{})),n||(n=!0,this.removeHandles(h)),C(o))return;const c=new U(e,a,l,i),u={...s,signal:o.signal},w=this.layer.tileInfo;for(let z=0;d._prefetches.length<d._maxPrefetch&&w.upsampleTile(c);++z){const _=this.fetchAvailability(c.level,c.row,c.col,u);d._prefetches.push(_);const $=()=>{d._prefetches.removeUnordered(_)};_.then($,$)}}_fetchTilemap(e,a,l,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new m("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const s=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,a,l,s);if(r)return Promise.resolve(r);const h=i?.signal;return i={...i,signal:null},new Promise(((o,n)=>{k(h,(()=>n(E())));const f=D(s);let c=this._pendingTilemapRequests[f];if(!c){c=g.fromDefinition(s,i).then((w=>(this._tilemapCache.put(f,w,w.byteSize),w)));const u=()=>{delete this._pendingTilemapRequests[f]};this._pendingTilemapRequests[f]=c,c.then(u,u)}c.then(o,n)}))}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:a,customParameters:l}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:H({...e.query,...l,token:a??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,a,l,i){i.level=e,i.row=a-a%this.size,i.col=l-l%this.size;const s=D(i);return this._tilemapCache.get(s)}get test(){}},d=p,p._maxPrefetch=4,p._prefetches=new j({initialSize:d._maxPrefetch}),p);y([b({constructOnly:!0})],v.prototype,"layer",void 0),y([b({constructOnly:!0})],v.prototype,"minLOD",void 0),y([b({constructOnly:!0})],v.prototype,"maxLOD",void 0),y([b({constructOnly:!0})],v.prototype,"request",void 0),y([b({constructOnly:!0})],v.prototype,"size",void 0),v=d=y([R("esri.layers.support.TilemapCache")],v);export{v as T};

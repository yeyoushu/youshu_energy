import{P as n,$ as c}from"./utils-C9bVQDGO.js";import{t as p}from"./rasterFieldUtils-Bqxu5ebo.js";import{gF as g,gI as u,gG as v,gH as s}from"./test-DMnSxVQs.js";import"./originUtils-CmZQxivA.js";import"./jsonContext--JKapB0G.js";import"./saveUtils-C8vypMrn.js";import"./index-BJQUWR-1.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";const y="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",I="imagery-tile-layer-save",T="imagery-tile-layer-save-as",l="WCS",w="wcs-layer-save",x="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:r}=e,t=p(r)[0];return{isValid:t?.datasetFormat==="RasterTileServer"&&(t.tileType==="Raster"||t.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function o(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function A(e,r){const{parsedUrl:t,title:a,fullExtent:i}=e;r.url=t.path,r.title||=a;try{r.extent=await g(i)}catch{r.extent=void 0}u(r,s.METADATA),v(r,s.TILED_IMAGERY,e.type==="imagery-tile")}async function R(e,r){const t=e.type==="imagery"?f:e.type==="imagery-tile"?I:w,a=e.type==="wcs"?l:y;return n({layer:e,itemType:a,validateLayer:m,createItemData:o,errorNamePrefix:t},r)}async function b(e,r,t){const a=e.type==="imagery"?d:e.type==="imagery-tile"?T:x,i=e.type==="wcs"?l:y;return c({layer:e,itemType:i,validateLayer:m,createItemData:o,errorNamePrefix:a,newItem:r,setItemProperties:A},t)}export{R as save,b as saveAs};

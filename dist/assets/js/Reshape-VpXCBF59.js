import{ax as ee,g4 as R,bv as te,kQ as F,cm as ie,g as P,V as Y,i2 as H,j0 as C,dz as X,cN as se,e9 as x,kR as oe,kS as re,v as h,w as c,x as A,t as L,eA as ne,fD as B,i6 as ae,kT as he,_ as S,bu as pe,aw as T,u as b,gZ as K,kU as ce,eb as le,g_ as de,gP as ve,ea as ue,bw as k,kV as me,y as ye,jz as ge,bY as U,kd as z,d as $,kW as _e,A as V,kX as fe,s as xe,kY as Ge}from"./test-DMnSxVQs.js";import{d as Me}from"./SnappingVisualizer2D-D0LmGtng.js";import{x as we}from"./symbolUtils-D8ePKi2q.js";import{e as Q,p as be,i as Ve}from"./SelectedVertexTooltipInfo-cEsXkzuG.js";import{i as Se}from"./drawUtils-CLR1QGY5.js";import{l as Ie,j as ke}from"./GraphicMover-8udfKkmn.js";import{r as Ee,C as Te,F as Oe,R as Re,H as Ce}from"./SketchTooltipInfo-kfKHDTds.js";import{i as Le}from"./TranslateTooltipInfo-DHkiYCnO.js";import{h as $e}from"./settings-CqoCHAAr.js";import{P as He,E as Ae,e as Fe}from"./SnappingContext-CTLCtWan.js";import"./index-BJQUWR-1.js";import"./vendor-CHjNVy30.js";import"./station-DfQHTTxy.js";import"./enums-DCdj6Lab.js";import"./utils-C3X7exyA.js";import"./cimSymbolUtils-DevxqcTH.js";import"./utils-y48t8Afq.js";import"./defaultCIMValues-eS1WuCTt.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./colorUtils-BIivfTto.js";import"./defaults3D-BelXX9Kz.js";import"./defaults-CxYRXl92.js";import"./defaultsJSON-GKolV7NZ.js";import"./layerViewUtils-yeCv-jWE.js";import"./GraphicManipulator-Ike_6Rm7.js";import"./drapedUtils-DDdHT-6u.js";import"./MeshTransform-CXnfAX4N.js";import"./quat-Bl4gg7Oa.js";import"./axisAngleDegrees-CKN8jXll.js";import"./meshVertexSpaceUtils-C_yYfkz_.js";import"./MeshLocalVertexSpace-pp_jQN70.js";import"./memoize-DmxaQ-k8.js";import"./unitFormatUtils-DogQArD5.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./PointSnappingHint-C5HWI0ak.js";var E;(function(e){e[e.FeatureMove=0]="FeatureMove",e[e.VertexMove=1]="VertexMove"})(E||(E={}));const Pe=()=>Y.getLogger("esri.views.draw.support.ConnectedReshapeManager"),Ue=Symbol();let w=class extends ee{constructor(e){super(e),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new R({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new R({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new te}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some((e=>e.updating))}startFeatureMove(e){this.activeOperationType=E.FeatureMove,this._activeProviders.clear();for(const t of this.providerFactories)F(this._activeProviders,t.getFeatureReshapeProvider(e))}startVertexMove(e,t){this.activeOperationType=E.VertexMove,this._activeProviders.clear();for(const i of this.providerFactories)F(this._activeProviders,i.getVertexReshapeProvider(e,t))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[e,t]of this._pendingFeatures){this._pendingFeatures.delete(e),this._modifiedFeatures.set(e,t);const i=this._graphics.get(e);i&&(this._modifiedGraphicsLayer.add(i),this._pendingGraphicsLayer.remove(i))}}translate(e,t,i=0){if(this.activeOperationType===null)return;const s=O(e),r=O(t),o=O(i);for(const n of this._activeProviders){const a=n.translate(s,r,o);this._update(a)}}async _initializeGraphic(e,t){e.symbol??=await this._updatingHandles.addPromise(we(e,{scale:this.view.scale,useSourceLayer:!0})),this._pendingFeatures.has(t.uniqueId)?this._pendingGraphicsLayer.add(e):this._modifiedFeatures.has(t.uniqueId)&&this._modifiedGraphicsLayer.add(e),this.addHandles(await ze(t.originalGraphic,e,this.view),Ue)}_update(e){for(const t of e){const i=this._modifiedFeatures.delete(t.uniqueId);this._pendingFeatures.set(t.uniqueId,t);const s=ie(this._graphics,t.uniqueId,(()=>{const r=t.graphic.cloneShallow();return this._initializeGraphic(r,t),r}));s.geometry=t.graphic.geometry,i&&(this._modifiedGraphicsLayer.remove(s),this._pendingGraphicsLayer.add(s))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}};async function ze(e,t,i){const s=e.sourceLayer,r=e.getObjectId();if(r==null)return Pe().error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),P();let o=null;function n(a){o?.abort(),o=X((async p=>{const l=await D(i,s);se(p),l&&l.setVisibility?.(r,a)}))}return await je(i,t),n(!1),H([De(i,t,(a=>n(!a))),P((async()=>{n(!0);const a=await D(i,s);await C((()=>!a?.updating))}))])}function De(e,t,i){if(e.type==="3d"){const s=new Q({graphic:t});return H([e.trackGraphicState(s),x((()=>s.displaying),i)])}return x((()=>t.visible),i)}async function je(e,t){if(e.type==="3d"){const i=new Q({graphic:t}),s=e.trackGraphicState(i);await C((()=>i.displaying||i.error)),s.remove()}else await C((()=>t.visible))}async function D(e,t){const i=oe(t)||re(t)?t.parent:t;return i?e.whenLayerView(i):null}function O(e){return isNaN(e)?0:e}h([c()],w.prototype,"activeOperationType",void 0),h([c()],w.prototype,"providerFactories",void 0),h([c()],w.prototype,"updating",null),h([c({constructOnly:!0})],w.prototype,"view",void 0),w=h([A("esri.views.draw.support.ConnectedReshapeManager")],w);let G=class extends Ee{constructor(e){super(e),this.type="translate-vertex",this.distance=L,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=L,this.elevation=null,this.area=null,this.totalLength=null}};h([c()],G.prototype,"type",void 0),h([c()],G.prototype,"distance",void 0),h([c()],G.prototype,"elevation",void 0),h([c()],G.prototype,"area",void 0),h([c()],G.prototype,"totalLength",void 0),G=h([A("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],G);function Ne(e){const t={sketchOptions:e,viewType:"2d"};return{movePoint:new Ve(t),selectedVertex:new be(t),translateGraphic:new Le(t),translateVertices:new G(t)}}function Ze(e,t){function i(){const o=t(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return H([x((()=>{const o=i();return{context:o,geometry:o.graphic?.geometry,vertexGeometry:o.selectedVertex?.geometry}}),(({context:o})=>{r((()=>{qe(o),e.info=o.activeTooltipInfo}))}),ne),x((()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}}),((o,n)=>{o&&n&&o.key!==n.key&&r((()=>j(o.context)))}),B),Te(e,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{j(i()),s=!1}})])}function qe(e){const t=e.activeTooltipInfo;if(t){switch(t?.type){case"move-point":return Ye(t,e);case"selected-vertex":return Xe(t,e)}t.sketchOptions=e.sketchOptions}}function Ye(e,{graphic:t}){W(e,t,t?.geometry)}function Xe(e,{graphic:t,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:r}){W(e,t,i?.geometry);const o=t?.geometry;switch(o?.type){case"polygon":e.geometryType="polygon",e.totalLength.visible=!1,e.area.actual=s.autoArea2D(o);break;case"polyline":e.geometryType="polyline",e.totalLength.actual=r.autoLength2D(o),e.area.visible=!1}}function W(e,t,i){t&&i?.type==="point"&&(e.setLocationFromPoint(i),e.elevation.actual=he(i),e.elevation.visible=!!t.geometry?.hasZ,e.elevation.readOnly=!1,e.elevation.showAsZ=!0)}function j(e){function t(o,n){const a=n?.geometry;if(!a||a.type!=="point")return;const{dx:p,dy:l,dz:d}=Oe(o,a);if(p===0&&l===0&&d===0)return;const{x:u,y:m,z:g,m:f,spatialReference:y}=a,M=new S({x:u+p,y:m+l,z:g!=null?g+d:void 0,m:f,spatialReference:y});e.updateGeometry(n,M,a,p,l)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=e;switch(i?.type){case"move-point":return t(i,s);case"selected-vertex":return t(i,r)}}function Be(e,t,i,s){e.clear(),J(e,t,s,i)}function Ke(e,t,i,s,r){e.clear();const{automaticAreaMeasurementUtils:o,automaticLengthMeasurementUtils:n}=s;i?.type==="polygon"?e.area=o.autoArea2D(i):i?.type==="polyline"&&(e.totalLength=n.autoLength2D(i)),J(e,t,r,s)}function J(e,t,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:r,y:o}=i.origin,n=t.toMap(i),a=t.toMap(ae(r,o)),p=s.autoDistanceBetweenPoints2D(a,n);e.distance=p??L}class Qe{constructor(t,i,s){this.graphic=t,this.mover=i,this.selected=s,this.type="reshape-start"}}class We{constructor(t,i,s){this.graphic=t,this.mover=i,this.selected=s,this.type="reshape"}}class Je{constructor(t,i,s){this.graphic=t,this.mover=i,this.selected=s,this.type="reshape-stop"}}class et{constructor(t,i,s){this.mover=t,this.dx=i,this.dy=s,this.type="move-start"}}class tt{constructor(t,i,s){this.mover=t,this.dx=i,this.dy=s,this.type="move"}}class it{constructor(t,i,s){this.mover=t,this.dx=i,this.dy=s,this.type="move-stop"}}class st{constructor(t){this.added=t,this.type="vertex-select"}}class ot{constructor(t){this.removed=t,this.type="vertex-deselect"}}class rt{constructor(t,i,s,r){this.added=t,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class nt{constructor(t,i,s,r){this.removed=t,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const _=$e.reshapeGraphics,at={vertices:{default:new b({style:"circle",size:_.vertex.size,color:_.vertex.color,outline:{color:_.vertex.outlineColor,width:1}}),hover:new b({style:"circle",size:_.vertex.hoverSize,color:_.vertex.hoverColor,outline:{color:_.vertex.hoverOutlineColor,width:1}}),selected:new b({style:"circle",size:_.selected.size,color:_.selected.color,outline:{color:_.selected.outlineColor,width:1}})},midpoints:{default:new b({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}}),hover:new b({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}})}};let v=class extends pe.EventedAccessor{constructor(e){super(e),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._connectedReshapeManager=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.connectedReshapeProviders=null,this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.midpointGraphics=new T,this.midpointSymbol=new b({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new T,this.snappingManager=null,this.symbols=at,this.sketchOptions=new K,this.type="reshape",this.vertexGraphics=new T,this.view=null}initialize(){const e=this.view;this._highlightHelper=new Ie({view:e}),this._setup(),this._updateHandlesOnExternalGeometryChange=ce((()=>this.graphic?.geometry),(t=>{if(!t)return;const i=new Set(this.selectedVertices.map((l=>l.attributes?.pointIndex)));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter((l=>i.has(l.attributes.pointIndex))).forEach((l=>this._addToSelection(l)));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,p=a.concat(n).items;s&&p.push(o),r?.set("graphics",p)}),B),this.tooltip=Re((()=>({view:e,options:this.sketchOptions.tooltips}))),this.tooltipInfos=Ne(this.sketchOptions),this.addHandles([le((()=>e?.ready),(()=>{const{layer:t,view:i}=this;de(i,t),this.addHandles(i.on("key-down",(s=>this._keyDownHandler(s)),ve.TOOL))}),{once:!0,initial:!0}),x((()=>this.graphic),(()=>this.refresh())),x((()=>this.layer),((t,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()})),x((()=>[this.highlightsEnabled,this.highlightName]),(()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()})),x((()=>this.enableMidpoints),(()=>this.refresh())),Ze(this.tooltip,(()=>this._tooltipsContext)),x((()=>this.view.effectiveTheme.accentColor),(()=>this._updateSymbolsForTheme()),ue),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this._connectedReshapeManager=k(this._connectedReshapeManager),this.tooltip=k(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??He(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:e,automaticLengthMeasurementUtils:t,sketchOptions:i,activeTooltipInfo:s,graphic:r}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:r,selectedVertex:this._selectedVertex,automaticAreaMeasurementUtils:e,automaticLengthMeasurementUtils:t,updateGeometry:(o,n,a,p,l)=>{this._setUpGeometryHelper();const d=o===this.graphic;if(d?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(o),this._syncGeometryAfterVertexMove(o,n,p,l,!0),d){const{view:m}=this,g=m.toScreen(a),f=m.toScreen(n),y=(f?.x??0)-(g?.x??0),M=(f?.y??0)-(g?.y??0);this._emitMoveEvent(y,M),this._emitMoveStopEvent(y,M)}else this._emitReshapeEvent(o),this._emitReshapeStopEvent(o);this._editGeometryOperations=k(this._editGeometryOperations)}}}get state(){const e=this.view.ready,t=!(!this.graphic||!this.layer);return e&&t?"active":e?"ready":"disabled"}isUIGraphic(e){const t=[];return this.graphic&&t.push(this.graphic),t.concat(this.vertexGraphics.items,this.midpointGraphics.items),t.length>0&&t.includes(e)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:e}=this;e.length&&this._removeVertices(e)}_setup(){const{graphic:e,layer:t}=this;if(!t||e?.geometry==null)return;const i=e.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&me(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._setupConnectedReshapeManager()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic,this.highlightName)}_setUpGeometryHelper(){const e=this.graphic.geometry;if(e==null||e.type==="mesh"||e.type==="extent")return void this._logGeometryTypeError();const t=e.type==="multipoint"?new ye({paths:[e.points],spatialReference:e.spatialReference}):e;this._editGeometryOperations=Ae.fromGeometry(t,ge.Local)}_saveSnappingContextForHandle(e,t){this._snappingGraphicsLayer=new R({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;U(i),this._snappingContext=new Fe({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:t.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new Me(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(e)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=k(this._editGeometryOperations),this._snappingTask=z(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(e){this._removeMidpointGraphics(e),this._removeVertexGraphics(e),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(e){const t=e||this.layer;t&&t.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((i=>i.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(e){const t=e||this.layer;t&&t.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((i=>i.destroy())),this.vertexGraphics.removeAll()}_setupGraphics(){const e=this.graphic.geometry;if(e!=null&&(e.type==="polyline"||e.type==="polygon")){const t=N(e);this.enableMidpoints&&this._setUpMidpointGraphics(t),this.enableVertices&&this._setUpVertexGraphics(t)}}_setUpMidpointGraphics(e){this._removeMidpointGraphics();const t=this._createMidpointGraphics(e);this.midpointGraphics.addMany(t),this.layer.addMany(t)}_setUpVertexGraphics(e){this._removeVertexGraphics();const t=this._createVertexGraphics(e);this.vertexGraphics.addMany(t),this._storeRelatedVertexIndices(),this.layer.addMany(t)}_createVertexGraphics(e){const{_graphicAttributes:t,symbols:i}=this,s=[];return e?.forEach(((r,o)=>{r.forEach(((n,a)=>{s.push(new $({geometry:this._coordinateHelper.arrayToPoint(n),symbol:i?.vertices?.default,attributes:{...t,pathIndex:o,pointIndex:a}}))}))})),s}_createMidpointGraphics(e){const{_graphicAttributes:t,symbols:i}=this,s=[];for(let r=0;r<e.length;r++){const o=e[r];for(let n=0;n<o.length;n++){const a=(n+1)%o.length;if(this.graphic.geometry?.type==="polyline"&&a===0)continue;const p=o[n],l=o[a],d=this._getMidpoint(p,l);s.push(new $({geometry:d,symbol:i.midpoints.default,attributes:{...t,pathIndex:r,pointIndexStart:n,pointIndexEnd:a}}))}}return s}_updateSymbolsForTheme(){const e=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",e),hover:this.symbols.vertices.hover?.clone().set("color",e)},midpoints:{...this.symbols.midpoints}};for(const t of this.vertexGraphics)this._isSelected(t)?t.symbol=this.symbols.vertices.selected:this._hoverGraphic===t?t.symbol=this.symbols.vertices.hover:t.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const e=this.vertexGraphics.items;if(!e)return;const t=e.map((({geometry:i})=>({x:i.x,y:i.y})));for(let i=0;i<t.length;i++){const s=[];for(let r=0;r<t.length;r++){if(i===r)continue;const o=t[i],n=t[r];o.x===n.x&&o.y===n.y&&s.push(r)}e[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:e,graphic:t,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;e&&o.push(t),this._mover=new ke({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_setupConnectedReshapeManager(){const{connectedReshapeProviders:e}=this;e!=null&&e.length!==0&&(this._connectedReshapeManager=new w({providerFactories:e,view:this.view}))}_onGraphicClickCallback(e){e.viewEvent.stopPropagation();const t=e.graphic;if(t===this.graphic)this.clearSelection(),this.emit("graphic-click",e),this.callbacks.onGraphicClick?.(e);else if(this._isMidpoint(t)){if(e.viewEvent.button===2)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(t);this.refresh(),this._emitVertexAddEvent([t],i,s)}else this._isVertex(t)&&(e.viewEvent.stopPropagation(),e.viewEvent.button===2?this._removeVertices(t):(e.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(t)?this._removeFromSelection(t,!0):this._addToSelection(t)))}_setUpOperation(e){const{graphic:t,dx:i,dy:s}=e,r=t===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(t,e),this._activeOperationInfo={target:this.graphic,mover:t,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(e){const{dx:t,dy:i,graphic:s}=e,r=this._connectedReshapeManager,o=r?ht(this.graphic):null;if(s===this.graphic){const{geometry:a}=s;return this._setUpOperation(e),this._emitMoveStartEvent(t,i),o&&r?.startFeatureMove([o]),void(a!=null&&a.type==="point"&&this._onHandleMove(s,t,i,e,(()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(t,i)})))}const{selectedVertices:n}=this;if(!n.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const a=this.graphic.clone(),p=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],a,p)}this._addToSelection(s)}this._setUpOperation(e),o&&r?.startVertexMove(o,pt(n)),this._emitReshapeStartEvent(s),this._onHandleMove(s,t,i,e,(()=>{this._updateTooltip(s,e.viewEvent),this._emitReshapeEvent(s)}))}_onGraphicMoveCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:r}=e;t.totalDx+=i,t.totalDy+=s;const{operationType:o}=t,{geometry:n}=r;if(n!=null){if(o!=="move")this._onHandleMove(r,i,s,e,(()=>{this._updateTooltip(r,e.viewEvent),this._emitReshapeEvent(r)}));else if(n.type==="point")this._onHandleMove(r,i,s,e,(()=>{this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}));else if(n.type==="polyline"||n.type==="polygon"){const a=N(n);this._updateVertexGraphicLocations(a);const{dxMap:p,dyMap:l}=ct(i,s,this.view);this._connectedReshapeManager?.translate(p,l,0),this._updateTooltip(this.graphic,e.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(e){const t=this._activeOperationInfo;if(!t)return;const{dx:i,dy:s,graphic:r}=e,{operationType:o}=t;t.totalDx+=i,t.totalDy+=s,this._onHandleMove(r,i,s,e,(()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r))),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),this._connectedReshapeManager?.finish(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(e){const{_coordinateHelper:t}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=t.arrayToPoint(e[s][r])}this._updateMidpointGraphicLocations(e)}_updateMidpointGraphicLocations(e){for(const t of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=t.attributes,o=e[i];t.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(e,t){const{_coordinateHelper:i}=this,s=i.arrayToVector(e),r=i.arrayToVector(t),o=i.toXYZ(s),n=i.toXYZ(r),[a,p,l]=_e(o,n),d=i.hasM()?0:void 0;return new S({x:a,y:p,z:l,m:d,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(e){U(this._editGeometryOperations);const[t,i]=Z(e);return this._editGeometryOperations.data.components[t].vertices[i]}_onHandleMove(e,t,i,s,r){z(this._snappingTask);const o=this._snappingContext;if(!o)return;const n=e.geometry,a=s.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!a){const p=this.snappingManager;this._stagedVertex=p.update({point:n,context:o}),this._syncGeometryAfterVertexMove(e,new S(this._stagedVertex),t,i,a),r(),this._snappingTask=X((async l=>{const d=await p.snap({point:n,context:o,signal:l});d.valid&&(this._stagedVertex=d.apply(),this._syncGeometryAfterVertexMove(e,new S(this._stagedVertex),t,i,a),r())}))}else{const p=this._stagedVertex!=null?new S(this._stagedVertex):n;this._syncGeometryAfterVertexMove(e,p,t,i,a),r()}}_syncGeometryAfterVertexMove(e,t,i,s,r=!1){const o=this._editGeometryOperations?.data.geometry;if(!o)return;const{_coordinateHelper:n}=this,a=n.pointToVector(t),p=this._getVertexFromEditGeometry(e),l=n.getZ(a),d=a[0]-p.pos[0],u=a[1]-p.pos[1],m=l!=null?l-p.pos[2]:0;if(this._editGeometryOperations?.moveVertices([p],d,u,m),this._connectedReshapeManager?.translate(d,u,m),o.type==="point")e.geometry=t;else if(o.type==="mesh")e.geometry=o.centerAt(t);else{const[g,f]=Z(e);let y=V(o);const M=y[g].length-1,I=n.pointToArray(t);y[g][f]=I,o.type==="polygon"&&(f===0?y[g][M]=I:f===M&&(y[g][0]=I)),this._isVertex(e)&&(y=this._moveRelatedCoordinates(y,e,I),y=this._moveSelectedHandleCoordinates(y,e,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(y)),this._updateGraphicGeometry(o.clone()),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(e),t):e.geometry=t)}}_moveRelatedCoordinates(e,t,i){const{relatedGraphicIndices:s}=t.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;e[n][a]=i,o.geometry=t.geometry}return e}_moveSelectedHandleCoordinates(e,t,i,s,r){for(const o of this.selectedVertices)if(o!==t){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:p}=o.attributes,l=Se(o.geometry,i,s,this.view),d=V(l),u=e[n].length-1;e[n][a]=d,o.geometry=l,r&&(a===0?e[n][u]=d:a===u&&(e[n][0]=d));for(const m of p){const g=this.vertexGraphics.at(m),{pathIndex:f,pointIndex:y}=g.attributes;e[f][y]=d,g.geometry=l}}return e}_onGraphicPointerOverCallback(e){const t=e.graphic;this._hoverGraphic=t;const i=this._isVertex(t);i&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.hover),this._updateTooltip(i?t:null),this._updateHoverCursor(t)}_onGraphicPointerOutCallback(e){const t=e.graphic;this._hoverGraphic=null,this._isVertex(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(e){const{_graphicAttributes:t,graphic:i}=this,s=i.geometry;if(s==null||s.type!=="polygon"&&s.type!=="polyline")return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:p}=e.attributes,l=V(e.geometry),d=p===0?a+1:p,u=V(r);return u[n].splice(d,0,l),e.attributes={...t,pathIndex:n,pointIndex:d,relatedGraphicIndices:[]},o.push({coordinates:u[n][d],componentIndex:n,vertexIndex:d}),this._updateGraphicGeometry(r),o}_addToSelection(e){const t=q(e);for(const i of t)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(t)}_removeFromSelection(e,t){const{vertices:i}=this.symbols,s=t?i.hover:i.default;this.selectedVertices.remove(e),e.symbol=s,this._emitDeselectEvent([e]),this._updateTooltip()}_clearSelection(){const e=this.selectedVertices.toArray();if(e.length>0){for(const t of e)t.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(e),this._updateTooltip()}}_keyDownHandler(e){this._activeOperationInfo==null&&Ce(e,this.tooltip)||fe.delete.includes(e.key)&&!e.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(e){const t=this.graphic.geometry;if(t==null||t.type!=="polygon"&&t.type!=="polyline"||t.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=t.clone();let r=V(s);const o=[],n=q(e);for(const a of n){const{x:p,y:l}=a.geometry;for(let d=0;d<r.length;d++){const u=r[d];for(let m=0;m<u.length;m++){const[g,f]=u[m];p===g&&l===f&&(o.push({coordinates:r[d][m],componentIndex:d,vertexIndex:m}),r[d].splice(Number(m),1))}}}if(s.type==="polygon")r=r.filter((a=>{if(a.length<2)return!1;const[p,l]=a[0],[d,u]=a[a.length-1];return(a.length!==2||p!==d||l!==u)&&(p===d&&l===u||a.push(a[0]),!0)})),s.rings=r;else{for(const a of r)a.length===1&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(e){return this.vertexGraphics.includes(e)}_isSelected(e){return this._isVertex(e)&&this.selectedVertices.includes(e)}_isMidpoint(e){return this.midpointGraphics.includes(e)}_updateHoverCursor(e){this.view.cursor=this._isMidpoint(e)?"copy":"move"}_updateTooltip(e,t){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s?.geometry;n?.type==="point"?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:e===this.graphic?(i=o.translateGraphic,Be(i,r,this._tooltipsContext,t)):e&&this.selectedVertices.length>1&&(i=o.translateVertices,Ke(i,r,n,this._tooltipsContext,t)),this.activeTooltipInfo=i}_updateGraphicGeometry(e){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=e,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(e,t){const i=new et(this.graphic,e,t);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(e,t){const i=new tt(this.graphic,e,t);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(e,t){if(e==null||t==null){const s=this._activeOperationInfo;if(!s)return;e=s.totalDx,t=s.totalDy}const i=new it(this.graphic,e,t);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(e){const t=new Qe(this.graphic,e,this.selectedVertices.toArray());this.emit("reshape-start",t),this.callbacks.onReshapeStart?.(t)}_emitReshapeEvent(e){const t=new We(this.graphic,e,this.selectedVertices.toArray());this.emit("reshape",t),this.callbacks.onReshape?.(t)}_emitReshapeStopEvent(e){const t=new Je(this.graphic,e,this.selectedVertices.toArray());this.emit("reshape-stop",t),this.callbacks.onReshapeStop?.(t)}_emitSelectEvent(e){const t=new st(e);this.emit("select",t),this.callbacks.onVertexSelect?.(t)}_emitDeselectEvent(e){const t=new ot(e);this.emit("deselect",t),this.callbacks.onVertexDeselect?.(t)}_emitVertexAddEvent(e,t,i){const s=new rt(e,this.graphic,t,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd?.(s)}_emitVertexRemoveEvent(e,t,i){const s=new nt(e,this.graphic,t,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove?.(s)}_logGeometryTypeError(){Y.getLogger(this).error(new xe("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function N(e){const t=V(e.clone());if(e.type==="polygon")for(const i of t){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return t}function Z({attributes:e}){return[e?.pathIndex||0,e?.pointIndex||0]}function q(e){return e instanceof $?[e]:[...e]}function ht(e){const t=e.sourceLayer??e.layer;return Ge(t)?{graphic:e,layer:t}:null}function pt(e){return e.toArray().map((t=>({pathIndex:t.attributes.pathIndex,vertexIndex:t.attributes.pointIndex})))}function ct(e,t,i){const s=i.state.inverseTransform;return{dxMap:s[0]*e+s[2]*t,dyMap:s[1]*e+s[3]*t}}h([c()],v.prototype,"_activeOperationInfo",void 0),h([c()],v.prototype,"_connectedReshapeManager",void 0),h([c()],v.prototype,"_coordinateHelper",null),h([c()],v.prototype,"_editGeometryOperations",void 0),h([c()],v.prototype,"tooltip",void 0),h([c()],v.prototype,"tooltipInfos",void 0),h([c()],v.prototype,"activeTooltipInfo",void 0),h([c({constructOnly:!0})],v.prototype,"automaticAreaMeasurementUtils",void 0),h([c({constructOnly:!0})],v.prototype,"automaticLengthMeasurementUtils",void 0),h([c()],v.prototype,"_selectedVertex",null),h([c()],v.prototype,"_tooltipsContext",null),h([c()],v.prototype,"callbacks",void 0),h([c()],v.prototype,"connectedReshapeProviders",void 0),h([c()],v.prototype,"enableMidpoints",void 0),h([c()],v.prototype,"enableMovement",void 0),h([c()],v.prototype,"enableVertices",void 0),h([c()],v.prototype,"graphic",void 0),h([c()],v.prototype,"highlightName",void 0),h([c()],v.prototype,"highlightsEnabled",void 0),h([c()],v.prototype,"layer",void 0),h([c({readOnly:!0})],v.prototype,"midpointGraphics",void 0),h([c()],v.prototype,"midpointSymbol",void 0),h([c({readOnly:!0})],v.prototype,"selectedVertices",void 0),h([c()],v.prototype,"snappingManager",void 0),h([c({readOnly:!0})],v.prototype,"state",null),h([c()],v.prototype,"symbols",void 0),h([c({type:K})],v.prototype,"sketchOptions",void 0),h([c({readOnly:!0})],v.prototype,"type",void 0),h([c({readOnly:!0})],v.prototype,"vertexGraphics",void 0),h([c()],v.prototype,"view",void 0),v=h([A("esri.views.draw.support.Reshape")],v);const Yt=v;export{Yt as default};

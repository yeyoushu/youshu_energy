const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/js/FeatureLayer-GuWe1Dzy.js","assets/js/index-BJQUWR-1.js","assets/js/vendor-CHjNVy30.js","assets/css/index-xCubpQZP.css","assets/js/test-DMnSxVQs.js","assets/js/station-DfQHTTxy.js","assets/css/test-D2ol9zJk.css","assets/js/FeatureLayerBase-DA-vO86T.js","assets/js/labelingInfo-x9rZLFU5.js","assets/js/SimpleRenderer-BRmEDfY-.js","assets/js/commonProperties-DbyQootx.js","assets/js/colorRamps-CJBsWMSE.js","assets/js/ColorStop-DXxxp7Xk.js","assets/js/visualVariableUtils-L08xCRcr.js","assets/js/jsonUtils-8wfeekkP.js","assets/js/defaults3D-BelXX9Kz.js","assets/js/defaults-CxYRXl92.js","assets/js/defaultsJSON-GKolV7NZ.js","assets/js/UniqueValueRenderer-CGaPvNCx.js","assets/js/diffUtils-3YJ40hic.js","assets/js/RendererLegendOptions-DwnCe4OB.js","assets/js/styleUtils-BLaqcVJr.js","assets/js/NormalizationBinParametersMixin-BE2oKi81.js","assets/js/labelUtils-CDaO9w0G.js","assets/js/LayerFloorInfo-DSub_M9_.js","assets/js/Relationship-BnSDGbHe.js","assets/js/serviceCapabilitiesUtils-4M29g2Nx.js","assets/js/infoFor3D-VMSlSy0z.js","assets/js/editsZScale-COX2mvBz.js","assets/js/queryZScale-CYbRiGtO.js","assets/js/FeatureSet-bSdURJbK.js","assets/js/APIKeyMixin-BwA3mwUn.js","assets/js/ArcGISService-CmgVmE1Y.js","assets/js/CustomParametersMixin-D2Cn_t_n.js","assets/js/DisplayFilteredLayer-BL2BE1X9.js","assets/js/scaleUtils-CNarsAnF.js","assets/js/displayFilterUtils-CZXhgfJ1.js","assets/js/EditBusLayer-Bas8QQcN.js","assets/js/FeatureEffectLayer-ClvoUa6c.js","assets/js/FeatureEffect-C3it-67n.js","assets/js/FeatureFilter-D9XFtlUK.js","assets/js/FeatureReductionLayer-DSBGoDde.js","assets/js/FeatureReductionSelection-C6VG7clU.js","assets/js/jsonUtils-BheKt0Vs.js","assets/js/typeUtils-C6KCJBit.js","assets/js/ClassBreaksRenderer-vhcRb_6K.js","assets/js/LRUCache--7okbBjw.js","assets/js/MemCache-CYsUaMUi.js","assets/js/DictionaryScriptEvaluator-CJ-ldC4v.js","assets/js/FieldsIndex-HhUW4mjA.js","assets/js/UnknownTimeZone-BTcI1Sc1.js","assets/js/ArcadeExpression-DICBwx3X.js","assets/js/TimeOnly-6nuEd6-R.js","assets/js/enum-Dj4NXxC3.js","assets/js/utils-y48t8Afq.js","assets/js/defaultCIMValues-eS1WuCTt.js","assets/js/enums-DCdj6Lab.js","assets/js/heatmapUtils-PVivGZel.js","assets/js/OrderedLayer-CRdUPHs5.js","assets/js/OrderByInfo-DFCpzBzM.js","assets/js/TemporalLayer-C8vxSxjW.js","assets/js/TimeInfo-BDG3uRT1.js","assets/js/TrackableLayer-BWKH3dLC.js","assets/js/FeatureTemplate-DgG3ObRv.js","assets/js/FeatureType-DnJwgYIO.js","assets/js/fieldProperties-C7eLwcbe.js","assets/js/TitleCreator-C_DJuanC.js","assets/js/versionUtils-BnVMs2XP.js","assets/js/styleUtils-cPuj9opO.js","assets/js/popupUtils-D9e_Xuim.js","assets/js/interfaces-CL2NbQte.js"])))=>i.map(i=>d[i]);
import{v as s,w as l,d9 as b,a_ as te,fx as ae,iZ as oe,f as re,x as Q,dX as le,kx as W,cN as H,e4 as u,dg as K,H as M,p as z,cm as ne,fv as ue,bs as pe,iP as ye,s as h,du as de,ky as ce,bx as he,iV as fe,hc as be,V as x,kz as $,e8 as me,aw as U,g9 as ge,av as q,cI as Se,L as _,ey as Ie,fe as N,fP as k,kA as we,cr as ve,bP as R,bQ as E,dE as Ee,kB as G,m as Z,ga as xe,ez as Le,e9 as X,fD as Y,fO as ee}from"./test-DMnSxVQs.js";import{a as Oe}from"./index-BJQUWR-1.js";import{S as Te}from"./QueryTask-D3A8noJr.js";import{i as Fe}from"./OrderedLayer-CRdUPHs5.js";import{o as Pe,p as _e,b as De,A as Ae}from"./labelingInfo-x9rZLFU5.js";import{n as qe}from"./FeatureType-DnJwgYIO.js";import{Z as Ce}from"./FieldsIndex-HhUW4mjA.js";import{i as Ve}from"./LayerFloorInfo-DSub_M9_.js";import{n as Re}from"./OrderByInfo-DFCpzBzM.js";import{n as je}from"./Relationship-BnSDGbHe.js";import{c as Me}from"./serviceCapabilitiesUtils-4M29g2Nx.js";import{u as $e,m as Ne}from"./typeUtils-C6KCJBit.js";import{p as ke}from"./popupUtils-D9e_Xuim.js";import{o as Be}from"./sublayerUtils-DniI2t7F.js";const ot=y=>{let e=class extends y{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(t,r){const i=r.capabilities&&r.capabilities.split(",").map((se=>se.toLowerCase().trim()));if(!i)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const o=this.type,n=o!=="tile"&&!!r.supportsDynamicLayers,p=i.includes("query"),d=i.includes("map"),m=!!r.exportTilesAllowed,g=i.includes("tilemap"),S=i.includes("data"),w=o!=="tile"&&(!r.tileInfo||n),O=o!=="tile"&&(!r.tileInfo||n),T=o!=="tile",c=o!=="tile"&&n&&r.currentVersion>=11.1,f=r.cimVersion?le.parse(r.cimVersion):null,F=f?.greaterEqual(1,4)??!1,P=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:d,supportsExportTiles:m,supportsIdentify:p,supportsQuery:S,supportsTileMap:g},exportMap:d?{supportsArcadeExpressionForLabeling:F,supportsCIMSymbols:P,supportsDynamicLayers:n,supportsSublayerOrderBy:c,supportsSublayerDefinitionExpression:O,supportsSublayerVisibility:w,supportsSublayersChanges:T}:null,exportTiles:m?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(t,r){let i=r.currentVersion;return i||(i=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),i}async fetchRelatedService(t){const r=this.portalItem;if(!r||!W(r))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},t).then((o=>o.find((n=>n.type==="Feature Service"))??null),(()=>null)));const i=await this._relatedFeatureServicePromise;return H(t),i?{itemId:i.id,url:i.url}:null}async fetchSublayerInfo(t,r){const{source:i}=t;if(this?.portalItem&&this.type==="tile"&&i?.type==="map-layer"&&W(this.portalItem)&&t.originIdOf("url")<u.SERVICE){const p=await this.fetchRelatedService(r);p&&(t.url=K(p.url,i.mapLayerId.toString()),t.layerItemId=p.itemId)}const{url:o}=t;let n;if(i.type==="data-layer")n=(await M(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(o&&t.originIdOf("url")>u.SERVICE)try{const p=await this._fetchAllLayersAndTablesFromService(o),d=z(o)?.sublayer??i.mapLayerId;n=p.get(d)}catch{}else{let p=t.id;i?.type==="map-layer"&&(p=i.mapLayerId);try{n=(await this.fetchAllLayersAndTables(r)).get(p)}catch{}}return n}async fetchAllLayersAndTables(t){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,t)}async _fetchAllLayersAndTablesFromService(t,r){await this.load(r),this._allLayersAndTablesMap||=new Map;const i=z(t),o=ne(this._allLayersAndTablesMap,i?.url.path,(()=>M(K(i?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((p=>{const d=new Map,{layers:m,tables:g}=p.data,S=[...m??[],...g??[]];for(const w of S)d.set(w.id,w);return{result:d}}),(p=>({error:p}))))),n=await o;if(H(r),"result"in n)return n.result;throw n.error}};return s([l({readOnly:!0})],e.prototype,"capabilities",void 0),s([b("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],e.prototype,"readCapabilities",null),s([l({json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0),s([l({type:te})],e.prototype,"fullExtent",void 0),s([l(ae)],e.prototype,"id",void 0),s([l({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],e.prototype,"legendEnabled",void 0),s([l(oe)],e.prototype,"popupEnabled",void 0),s([l({type:re})],e.prototype,"spatialReference",void 0),s([l({readOnly:!0})],e.prototype,"version",void 0),s([b("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],e.prototype,"readVersion",null),e=s([Q("esri.layers.mixins.ArcGISMapService")],e),e};var C;function j(y){return y?.type==="esriSMS"}function J(y,e,t){const r=t.minimumWritableOrigin||t.origin;return!!r&&y.originIdOf(e)>=k(r)}function L(y,e,t){const r=J(this,e,t);return{ignoreOrigin:!0,allowNull:r,enabled:!!t&&t.layer?.type==="map-image"&&(t.writeSublayerStructure||r)}}function B(y,e,t){return{enabled:!!t&&t.layer?.type==="tile"&&(J(this,e,t)||this._isOverridden(e))}}function I(y,e,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function V(y,e,t){return{ignoreOrigin:!0,enabled:!!t?.writeSublayerStructure&&this.originIdOf(e)>u.SERVICE}}function D(y,e,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||J(this,e,t))}}let Qe=0;const Ue=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);var v;let a=(v=class extends ue(pe.IdentifiableMixin(ye)){constructor(e){super(e),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:t,url:r}=this;if(!t&&!r)throw new h("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await M(r,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:de(r)}))})()),this}readCapabilities(e,t){t=t.layerDefinition||t;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:o},query:{supportsFormatPBF:n,supportsOrderBy:p,supportsPagination:d},data:{supportsAttachment:m},queryRelated:g}=Me(t,this.url);return{attachment:{supportsOrderByFields:r?.supportsOrderByFields??!1,supportsResize:r?.supportsResize??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:o},data:{supportsAttachment:m},query:{supportsFormatPBF:n,supportsOrderBy:p,supportsPagination:d},queryRelated:g}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new Ce(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields){for(const r of t.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get id(){return this._get("id")??Qe++}set id(e){this._get("id")!==e&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return t.type==="Table"}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map((o=>o.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach((t=>t.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,t){return(t=t.layerDefinition||t).objectIdField?t.objectIdField:t.fields?.find((i=>i.type==="esriFieldTypeOID"))?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){const{layerDefinition:r}=t;return 1-.01*(r?.transparency??r?.drawingInfo?.transparency??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=ce(this.parent.id):t.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:e,fieldsIndex:t,layer:r,url:i}=this,{spatialReference:o}=r,n="gdbVersion"in r?r.gdbVersion:void 0,p=he("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new Te({fieldsIndex:t,gdbVersion:n,pbfSupported:p,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:o,url:i})}set renderer(e){if(fe(e,this.fieldsIndex),e){for(const t of e.symbols)if(be(t)){x.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new $({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return me(U.ofType(C),e)}writeSublayers(e,t,r){this.sublayers?.length&&(t[r]=this.sublayers.map((i=>i.id)).toArray().reverse())}readTitle(e,t){return t.layerDefinition?.name??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find((o=>o.name.toLowerCase()===r));i&&(r=i.name)}return r}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,t?.type==="map-layer")return`${e.path}/${t.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${ge(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=q(this),t=new C;return q(t).store=e.clone(Ue),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return ke(this,e)}createQuery(){return new Se({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const e=(await Oe(async()=>{const{default:o}=await import("./FeatureLayer-GuWe1Dzy.js");return{default:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70]))).default,{layer:t,url:r}=this;let i;if(r&&this.originIdOf("url")>u.SERVICE)i=new e({url:r});else{if(!t?.parsedUrl)throw new h("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const o=t.parsedUrl;i=new e({url:o.path}),o&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return t?.refreshInterval!=null&&(i.refreshInterval=t.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=_(this.floorInfo)),this.originIdOf("labelingInfo")>u.SERVICE&&(i.labelingInfo=_(this.labelingInfo)),this.originIdOf("labelsVisible")>u.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>u.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>u.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>u.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>u.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>u.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>u.DEFAULTS&&(i.popupTemplate=_(this.popupTemplate)),this.originIdOf("renderer")>u.SERVICE&&(i.renderer=_(this.renderer)),this.source?.type==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>u.DEFAULTS&&(i.title=this.title),t?.type==="map-image"&&t.originIdOf("customParameters")>u.DEFAULTS&&(i.customParameters=t.customParameters),t?.type==="tile"&&t.originIdOf("customParameters")>u.DEFAULTS&&(i.customParameters=t.customParameters),i}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return Pe(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t?.feature,i=this.getFeatureType(r);if(i){const o=i.domains&&i.domains[e];if(o&&o.type!=="inherited")return o}return this._getLayerDomain(e)}async queryAttachments(e,t){await this.load(),e=_e.from(e);const r=this.capabilities;if(!r?.data?.supportsAttachment)throw new h("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:o,globalIds:n,num:p,size:d,start:m,where:g}=e;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||n?.length>0||d?.length>0||p||m||g))throw new h("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(o?.length||n?.length||g))throw new h("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!r?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,t)}async queryFeatureCount(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatureCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryFeatures(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(e,{...t,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(r?.features)for(const i of r.features)i.sourceLayer=this;return r}async queryObjectIds(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryObjectIds:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForIds(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeatures(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryRelatedFeatures:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new h("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}toExportImageJSON(e){const t={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=Ie(e,this.definitionExpression);r!=null&&(t.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((n,p)=>(n[p]=this.originIdOf(p),n)),{});if(Object.keys(i).some((n=>i[n]>u.SERVICE))){const n=t.drawingInfo={};if(i.renderer>u.SERVICE&&(n.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>u.SERVICE&&(n.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>u.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some((d=>!d.labelPlacement))&&x.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let p=this.labelingInfo;this.geometryType!=null&&(p=De(this.labelingInfo,N.toJSON(this.geometryType))),n.showLabels=!0,n.labelingInfo=p.filter((d=>d.labelPlacement)).map((d=>d.toJSON({origin:"service",layer:this.layer})))}else n.showLabels=!1;i.opacity>u.SERVICE&&(n.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(n.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>u.SERVICE&&(t.orderBy=this.orderBy?.map((n=>n.toJSON()))??null),t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(t=>{t.color||t.style!=="esriSMSX"&&t.style!=="esriSMSCross"||(t.outline?.color?t.color=t.outline.color:t.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of r)j(i.symbol)&&t(i.symbol);"symbol"in e&&j(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&j(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){const r=this.layer,i=this._get(e);let o,n;switch(e){case"definitionExpression":case"floorInfo":o="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":o="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":o="supportsDynamicLayers",n="supportsModification";break;case"orderBy":o="supportsSublayerOrderBy",n="supportsModification"}const p=q(this).getDefaultOrigin();if(p!=="service"){if(o&&this.layer?.capabilities?.exportMap?.[o]===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${o}'`);if(n&&this.capabilities?.exportMap[n]===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${n}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,t),p!=="service"&&i!==t&&r&&r.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach((r=>{r.parent=null,r.layer=null})),this.removeAllHandles()),e&&(e.forEach((r=>{r.parent=this,r.layer=this.layer})),this.addHandles([e.on("after-add",(({item:r})=>{r.parent=this,r.layer=this.layer})),e.on("after-remove",(({item:r})=>{r.parent=null,r.layer=null})),e.on("before-changes",(r=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(x.getLogger(this).error(new h("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())}))]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;x.getLogger(i).error(new h("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}},C=v,v.test={isMapImageLayerOverridePolicy:e=>e===V||e===I||e===L,isTileImageLayerOverridePolicy:e=>e===B},v);s([l({type:we,json:{name:"attributeTableInfo",write:{overridePolicy:L},origins:{"web-scene":{write:!1}}}})],a.prototype,"attributeTableTemplate",void 0),s([l({readOnly:!0})],a.prototype,"capabilities",void 0),s([b("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],a.prototype,"readCapabilities",null),s([l()],a.prototype,"defaultPopupTemplate",null),s([l({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:L}}})],a.prototype,"definitionExpression",null),s([l({readOnly:!0})],a.prototype,"effectiveScaleRange",null),s([b("service","maxScaleRange",["minScale","maxScale"])],a.prototype,"readMaxScaleRange",null),s([l({type:[ve],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],a.prototype,"fields",void 0),s([l({readOnly:!0})],a.prototype,"fieldsIndex",null),s([l({type:Ve,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:L},origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"floorInfo",null),s([l({type:te,json:{read:{source:"layerDefinition.extent"}}})],a.prototype,"fullExtent",void 0),s([l({type:N.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:N.read}}}}})],a.prototype,"geometryType",void 0),s([l({type:String})],a.prototype,"globalIdField",void 0),s([b("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],a.prototype,"readGlobalIdFieldFromService",null),s([l({type:R,json:{write:{ignoreOrigin:!0}}})],a.prototype,"id",null),s([l({readOnly:!0})],a.prototype,"isTable",void 0),s([b("service","isTable",["type"])],a.prototype,"readIsTable",null),s([l({value:null,type:[Ae],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:V}}})],a.prototype,"labelingInfo",null),s([E("labelingInfo")],a.prototype,"writeLabelingInfo",null),s([l({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:I}}})],a.prototype,"labelsVisible",null),s([l({value:null})],a.prototype,"layer",null),s([l({type:String,json:{write:{overridePolicy:B}}})],a.prototype,"layerItemId",void 0),s([l({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:D}}})],a.prototype,"legendEnabled",void 0),s([l({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],a.prototype,"listMode",null),s([l({type:Number,value:0,json:{write:{overridePolicy:I}}})],a.prototype,"minScale",null),s([b("minScale",["minScale","layerDefinition.minScale"])],a.prototype,"readMinScale",null),s([l({type:Number,value:0,json:{write:{overridePolicy:I}}})],a.prototype,"maxScale",null),s([b("maxScale",["maxScale","layerDefinition.maxScale"])],a.prototype,"readMaxScale",null),s([l()],a.prototype,"objectIdField",void 0),s([b("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],a.prototype,"readObjectIdFieldFromService",null),s([l({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:I}}})],a.prototype,"opacity",null),s([b("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],a.prototype,"readOpacity",null),s([E("opacity")],a.prototype,"writeOpacity",null),s([l({value:null,type:[Re],json:{name:"layerDefinition.orderBy",read:{reader:Fe},write:{overridePolicy:L},origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"orderBy",null),s([l({json:{type:R,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:I}}})],a.prototype,"parent",void 0),s([E("parent")],a.prototype,"writeParent",null),s([l({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(y,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy:D,writer(y,e,t){e[t]=!y}}}})],a.prototype,"popupEnabled",void 0),s([l({type:Ee,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:D}}})],a.prototype,"popupTemplate",void 0),s([l({readOnly:!0})],a.prototype,"queryTask",null),s([l({type:[je],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],a.prototype,"relationships",void 0),s([l({types:Ne,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:V},origins:{"web-scene":{types:$e,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:V}}}}})],a.prototype,"renderer",null),s([l({types:{key:"type",base:null,typeMap:{"data-layer":G,"map-layer":$}},cast(y){if(y){if("mapLayerId"in y)return Z($,y);if("dataSource"in y)return Z(G,y)}return y},json:{name:"layerDefinition.source",write:{overridePolicy:I}}})],a.prototype,"source",null),s([l()],a.prototype,"sourceJSON",void 0),s([l({type:re,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],a.prototype,"spatialReference",void 0),s([l({value:null,json:{type:[R],write:{target:"subLayerIds",allowNull:!0,overridePolicy:I}}})],a.prototype,"sublayers",null),s([xe("sublayers")],a.prototype,"castSublayers",null),s([E("sublayers")],a.prototype,"writeSublayers",null),s([l({type:String,json:{name:"name",write:{overridePolicy:D}}})],a.prototype,"title",void 0),s([b("service","title",["name","layerDefinition.name"])],a.prototype,"readTitle",null),s([l({type:String})],a.prototype,"typeIdField",void 0),s([l({json:{read:!1},readOnly:!0,value:"sublayer"})],a.prototype,"type",void 0),s([b("typeIdField",["layerDefinition.typeIdField"])],a.prototype,"readTypeIdField",null),s([l({type:[qe],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],a.prototype,"types",void 0),s([l({type:String,json:{name:"layerUrl",write:{overridePolicy:B}}})],a.prototype,"url",null),s([l({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:I}}})],a.prototype,"visible",null),s([E("visible")],a.prototype,"writeVisible",null),a=C=s([Q("esri.layers.support.Sublayer")],a);function Je(y,e){const t=[],r={};return y&&y.forEach((i=>{const o=new a;if(o.read(i,e),r[o.id]=o,i.parentLayerId!=null&&i.parentLayerId!==-1){const n=r[i.parentLayerId];n.sublayers||(n.sublayers=[]),n.sublayers.unshift(o)}else t.unshift(o)})),t}const A=U.ofType(a);function ie(y,e){y&&y.forEach((t=>{e(t),t.sublayers&&t.sublayers.length&&ie(t.sublayers,e)}))}const lt=y=>{let e=class extends y{constructor(...t){super(...t),this.allSublayers=new Le({getCollections:()=>[this.sublayers],getChildrenFunction:r=>r.sublayers}),this.sublayersSourceJSON={[u.SERVICE]:{},[u.PORTAL_ITEM]:{},[u.WEB_SCENE]:{},[u.WEB_MAP]:{},[u.LINK_CHART]:{}},this.subtables=null,this.addHandles([X((()=>this.sublayers),((r,i)=>this._handleSublayersChange(r,i)),Y),X((()=>this.subtables),((r,i)=>this._handleSublayersChange(r,i)),Y)])}destroy(){this.allSublayers.destroy()}readSublayers(t,r){if(!r||!t)return;const{sublayersSourceJSON:i}=this,o=k(r.origin);if(o<u.SERVICE||(i[o]={context:r,visibleLayers:t.visibleLayers||i[o].visibleLayers,layers:t.layers||i[o].layers},o>u.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:n,origin:p}=this.createSublayersForOrigin("web-document"),d=q(this);d.setDefaultOrigin(p),this._set("sublayers",new A(n)),d.setDefaultOrigin("user")}findSublayerById(t){return this.allSublayers.find((r=>r.id===t))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(t){let r;const i=k(t==="web-document"?"web-map":t);let o=u.SERVICE,n=this.sublayersSourceJSON[u.SERVICE].layers,p=this.sublayersSourceJSON[u.SERVICE].context,d=null;const m=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter((c=>c<=i));for(const c of m){const f=this.sublayersSourceJSON[c];Be(f.layers)&&(o=c,n=f.layers,p=f.context,f.visibleLayers&&(d={visibleLayers:f.visibleLayers,context:f.context}))}const g=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter((c=>c>o&&c<=i));let S=null;for(const c of g){const{layers:f,visibleLayers:F,context:P}=this.sublayersSourceJSON[c];f&&(S={layers:f,context:P},r??=c),F&&(d={visibleLayers:F,context:P})}const w=Je(n,p),O=new Map,T=new Set;if(S)for(const c of S.layers)O.set(c.id,c);if(d?.visibleLayers)for(const c of d.visibleLayers)T.add(c);return ie(w,(c=>{S&&c.read(O.get(c.id),S.context),d&&c.read({defaultVisibility:T.has(c.id)},d.context)})),{origin:ee(o),originWithPartialOverrides:r?ee(r):null,sublayers:new A({items:w})}}read(t,r){super.read(t,r),this.readSublayers(t,r)}_handleSublayersChange(t,r){r&&(r.forEach((i=>{i.parent=null,i.layer=null})),this.removeHandles("sublayers-owner")),t&&(t.forEach((i=>{i.parent=this,i.layer=this})),this.addHandles([t.on("after-add",(({item:i})=>{i.parent=this,i.layer=this})),t.on("after-remove",(({item:i})=>{i.parent=null,i.layer=null}))],"sublayers-owner"),this.type==="tile"&&this.addHandles(t.on("before-changes",(i=>{x.getLogger("esri.layers.TileLayer").error(new h("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),i.preventDefault()})),"sublayers-owner"))}};return s([l({readOnly:!0})],e.prototype,"allSublayers",void 0),s([l({readOnly:!0,type:U.ofType(a)})],e.prototype,"serviceSublayers",void 0),s([l({value:null,type:A,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0),s([l({readOnly:!0})],e.prototype,"sublayersSourceJSON",void 0),s([l({type:A,json:{read:{source:"tables"}}})],e.prototype,"subtables",void 0),e=s([Q("esri.layers.mixins.SublayersOwner")],e),e};export{a,ot as f,lt as m};
